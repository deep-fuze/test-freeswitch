BASE=../..
switch_srcdir := $(CURDIR)/../..
switch_builddir := $(CURDIR)/../..
GETLIB=cd $(switch_srcdir)/libs && $(SHELL) $(switch_builddir)/build/getlib.sh.in

WEBRTC=libwebrtccore.a
WEBRTC_DIR=$(switch_srcdir)/libs/webrtcneteq
WEBRTC_BUILDDIR=$(switch_builddir)/libs/webrtcneteq/src

WEBRTC_OBJ_DIR=$(WEBRTC_DIR)/meetings-third-party/src/cmake/build/webrtc/src/out/Linux/obj/webrtc

$(WEBRTC_DIR)/meetings-third-party:
	git clone https://github.com/fuze/meetings-third-party

.step1: $(WEBRTC_DIR)/meetings-third-party
	cd meetings-third-party/src/cmake && ./build_Linux_WebRTC_freeswitch.sh
	touch .step1

.installed_webrtc: .step1
	mv $(WEBRTC_OBJ_DIR)/common_audio/common_audio_c/cross_correlation.o $(WEBRTC_OBJ_DIR)/common_audio/common_audio_c/cross_correlation_2.o
	find $(WEBRTC_OBJ_DIR)/modules/audio_coding -name "*.o"	| xargs ar cru libwebrtccore.a
	ar cru libwebrtccore.a $(WEBRTC_OBJ_DIR)/modules/audio_coding/isac_c/fft.o
	ar cru libwebrtccore.a $(WEBRTC_OBJ_DIR)/common_audio/common_audio_c/*.o
	find $(WEBRTC_OBJ_DIR) -name "checks.o" | xargs ar cru libwebrtccore.a
	ar cru libwebrtccore.a $(WEBRTC_OBJ_DIR)/webrtc_common/common_types.o
	ar cru libwebrtccore.a $(WEBRTC_OBJ_DIR)/modules/audio_coding/builtin_audio_decoder_factory_internal/builtin_audio_decoder_factory_internal.o
	ar cru libwebrtccore.a $(WEBRTC_OBJ_DIR)/api/audio_codecs/builtin_audio_decoder_factory/builtin_audio_decoder_factory.o
	ar cru libwebrtccore.a $(WEBRTC_OBJ_DIR)/api/audio_codecs/audio_codecs_api/*
	ar cru libwebrtccore.a $(WEBRTC_OBJ_DIR)/rtc_base/rtc_base_approved/*.o
	ar cru libwebrtccore.a $(WEBRTC_OBJ_DIR)/modules/audio_coding/neteq/*.o
	ar cru libwebrtccore.a $(WEBRTC_OBJ_DIR)/system_wrappers/metrics_default/metrics_default.o
	ar cru libwebrtccore.a $(WEBRTC_OBJ_DIR)/common_audio/common_audio_c/cross_correlation_2.o
	find $(WEBRTC_OBJ_DIR)/common_audio/ -name "*.o" | xargs ar cru libwebrtccore.a
	ranlib libwebrtccore.a
	touch .installed_webrtc

all: .installed_webrtc
