cscope 15 /home/raghu/git-views/freeswitch-fuzebox-2/libs/webrtcneteq/src               0000564179
	@accelerate.c

16 
	~"d•.h
"

18 
	~"sig«l_¥o˚ssög_libøry.h
"

20 
	~"d•_hñpfun˘i⁄s.h
"

21 
	~"√ãq_îr‹_codes.h
"

23 
	#ACCELERATE_CORR_LEN
 50

	)

24 
	#ACCELERATE_MIN_LAG
 10

	)

25 
	#ACCELERATE_MAX_LAG
 60

	)

26 
	#ACCELERATE_DOWNSAMPLED_LEN
 (
ACCELERATE_CORR_LEN
 + 
ACCELERATE_MAX_LAG
)

	)

38 
	#SCRATCH_PW16_DS_SPEECH
 0

	)

39 
	#SCRATCH_PW32_CORR
 
ACCELERATE_DOWNSAMPLED_LEN


	)

40 
	#SCRATCH_PW16_CORR
 0

	)

68 
WebRtcNëEQ_Ac˚Àøã
(
DSPIn°_t
 *
ö°
,

69 #ifde‡
SCRATCH


70 
öt16_t
 *
pw16_s¸©chPå
,

72 c⁄° 
öt16_t
 *
pw16_decoded
, 
Àn
,

73 
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_Àn
,

74 
öt16_t
 
BGN⁄ly
)

77 #ifde‡
SCRATCH


79 
öt16_t
 *
	gpw16_downSampS≥ech
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_DS_SPEECH
;

80 
öt32_t
 *
	gpw32_c‹r
 = (öt32_t*Ë(
pw16_s¸©chPå
 + 
SCRATCH_PW32_CORR
);

81 
öt16_t
 *
	gpw16_c‹r
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_CORR
;

84 
öt16_t
 
	gpw16_downSampS≥ech
[
ACCELERATE_DOWNSAMPLED_LEN
];

85 
öt32_t
 
	gpw32_c‹r
[
ACCELERATE_CORR_LEN
];

86 
öt16_t
 
	gpw16_c‹r
[
ACCELERATE_CORR_LEN
];

88 
öt16_t
 
	gw16_decodedMax
 = 0;

89 
öt16_t
 
	gw16_tmp
;

90 
öt16_t
 
	gw16_tmp2
;

91 
öt32_t
 
	gw32_tmp
;

92 
öt32_t
 
	gw32_tmp2
;

94 c⁄° 
öt16_t
 
	gw16_°¨tLag
 = 
ACCELERATE_MIN_LAG
;

95 c⁄° 
öt16_t
 
	gw16_ídLag
 = 
ACCELERATE_MAX_LAG
;

96 c⁄° 
öt16_t
 
	gw16_c‹rLí
 = 
ACCELERATE_CORR_LEN
;

97 c⁄° 
öt16_t
 *
	gpw16_vec1
, *
	gpw16_vec2
;

98 
öt16_t
 *
	gpw16_ve˘mp
;

99 
öt16_t
 
	gw16_öc
, 
	gw16_°¨tÁ˘
;

100 
öt16_t
 
	gw16_be°Index
, 
	gw16_be°VÆ
;

101 
öt16_t
 
	gw16_VAD
 = 1;

102 
öt16_t
 
	gfsMu…
;

103 
öt16_t
 
	gfsMu…120
;

104 
öt32_t
 
	gw32_í1
, 
	gw32_í2
, 
	gw32_cc
;

105 
öt16_t
 
	gw16_í1
, 
	gw16_í2
;

106 
öt16_t
 
	gw16_í1SˇÀ
, 
	gw16_í2SˇÀ
;

107 
öt16_t
 
	gw16_sqπEn1En2
;

108 
öt16_t
 
	gw16_be°C‹r
 = 0;

109 
	gok
;

111 #ifde‡
NETEQ_STEREO


112 
Ma°îSœveInfo
 *
	gmsInfo
 = 
ö°
->
msInfo
;

115 
	gfsMu…
 = 
WebRtcNëEQ_CÆcFsMu…
(
ö°
->
fs
);

118 
	gfsMu…120
 = (
öt16_t
Ë
WEBRTC_SPL_MUL_16_16
(
fsMu…
, 120);

120 
	gö°
->
	gEx∑ndIn°
.
	gw16_c⁄£cExp
 = 0;

124 i‡(
	gÀn
 < (
	göt16_t
Ë
WEBRTC_SPL_MUL_16_16
((120 + 119), 
fsMu…
))

127 
	gö°
->
	gw16_mode
 = 
MODE_UNSUCCESS_ACCELERATE
;

128 *
	gpw16_Àn
 = 
Àn
;

131 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, (
öt16_t
Ë
Àn
);

133  
	gNETEQ_OTHER_ERROR
;

141 i‡(
	gBGN⁄ly
)

144 
	gw16_be°Index
 = 
DEFAULT_TIME_ADJUST
 * 
WEBRTC_SPL_LSHIFT_W16
(
fsMu…
, 3);

147 i‡(
	gw16_be°Index
 > 
	gÀn
)

149 
	gö°
->
	gw16_mode
 = 
MODE_UNSUCCESS_ACCELERATE
;

150 *
	gpw16_Àn
 = 
Àn
;

153 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, (
öt16_t
Ë
Àn
);

155  
	gNETEQ_OTHER_ERROR
;

159 *
	gpw16_Àn
 = 
Àn
 - 
w16_be°Index
;

162 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, *
pw16_Àn
);

165 
	gö°
->
	gw16_mode
 = 
MODE_LOWEN_ACCELERATE
;

168 
	gö°
->
	g°©In°
.
	gac˚ÀøãLígth
 +
w16_be°Index
;

170 
	gö°
->
	ga˘ivôy_°©s
.
	gac˚Àøã_bgn_ßm∂es
 +
w16_be°Index
;

175 #ifde‡
NETEQ_STEREO


178 i‡(
	gmsInfo
 =
NULL
)

181  
MASTER_SLAVE_ERROR
;

184 i‡(
	gmsInfo
->
	gmsMode
 !
NETEQ_SLAVE
)

197 
w16_decodedMax
 = 
WebRtcS∂_MaxAbsVÆueW16
(
pw16_decoded
, (
öt16_t
Ë
Àn
);

200 
	gok
 = 
WebRtcNëEQ_DownSam∂eTo4kHz
(
pw16_decoded
, 
Àn
, 
ö°
->
fs
, 
pw16_downSampS≥ech
,

201 
ACCELERATE_DOWNSAMPLED_LEN
, 1 );

202 i‡(
	gok
 != 0)

205 
ö°
->
w16_mode
 = 
MODE_UNSUCCESS_ACCELERATE
;

206 *
	gpw16_Àn
 = 
Àn
;

208 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, (
öt16_t
Ë
Àn
);

209  
	gNETEQ_OTHER_ERROR
;

216 
	gw16_tmp
 = 6 - 
WebRtcS∂_N‹mW32
(
WEBRTC_SPL_MUL_16_16
(
w16_decodedMax
, w16_decodedMax));

217 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(0, 
w16_tmp
);

220 
WebRtcNëEQ_CrossC‹r
(

221 
pw32_c‹r
, &
pw16_downSampS≥ech
[
w16_ídLag
],

222 &
pw16_downSampS≥ech
[
w16_ídLag
 - 
w16_°¨tLag
], 
w16_c‹rLí
,

223 (
öt16_t
Ë(
w16_ídLag
 - 
w16_°¨tLag
), 
w16_tmp
, -1);

226 
	gw32_tmp
 = 
WebRtcS∂_MaxAbsVÆueW32
(
pw32_c‹r
, 
w16_c‹rLí
);

227 
	gw16_tmp
 = 17 - 
WebRtcS∂_N‹mW32
(
w32_tmp
);

228 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(0, 
w16_tmp
);

230 
WebRtcS∂_Ve˘‹BôShi·W32ToW16
(
pw16_c‹r
, 
w16_c‹rLí
, 
pw32_c‹r
, 
w16_tmp
);

232 #ifde‡
NETEQ_STEREO


235 i‡((
	gmsInfo
->
	gmsMode
 =
NETEQ_MASTER
Ë|| (
msInfo
->
msMode
 =
NETEQ_MONO
))

238 
WebRtcNëEQ_PókDëe˘i⁄
(
pw16_c‹r
, (
öt16_t
Ë
w16_c‹rLí
, 1, 
fsMu…
,

239 &
w16_be°Index
, &
w16_be°VÆ
);

243 
	gw16_be°Index
 = 
w16_be°Index
 + 
w16_°¨tLag
 * 
WEBRTC_SPL_LSHIFT_W16
(
fsMu…
, 1);

246 
	gmsInfo
->
	gbe°Index
 = 
w16_be°Index
;

248 i‡(
	gmsInfo
->
	gmsMode
 =
NETEQ_SLAVE
)

250 i‡(
msInfo
->
exåaInfo
 =
ACC_FAIL
)

253 
w16_be°Index
 = 0;

258 
	gw16_be°Index
 = 
msInfo
->
be°Index
;

264  
	gMASTER_SLAVE_ERROR
;

270 
WebRtcNëEQ_PókDëe˘i⁄
(
pw16_c‹r
, (
öt16_t
Ë
w16_c‹rLí
, 1, 
fsMu…
,

271 &
w16_be°Index
, &
w16_be°VÆ
);

275 
	gw16_be°Index
 = 
w16_be°Index
 + 
w16_°¨tLag
 * 
WEBRTC_SPL_LSHIFT_W16
(
fsMu…
, 1);

280 #ifde‡
NETEQ_STEREO


282 i‡(
	gmsInfo
->
	gmsMode
 !
NETEQ_SLAVE
)

297 
w16_tmp
 = (31

298 - 
WebRtcS∂_N‹mW32
(
WEBRTC_SPL_MUL_16_16
(
w16_decodedMax
, w16_decodedMax)));

299 
	gw16_tmp
 +(31 - 
WebRtcS∂_N‹mW32
(
w16_be°Index
));

300 
	gw16_tmp
 -= 31;

301 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(0, 
w16_tmp
);

304 
	gpw16_vec1
 = &
pw16_decoded
[
fsMu…120
 - 
w16_be°Index
];

306 
	gpw16_vec2
 = &
pw16_decoded
[
fsMu…120
];

309 
	gw32_í1
 = 
WebRtcNëEQ_DŸW16W16
((
öt16_t
*Ë
pw16_vec1
,

310 (
öt16_t
*Ë
pw16_vec1
, 
w16_be°Index
, 
w16_tmp
);

311 
	gw32_í2
 = 
WebRtcNëEQ_DŸW16W16
((
öt16_t
*Ë
pw16_vec2
,

312 (
öt16_t
*Ë
pw16_vec2
, 
w16_be°Index
, 
w16_tmp
);

315 
	gw32_cc
 = 
WebRtcNëEQ_DŸW16W16
((
öt16_t
*Ë
pw16_vec1
, (öt16_t*Ë
pw16_vec2
,

316 
w16_be°Index
, 
w16_tmp
);

320 
	gw32_tmp
 = 
WEBRTC_SPL_RSHIFT_W32
(
w32_í1
 + 
w32_í2
, 4);

321 i‡(
	gö°
->
	gBGNIn°
.
	gw16_öôülized
 == 1)

323 
w32_tmp2
 = 
ö°
->
BGNIn°
.
w32_íîgy
;

328 
	gw32_tmp2
 = 75000;

330 
	gw16_tmp2
 = 16 - 
WebRtcS∂_N‹mW32
(
w32_tmp2
);

331 
	gw16_tmp2
 = 
WEBRTC_SPL_MAX
(0, 
w16_tmp2
);

332 
	gw32_tmp
 = 
WEBRTC_SPL_RSHIFT_W32
(
w32_tmp
, 
w16_tmp2
);

333 
	gw16_tmp2
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(
w32_tmp2
, 
w16_tmp2
);

334 
	gw32_tmp2
 = 
WEBRTC_SPL_MUL_16_16
(
w16_be°Index
, 
w16_tmp2
);

338 i‡(
WebRtcS∂_N‹mW32
(
w32_tmp
Ë< 
WEBRTC_SPL_LSHIFT_W32
(
w16_tmp
,1))

341 
öt16_t
 
	gãmpshi·
 = 
WebRtcS∂_N‹mW32
(
w32_tmp
);

342 
	gw32_tmp
 = 
WEBRTC_SPL_LSHIFT_W32
(
w32_tmp
, 
ãmpshi·
);

343 
	gw32_tmp2
 = 
WEBRTC_SPL_RSHIFT_W32
(
w32_tmp2
,

344 
WEBRTC_SPL_LSHIFT_W32
(
w16_tmp
,1Ë- 
ãmpshi·
);

348 
	gw32_tmp
 = 
WEBRTC_SPL_LSHIFT_W32
(
w32_tmp
,

349 
WEBRTC_SPL_LSHIFT_W32
(
w16_tmp
,1));

352 i‡(
	gw32_tmp
 <
w32_tmp2
)

355 
w16_VAD
 = 0;

356 
	gw16_be°C‹r
 = 0;

361 
	gw16_VAD
 = 1;

366 
	gw16_í1SˇÀ
 = 16 - 
WebRtcS∂_N‹mW32
(
w32_í1
);

367 
	gw16_í1SˇÀ
 = 
WEBRTC_SPL_MAX
(0, 
w16_í1SˇÀ
);

368 
	gw16_í2SˇÀ
 = 16 - 
WebRtcS∂_N‹mW32
(
w32_í2
);

369 
	gw16_í2SˇÀ
 = 
WEBRTC_SPL_MAX
(0, 
w16_í2SˇÀ
);

372 i‡((
	gw16_í1SˇÀ
 + 
	gw16_í2SˇÀ
) & 1)

374 
	gw16_í1SˇÀ
 += 1;

378 
	gw16_í1
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(
w32_í1
, 
w16_í1SˇÀ
);

379 
	gw16_í2
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(
w32_í2
, 
w16_í2SˇÀ
);

382 
	gw32_tmp
 = 
WEBRTC_SPL_MUL_16_16
(
w16_í1
, 
w16_í2
);

385 
	gw16_sqπEn1En2
 = (
öt16_t
Ë
WebRtcS∂_SqπFlo‹
(
w32_tmp
);

388 
	gw16_tmp
 = 14 - 
WEBRTC_SPL_RSHIFT_W16
(
w16_í1SˇÀ
+
w16_í2SˇÀ
, 1);

389 
	gw32_cc
 = 
WEBRTC_SPL_SHIFT_W32
(
w32_cc
, 
w16_tmp
);

390 
	gw32_cc
 = 
WEBRTC_SPL_MAX
(0, 
w32_cc
);

391 
	gw16_be°C‹r
 = (
öt16_t
Ë
WebRtcS∂_DivW32W16
(
w32_cc
, 
w16_sqπEn1En2
);

392 
	gw16_be°C‹r
 = 
WEBRTC_SPL_MIN
(16384, 
w16_be°C‹r
);

395 #ifde‡
NETEQ_STEREO


406 #ifde‡
NETEQ_STEREO


407 i‡((((
	gw16_be°C‹r
 > 14746Ë|| (
	gw16_VAD
 =0)Ë&& (
msInfo
->
msMode
 !
NETEQ_SLAVE
))

408 || ((
msInfo
->
msMode
 =
NETEQ_SLAVE
Ë&& (msInfo->
exåaInfo
 !
ACC_FAIL
)))

410 i‡((
w16_be°C‹r
 > 14746Ë|| (
w16_VAD
 == 0))

419 
w16_öc
 = (
öt16_t
Ë
WebRtcS∂_DivW32W16
((
öt32_t
) 16384,

420 (
öt16_t
Ë(
w16_be°Index
 + 1));

423 
	gw16_°¨tÁ˘
 = 16384 - 
w16_öc
;

426 
	gpw16_vec1
 = &
pw16_decoded
[
fsMu…120
 - 
w16_be°Index
];

428 
	gpw16_vec2
 = &
pw16_decoded
[
fsMu…120
];

431 
	gw16_tmp
 = (
fsMu…120
 - 
w16_be°Index
);

432 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, 
w16_tmp
);

435 
	gpw16_ve˘mp
 = 
pw16_outD©a
 + 
w16_tmp
;

437 
WebRtcNëEQ_MixVoi˚Unvoi˚
(
pw16_ve˘mp
, (
öt16_t
*Ë
pw16_vec1
,

438 (
öt16_t
*Ë
pw16_vec2
, &
w16_°¨tÁ˘
, 
w16_öc
, 
w16_be°Index
);

442 
	gpw16_vec2
 = &
pw16_decoded
[
fsMu…120
 + 
w16_be°Index
];

443 
WEBRTC_SPL_MEMMOVE_W16
(&
pw16_outD©a
[
fsMu…120
], 
pw16_vec2
,

444 (
öt16_t
Ë(
Àn
 - 
fsMu…120
 - 
w16_be°Index
));

447 i‡(
	gw16_VAD
)

449 
	gö°
->
	gw16_mode
 = 
MODE_SUCCESS_ACCELERATE
;

453 
	gö°
->
	gw16_mode
 = 
MODE_LOWEN_ACCELERATE
;

457 *
	gpw16_Àn
 = 
Àn
 - 
w16_be°Index
;

460 
	gö°
->
	g°©In°
.
	gac˚ÀøãLígth
 +
w16_be°Index
;

462 
	gö°
->
	ga˘ivôy_°©s
.
	gac˚œøã_n‹mÆ_ßm∂es
 +
w16_be°Index
;

470 #ifde‡
NETEQ_STEREO


472 i‡(
	gmsInfo
->
	gmsMode
 =
NETEQ_MASTER
)

474 
msInfo
->
exåaInfo
 = 
ACC_FAIL
;

479 
	gö°
->
	gw16_mode
 = 
MODE_UNSUCCESS_ACCELERATE
;

482 *
	gpw16_Àn
 = 
Àn
;

485 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, (
öt16_t
Ë
Àn
);

491 #unde‡
SCRATCH_PW16_DS_SPEECH


492 #unde‡
SCRATCH_PW32_CORR


493 #unde‡
SCRATCH_PW16_CORR


	@automode.c

15 
	~"automode.h
"

17 
	~<as£π.h
>

19 
	~"sig«l_¥o˚ssög_libøry.h
"

21 
	~"√ãq_deföes.h
"

23 #ifde‡
NETEQ_DELAY_LOGGING


25 
	~<°dio.h
>

26 
	~"dñay_loggög.h
"

28 
FILE
 *
dñay_fid2
;

32 
	$WebRtcNëEQ_Upd©eI©Sèti°ics
(
AutomodeIn°_t
 *
ö°
, 
maxBufLí
,

33 
uöt16_t
 
£qNumbî
, 
uöt32_t
 
timeSèmp
,

34 
öt32_t
 
fsHz
, 
mdCodec
, 
°ªamögMode
)

36 
uöt32_t
 
timeI©
;

37 
i
;

38 
öt32_t
 
ãmpsum
 = 0;

39 
öt32_t
 
ãmpv¨
;

40 
ªtvÆ
 = 0;

41 
öt16_t
 
∑ckëLíSamp
;

47 i‡(
maxBufLí
 <1 || 
fsHz
 <= 0)

58 i‡((
timeSèmp
 <
ö°
->
œ°TimeSèmp
Ë|| (
£qNumbî
 <ö°->
œ°SeqNo
))

61 
∑ckëLíSamp
 = 
ö°
->
∑ckëS≥echLíSamp
;

66 
∑ckëLíSamp
 = (
öt16_t
Ë
	`WebRtcS∂_DivU32U16
(
timeSèmp
 - 
ö°
->
œ°TimeSèmp
,

67 
£qNumbî
 - 
ö°
->
œ°SeqNo
);

71 i‡(
∑ckëLíSamp
 > 0)

75 
timeI©
 = 
	`WebRtcS∂_DivW32W16
(
ö°
->
∑ckëI©Cou¡Samp
, 
∑ckëLíSamp
);

78 i‡(
°ªamögMode
 != 0)

84 
öt16_t
 
timeI©Q8
 = (öt16_tË
	`WebRtcS∂_DivW32W16
(

85 
	`WEBRTC_SPL_LSHIFT_W32
(
ö°
->
∑ckëI©Cou¡Samp
, 8), 
∑ckëLíSamp
);

91 
ö°
->
cSumI©Q8
 +(
timeI©Q8


92 - 
	`WEBRTC_SPL_LSHIFT_W32
(
£qNumbî
 - 
ö°
->
œ°SeqNo
, 8));

95 
ö°
->
cSumI©Q8
 -
CSUM_IAT_DRIFT
;

98 
ö°
->
cSumI©Q8
 = 
	`WEBRTC_SPL_MAX
(inst->cSumIatQ8, 0);

101 i‡(
ö°
->
cSumI©Q8
 > in°->
maxCSumI©Q8
)

103 
ö°
->
maxCSumI©Q8
 = in°->
cSumI©Q8
;

104 
ö°
->
maxCSumUpd©eTimî
 = 0;

108 i‡(
ö°
->
maxCSumUpd©eTimî
 > (
uöt32_t
Ë
	`WEBRTC_SPL_MUL_32_16
(
fsHz
,

109 
MAX_STREAMING_PEAK_PERIOD
))

111 
ö°
->
maxCSumI©Q8
 -= 4;

116 i‡(
£qNumbî
 > 
ö°
->
œ°SeqNo
 + 1)

122 
timeI©
 -
	`WEBRTC_SPL_MIN
(timeIat,

123 (
uöt32_t
Ë(
£qNumbî
 - 
ö°
->
œ°SeqNo
 - 1));

125 i‡(
£qNumbî
 < 
ö°
->
œ°SeqNo
)

128 
timeI©
 +(
uöt32_t
Ë(
ö°
->
œ°SeqNo
 + 1 - 
£qNumbî
);

132 
timeI©
 = 
	`WEBRTC_SPL_MIN
–timeI©, 
MAX_IAT
 );

135 
i
 = 0; i <
MAX_IAT
; i++)

137 
öt32_t
 
ãmpHi
, 
ãmpLo
;

150 
ãmpHi
 = 
	`WEBRTC_SPL_MUL_16_16
(
ö°
->
ütProbFa˘
,

151 (
öt16_t
Ë
	`WEBRTC_SPL_RSHIFT_W32
(
ö°
->
ütProb
[
i
], 16));

152 
ãmpHi
 = 
	`WEBRTC_SPL_LSHIFT_W32
(tempHi, 1);

158 
ãmpLo
 = 
ö°
->
ütProb
[
i
] & 0x0000FFFF;

159 
ãmpLo
 = 
	`WEBRTC_SPL_MUL_16_U16
(
ö°
->
ütProbFa˘
,

160 (
uöt16_t
Ë
ãmpLo
);

161 
ãmpLo
 = 
	`WEBRTC_SPL_RSHIFT_W32
(tempLo, 15);

164 
ö°
->
ütProb
[
i
] = 
ãmpHi
 + 
ãmpLo
;

167 
ãmpsum
 +
ö°
->
ütProb
[
i
];

175 
ö°
->
ütProb
[
timeI©
] +(32768 - in°->
ütProbFa˘
) << 15;

177 
ãmpsum
 +(32768 - 
ö°
->
ütProbFa˘
) << 15;

183 
ö°
->
ütProbFa˘
 +(
IAT_PROB_FACT
 - inst->iatProbFact + 3) >> 2;

186 
ãmpsum
 -= 1 << 30;

189 i‡(
ãmpsum
 > 0)

192 
i
 = 0;

193 
i
 <
MAX_IAT
 && 
ãmpsum
 > 0)

196 
ãmpv¨
 = 
	`WEBRTC_SPL_MIN
(
ãmpsum
, 
ö°
->
ütProb
[
i
] >> 4);

197 
ö°
->
ütProb
[
i
++] -
ãmpv¨
;

198 
ãmpsum
 -
ãmpv¨
;

201 i‡(
ãmpsum
 < 0)

204 
i
 = 0;

205 
i
 <
MAX_IAT
 && 
ãmpsum
 < 0)

208 
ãmpv¨
 = 
	`WEBRTC_SPL_MIN
(-
ãmpsum
, 
ö°
->
ütProb
[
i
] >> 4);

209 
ö°
->
ütProb
[
i
++] +
ãmpv¨
;

210 
ãmpsum
 +
ãmpv¨
;

215 
ãmpv¨
 = (
öt32_t
Ë
	`WebRtcNëEQ_CÆcO±imÆBufLvl
(
ö°
, 
fsHz
, 
mdCodec
, 
timeI©
,

216 
°ªamögMode
);

217 i‡(
ãmpv¨
 > 0)

219 
high_lim_dñay
;

225 
öt32_t
 
möimum_dñay_q8
 = ((
ö°
->
möimum_dñay_ms
 *

226 (
fsHz
 / 1000)Ë<< 8Ë/ 
∑ckëLíSamp
;

227 
ö°
->
›tBufLevñ
 = 
ãmpv¨
;

229 i‡(
°ªamögMode
 != 0)

231 
ö°
->
›tBufLevñ
 = 
	`WEBRTC_SPL_MAX
(inst->optBufLevel,

232 
ö°
->
maxCSumI©Q8
);

236 
ö°
->
ªquúed_dñay_q8
 = in°->
›tBufLevñ
;

239 
ö°
->
›tBufLevñ
 = 
	`WEBRTC_SPL_MAX
(inst->optBufLevel,

240 
möimum_dñay_q8
);

247 i‡(
ö°
->
exåaDñayMs
 > 0 && in°->
∑ckëS≥echLíSamp
 > 0)

249 
maxBufLí
 -
ö°
->
exåaDñayMs
 / in°->
∑ckëS≥echLíSamp
 * 
fsHz
 / 1000;

250 
maxBufLí
 = 
	`WEBRTC_SPL_MAX
(maxBufLen, 1);

253 
maxBufLí
 = 
	`WEBRTC_SPL_LSHIFT_W32
(maxBufLen, 8);

257 
high_lim_dñay
 = (
maxBufLí
 >> 1) + (maxBufLen >> 2);

258 
ö°
->
›tBufLevñ
 = 
	`WEBRTC_SPL_MIN
(inst->optBufLevel,

259 
high_lim_dñay
);

260 
ö°
->
ªquúed_dñay_q8
 = 
	`WEBRTC_SPL_MIN
(inst->required_delay_q8,

261 
high_lim_dñay
);

265 
ªtvÆ
 = (Ë
ãmpv¨
;

275 
timeI©
 = 
	`WEBRTC_SPL_UDIV
(

276 
	`WEBRTC_SPL_UMUL_32_16
(
ö°
->
∑ckëI©Cou¡Samp
, (
öt16_t
) 1000),

277 (
uöt32_t
Ë
fsHz
);

280 i‡(
timeI©
 > 2000)

282 
ö°
->
cou¡IAT2000ms
++;

284 i‡(
timeI©
 > 1000)

286 
ö°
->
cou¡IAT1000ms
++;

288 i‡(
timeI©
 > 500)

290 
ö°
->
cou¡IAT500ms
++;

293 i‡(
timeI©
 > 
ö°
->
l⁄ge°IATms
)

296 
ö°
->
l⁄ge°IATms
 = 
timeI©
;

303 
ö°
->
∑ckëI©Cou¡Samp
 = 0;

305 
ö°
->
œ°SeqNo
 = 
£qNumbî
;

307 
ö°
->
œ°TimeSèmp
 = 
timeSèmp
;

309  
ªtvÆ
;

310 
	}
}

313 
öt16_t
 
	$WebRtcNëEQ_CÆcO±imÆBufLvl
(
AutomodeIn°_t
 *
ö°
, 
öt32_t
 
fsHz
,

314 
mdCodec
, 
uöt32_t
 
timeI©Pkts
,

315 
°ªamögMode
)

318 
öt32_t
 
sum1
 = 1 << 30;

319 
öt16_t
 
B
;

320 
uöt16_t
 
B›t
;

321 
i
;

322 
öt32_t
 
bëaInv
;

324 #ifde‡
NETEQ_DELAY_LOGGING


326 
ãmp_v¨
;

333 i‡(
fsHz
 <= 0)

343 i‡(
°ªamögMode
)

346 
bëaInv
 = 
AUTOMODE_STREAMING_BETA_INV_Q30
;

351 
bëaInv
 = 
AUTOMODE_BETA_INV_Q30
;

362 
B
 = 0;

363 
sum1
 -
ö°
->
ütProb
[
B
];

371 
sum1
 -
ö°
->
ütProb
[++
B
];

373 (
sum1
 > 
bëaInv
Ë&& (
B
 < 
MAX_IAT
));

375 
B›t
 = 
B
;

377 i‡(
mdCodec
)

384 
öt32_t
 
sum2
 = 
sum1
;

386 (
sum2
 <
bëaInv
 + 
ö°
->
ütProb
[
B›t
]) && (Bopt > 0))

389 
sum2
 +
ö°
->
ütProb
[
B›t
--];

392 
B›t
++;

397 #ifde‡
NETEQ_DELAY_LOGGING


399 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_OPTBUF
;

400 i‡(
	`fwrôe
–&
ãmp_v¨
, (), 1, 
dñay_fid2
 ) != 1) {

403 
ãmp_v¨
 = (Ë(
B›t
 * 
ö°
->
∑ckëS≥echLíSamp
);

410 
B
)

415 
ö°
->
ÀvñFûtFa˘
 = 251;

421 
ö°
->
ÀvñFûtFa˘
 = 252;

429 
ö°
->
ÀvñFûtFa˘
 = 253;

434 
ö°
->
ÀvñFûtFa˘
 = 254;

448 i‡(
timeI©Pkts
 > (
uöt32_t
Ë(
B›t
 + 
ö°
->
≥akThªshﬁdPkt
 + (
mdCodec
 != 0))

449 || 
timeI©Pkts
 > (
uöt32_t
Ë
	`WEBRTC_SPL_LSHIFT_U16
(
B›t
, 1))

453 i‡(
ö°
->
≥akIndex
 == -1)

456 
ö°
->
≥akIndex
 = 0;

458 
ö°
->
≥akModeDißbÀd
 = 
	`WEBRTC_SPL_LSHIFT_W16
(1, 
NUM_PEAKS_REQUIRED
-2);

460 i‡(
ö°
->
≥akI©Cou¡Samp


462 (
uöt32_t
Ë
	`WEBRTC_SPL_MUL_32_16
(
fsHz
, 
MAX_PEAK_PERIOD
))

467 
ö°
->
≥akPîiodSamp
[ö°->
≥akIndex
] = in°->
≥akI©Cou¡Samp
;

470 
ö°
->
≥akHeightPkt
[ö°->
≥akIndex
]

472 (
öt16_t
Ë
	`WEBRTC_SPL_MIN
(
timeI©Pkts
, 
WEBRTC_SPL_WORD16_MAX
);

475 
ö°
->
≥akIndex
 = (ö°->≥akIndex + 1Ë& 
PEAK_INDEX_MASK
;

478 
ö°
->
curPókHeight
 = 0;

479 
ö°
->
curPókPîiod
 = 0;

481 
i
 = 0; i < 
NUM_PEAKS
; i++)

484 
ö°
->
curPókHeight


485 
	`WEBRTC_SPL_MAX
(
ö°
->
curPókHeight
, in°->
≥akHeightPkt
[
i
]);

486 
ö°
->
curPókPîiod


487 
	`WEBRTC_SPL_MAX
(
ö°
->
curPókPîiod
, in°->
≥akPîiodSamp
[
i
]);

491 
ö°
->
≥akModeDißbÀd
 >>= 1;

494 i‡(
ö°
->
≥akI©Cou¡Samp
 > (
uöt32_t
Ë
	`WEBRTC_SPL_MUL_32_16
(
fsHz
,

495 
	`WEBRTC_SPL_LSHIFT_W16
(
MAX_PEAK_PERIOD
, 1)))

501 
ö°
->
curPókHeight
 = 0;

502 
ö°
->
curPókPîiod
 = 0;

503 
i
 = 0; i < 
NUM_PEAKS
; i++)

505 
ö°
->
≥akHeightPkt
[
i
] = 0;

506 
ö°
->
≥akPîiodSamp
[
i
] = 0;

509 
ö°
->
≥akIndex
 = -1;

510 
ö°
->
≥akI©Cou¡Samp
 = 0;

513 
ö°
->
≥akI©Cou¡Samp
 = 0;

522 
ö°
->
≥akFound
 = 0;

523 i‡((!
ö°
->
≥akModeDißbÀd
Ë&& (ö°->
≥akI©Cou¡Samp


524 <
	`WEBRTC_SPL_LSHIFT_W32
(
ö°
->
curPókPîiod
 , 1)))

527 
ö°
->
≥akFound
 = 1;

529 
B›t
 = 
	`WEBRTC_SPL_MAX
(B›t, 
ö°
->
curPókHeight
);

531 #ifde‡
NETEQ_DELAY_LOGGING


533 
ãmp_v¨
 = (Ë-(
B›t
 * 
ö°
->
∑ckëS≥echLíSamp
);

538 
B›t
 = 
	`WEBRTC_SPL_LSHIFT_U16
(Bopt,8);

540 #ifde‡
NETEQ_DELAY_LOGGING


542 i‡(
	`fwrôe
–&
ãmp_v¨
, (), 1, 
dñay_fid2
 ) != 1) {

548 i‡(
B›t
 <= 0)

550 
B›t
 = 
	`WEBRTC_SPL_LSHIFT_W16
(1, 8);

553  
B›t
;

554 
	}
}

557 
	$WebRtcNëEQ_Buf„rLevñFûãr
(
öt32_t
 
curSizeMs8
, 
AutomodeIn°_t
 *
ö°
,

558 
ßmpPîCÆl
, 
öt16_t
 
fsMu…
)

561 
öt16_t
 
curSizeFømes
;

567 i‡(
ßmpPîCÆl
 <0 || 
fsMu…
 <= 0)

574 i‡(
ö°
->
∑ckëS≥echLíSamp
 > 0)

580 
curSizeFømes
 = (
öt16_t
Ë
	`WebRtcS∂_DivW32W16
(

581 
	`WEBRTC_SPL_MUL_32_16
(
curSizeMs8
, 
fsMu…
), 
ö°
->
∑ckëS≥echLíSamp
);

585 
curSizeFømes
 = 0;

589 i‡(
ö°
->
ÀvñFûtFa˘
 > 0)

597 
ö°
->
buffLevñFût
 = ((ö°->
ÀvñFûtFa˘
 * inst->buffLevelFilt) >> 8) +

598 (256 - 
ö°
->
ÀvñFûtFa˘
Ë* 
curSizeFømes
;

602 i‡(
ö°
->
¥evTimeSˇÀ
)

610 
ö°
->
buffLevñFût
 = 
	`WEBRTC_SPL_MAX
( inst->buffLevelFilt -

611 
	`WebRtcS∂_DivW32W16
(

612 
	`WEBRTC_SPL_LSHIFT_W32
(
ö°
->
ßm∂eMem‹y
, 8),

613 
ö°
->
∑ckëS≥echLíSamp
 ),

620 
ö°
->
¥evTimeSˇÀ
 = 0;

621 
ö°
->
timesˇÀHﬁdOff
 = 
AUTOMODE_TIMESCALE_LIMIT
;

625 
ö°
->
∑ckëI©Cou¡Samp
 +
ßmpPîCÆl
;

626 
ö°
->
≥akI©Cou¡Samp
 +
ßmpPîCÆl
;

627 
ö°
->
timesˇÀHﬁdOff
 >>= 1;

628 
ö°
->
maxCSumUpd©eTimî
 +
ßmpPîCÆl
;

632 
	}
}

635 
	$WebRtcNëEQ_SëPackëS≥echLí
(
AutomodeIn°_t
 *
ö°
, 
öt16_t
 
√wLíSamp
,

636 
öt32_t
 
fsHz
)

640 i‡(
√wLíSamp
 <0 || 
fsHz
 <= 0)

645 
ö°
->
∑ckëS≥echLíSamp
 = 
√wLíSamp
;

648 
ö°
->
œ°PackCNG‹DTMF
 = 1;

650 
ö°
->
∑ckëI©Cou¡Samp
 = 0;

657 
ö°
->
≥akThªshﬁdPkt
 = (
uöt16_t
Ë
	`WebRtcS∂_DivW32W16ResW16
(

658 
	`WEBRTC_SPL_MUL_16_16_RSFT
(
PEAK_HEIGHT
,

659 (
öt16_t
Ë
	`WEBRTC_SPL_RSHIFT_W32
(
fsHz
, 6), 2), 
ö°
->
∑ckëS≥echLíSamp
);

662 
	}
}

665 
	$WebRtcNëEQ_Re£tAutomode
(
AutomodeIn°_t
 *
ö°
, 
maxBufLíPackës
)

668 
i
;

669 
uöt16_t
 
ãmµrob
 = 0x4002;

672 i‡(
maxBufLíPackës
 <= 1)

675 
maxBufLíPackës
 = 10;

679 
ö°
->
buffLevñFût
 = 0;

682 
ö°
->
∑ckëS≥echLíSamp
 = 0;

688 
ö°
->
œ°PackCNG‹DTMF
 = 1;

691 
ö°
->
≥akModeDißbÀd
 = 1;

692 
ö°
->
≥akI©Cou¡Samp
 = 0;

693 
ö°
->
≥akIndex
 = -1;

694 
ö°
->
curPókHeight
 = 0;

695 
ö°
->
curPókPîiod
 = 0;

696 
i
 = 0; i < 
NUM_PEAKS
; i++)

698 
ö°
->
≥akHeightPkt
[
i
] = 0;

699 
ö°
->
≥akPîiodSamp
[
i
] = 0;

707 
i
 = 0; i <
MAX_IAT
; i++)

710 
ãmµrob
 = 
	`WEBRTC_SPL_RSHIFT_U16
(tempprob, 1);

712 
ö°
->
ütProb
[
i
] = 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
Ë
ãmµrob
, 16);

720 
ö°
->
›tBufLevñ
 = 
	`WEBRTC_SPL_MIN
(4,

721 (
maxBufLíPackës
 >> 1) + (maxBufLenPackets >> 1));

722 
ö°
->
ªquúed_dñay_q8
 = in°->
›tBufLevñ
;

723 
ö°
->
ÀvñFûtFa˘
 = 253;

729 
ö°
->
ütProbFa˘
 = 0;

732 
ö°
->
∑ckëI©Cou¡Samp
 = 0;

735 
ö°
->
¥evTimeSˇÀ
 = 0;

736 
ö°
->
timesˇÀHﬁdOff
 = 
AUTOMODE_TIMESCALE_LIMIT
;

738 
ö°
->
cSumI©Q8
 = 0;

739 
ö°
->
maxCSumI©Q8
 = 0;

742 
	}
}

744 
öt32_t
 
	$WebRtcNëEQ_AvîageIAT
(c⁄° 
AutomodeIn°_t
 *
ö°
) {

745 
i
;

746 
öt32_t
 
sum_q24
 = 0;

747 
	`as£π
(
ö°
);

748 
i
 = 0; i <
MAX_IAT
; ++i) {

750 
sum_q24
 +(
ö°
->
ütProb
[
i
] >> 6) * i;

753 
sum_q24
 -= (1 << 24);

758  ((
sum_q24
 >> 7) * 15625) >> 11;

759 
	}
}

	@automode.h

15 #i‚de‡
AUTOMODE_H


16 
	#AUTOMODE_H


	)

18 
	~"ty≥defs.h
"

26 
	#AUTOMODE_BETA_INV_Q30
 53687091

	)

27 
	#AUTOMODE_STREAMING_BETA_INV_Q30
 536871

	)

30 
	#IAT_PROB_FACT
 32745

	)

33 
	#MAX_IAT
 64

	)

34 
	#PEAK_HEIGHT
 20

	)

37 
	#AUTOMODE_TIMESCALE_LIMIT
 (1<<5)

	)

41 
	#NUM_PEAKS
 8

	)

44 
	#PEAK_INDEX_MASK
 0x0007

	)

47 
	#MAX_PEAK_PERIOD
 10

	)

48 
	#MAX_STREAMING_PEAK_PERIOD
 600

	)

51 
	#NUM_PEAKS_REQUIRED
 3

	)

54 
	#CSUM_IAT_DRIFT
 2

	)

67 
uöt16_t
 
	mÀvñFûtFa˘
;

68 
	mbuffLevñFût
;

71 
öt32_t
 
	mütProb
[
MAX_IAT
 + 1];

72 
öt16_t
 
	mütProbFa˘
;

73 
uöt32_t
 
	m∑ckëI©Cou¡Samp
;

75 
	m›tBufLevñ
;

78 
öt16_t
 
	m∑ckëS≥echLíSamp
;

79 
öt16_t
 
	mœ°PackCNG‹DTMF
;

81 
uöt16_t
 
	mœ°SeqNo
;

82 
uöt32_t
 
	mœ°TimeSèmp
;

83 
öt32_t
 
	mßm∂eMem‹y
;

85 
öt16_t
 
	m¥evTimeSˇÀ
;

87 
uöt32_t
 
	mtimesˇÀHﬁdOff
;

90 
öt16_t
 
	mexåaDñayMs
;

92 
	mmöimum_dñay_ms
;

94 
	mªquúed_dñay_q8
;

100 
uöt32_t
 
	m≥akPîiodSamp
[
NUM_PEAKS
];

102 
öt16_t
 
	m≥akHeightPkt
[
NUM_PEAKS
];

103 
öt16_t
 
	m≥akIndex
;

105 
uöt16_t
 
	m≥akThªshﬁdPkt
;

107 
uöt32_t
 
	m≥akI©Cou¡Samp
;

108 
uöt32_t
 
	mcurPókPîiod
;

109 
öt16_t
 
	mcurPókHeight
;

111 
öt16_t
 
	m≥akModeDißbÀd
;

112 
uöt16_t
 
	m≥akFound
;

116 
uöt32_t
 
	mcou¡IAT500ms
;

117 
uöt32_t
 
	mcou¡IAT1000ms
;

118 
uöt32_t
 
	mcou¡IAT2000ms
;

119 
uöt32_t
 
	ml⁄ge°IATms
;

121 
öt16_t
 
	mcSumI©Q8
;

122 
öt16_t
 
	mmaxCSumI©Q8
;

123 
uöt32_t
 
	mmaxCSumUpd©eTimî
;

125 } 
	tAutomodeIn°_t
;

156 
WebRtcNëEQ_Upd©eI©Sèti°ics
(
AutomodeIn°_t
 *
ö°
, 
maxBufLí
,

157 
uöt16_t
 
£qNumbî
, 
uöt32_t
 
timeSèmp
,

158 
öt32_t
 
fsHz
, 
mdCodec
, 
°ªamögMode
);

181 
öt16_t
 
WebRtcNëEQ_CÆcO±imÆBufLvl
(
AutomodeIn°_t
 *
ö°
, 
öt32_t
 
fsHz
,

182 
mdCodec
, 
uöt32_t
 
timeI©Pkts
,

183 
°ªamögMode
);

206 
WebRtcNëEQ_Buf„rLevñFûãr
(
öt32_t
 
curSizeMs8
, 
AutomodeIn°_t
 *
ö°
,

207 
ßmpPîCÆl
, 
öt16_t
 
fsMu…
);

229 
WebRtcNëEQ_SëPackëS≥echLí
(
AutomodeIn°_t
 *
ö°
, 
öt16_t
 
√wLíSamp
,

230 
öt32_t
 
fsHz
);

249 
WebRtcNëEQ_Re£tAutomode
(
AutomodeIn°_t
 *
ö°
, 
maxBufLíPackës
);

268 
öt32_t
 
WebRtcNëEQ_AvîageIAT
(c⁄° 
AutomodeIn°_t
 *
ö°
);

	@bgn_update.c

15 
	~"d•.h
"

17 
	~"sig«l_¥o˚ssög_libøry.h
"

19 
	~"d•_hñpfun˘i⁄s.h
"

33 #i‡(
BGN_LPC_ORDER
 > 10Ë&& (
deföed
 
SCRATCH
)

34 #îr‹ 
BGN_LPC_ORDER
 
is
 
too
 
œrge
 
cuºít
 
s¸©ch
 
mem‹y
 
Æloˇti⁄


37 
	#SCRATCH_PW32_AUTO_CORR
 0

	)

38 
	#SCRATCH_PW16_TEMP_VEC
 22

	)

39 
	#SCRATCH_PW16_RC
 32

	)

40 
	#SCRATCH_PW16_OUT_VEC
 0

	)

42 
	#NETEQFIX_BGNFRAQINCQ16
 229

	)

59 
WebRtcNëEQ_BGNUpd©e
(

60 #ifde‡
SCRATCH


61 
DSPIn°_t
 *
ö°
, 
öt16_t
 *
pw16_s¸©chPå


63 
DSPIn°_t
 *
ö°


67 c⁄° 
öt16_t
 
	gw16_vecLí
 = 256;

68 
BGNIn°_t
 *
	gBGN_In°
 = &(
ö°
->
BGNIn°
);

69 #ifde‡
SCRATCH


70 
öt32_t
 *
	gpw32_autoC‹r
 = (öt32_t*Ë(
pw16_s¸©chPå
 + 
SCRATCH_PW32_AUTO_CORR
);

71 
öt16_t
 *
	gpw16_ãmpVec
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_TEMP_VEC
;

72 
öt16_t
 *
	gpw16_rc
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_RC
;

73 
öt16_t
 *
	gpw16_outVec
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_OUT_VEC
;

75 
öt32_t
 
	gpw32_autoC‹r
[
BGN_LPC_ORDER
 + 1];

76 
öt16_t
 
	gpw16_ãmpVec
[
BGN_LPC_ORDER
];

77 
öt16_t
 
	gpw16_outVec
[
BGN_LPC_ORDER
 + 64];

78 
öt16_t
 
	gpw16_rc
[
BGN_LPC_ORDER
];

80 
öt16_t
 
	gpw16_A
[
BGN_LPC_ORDER
 + 1];

81 
öt32_t
 
	gw32_tmp
;

82 
öt16_t
 *
	gpw16_vec
;

83 
öt16_t
 
	gw16_maxSam∂e
;

84 
öt16_t
 
	gw16_tmp
, 
	gw16_tmp2
;

85 
öt16_t
 
	gw16_íSam∂eShi·
;

86 
öt32_t
 
	gw32_í
, 
	gw32_íBGN
;

87 
öt32_t
 
	gw32_íUpd©eThªashﬁd
;

88 
öt16_t
 
	g°abûôy
;

90 
	gpw16_vec
 = 
ö°
->
pw16_•ìchHi°‹y
 + in°->
w16_•ìchHi°‹yLí
 - 
w16_vecLí
;

92 #ifde‡
NETEQ_VAD


93 if–!
	gö°
->
	gVADIn°
.
	gVADE«bÀd


94 || 
	gö°
->
	gVADIn°
.
	gVADDecisi⁄
 == 0 )

99 
WEBRTC_SPL_MEMCPY_W16
(
pw16_ãmpVec
, 
pw16_vec
 - 
BGN_LPC_ORDER
, BGN_LPC_ORDER);

100 
WebRtcS∂_MemSëW16
(
pw16_vec
 - 
BGN_LPC_ORDER
, 0, BGN_LPC_ORDER);

102 
	gw16_maxSam∂e
 = 
WebRtcS∂_MaxAbsVÆueW16
(
pw16_vec
, 
w16_vecLí
);

103 
	gw16_tmp
 = 8

104 - 
WebRtcS∂_N‹mW32
(
WEBRTC_SPL_MUL_16_16
(
w16_maxSam∂e
, w16_maxSample));

105 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(0, 
w16_tmp
);

107 
WebRtcNëEQ_CrossC‹r
(
pw32_autoC‹r
, 
pw16_vec
,Öw16_vec, 
w16_vecLí
, 
BGN_LPC_ORDER
 + 1,

108 
w16_tmp
, -1);

111 
WEBRTC_SPL_MEMCPY_W16
(
pw16_vec
 - 
BGN_LPC_ORDER
, 
pw16_ãmpVec
, BGN_LPC_ORDER);

113 
	gw16_íSam∂eShi·
 = 8 - 
w16_tmp
;

115 
	gw32_í
 = 
WEBRTC_SPL_RSHIFT_W32
(
pw32_autoC‹r
[0], 
w16_íSam∂eShi·
);

116 i‡((
	gw32_í
 < 
	gBGN_In°
->
	gw32_íîgyUpd©e


117 #ifde‡
NETEQ_VAD


119 && !
	gö°
->
	gVADIn°
.
	gVADE«bÀd
)

121 || (
	gö°
->
	gVADIn°
.
	gVADE«bÀd
 && in°->VADIn°.
	gVADDecisi⁄
 == 0)

128 i‡(
pw32_autoC‹r
[0] > 0)

133 i‡(
w32_í
 < 
BGN_In°
->
w32_íîgyUpd©e
)

136 
BGN_In°
->
w32_íîgyUpd©e
 = 
WEBRTC_SPL_MAX
(
w32_í
, 1);

137 
	gBGN_In°
->
	gw32_íîgyUpd©eLow
 = 0;

140 
	g°abûôy
 = 
WebRtcS∂_Levös⁄Durbö
(
pw32_autoC‹r
, 
pw16_A
, 
pw16_rc
, 
BGN_LPC_ORDER
);

142 i‡(
	g°abûôy
 != 1)

153 
WebRtcS∂_FûãrMAFa°Q12
(
pw16_vec
 + 
w16_vecLí
 - 64, 
pw16_outVec
, 
pw16_A
,

154 
BGN_LPC_ORDER
 + 1, 64);

155 
	gw32_íBGN
 = 
WebRtcNëEQ_DŸW16W16
(
pw16_outVec
,Öw16_outVec, 64, 0);

165 i‡((
WEBRTC_SPL_MUL_32_16
(
w32_íBGN
, 20Ë>
WEBRTC_SPL_LSHIFT_W32
(
w32_í
, 6))

166 && (
	gw32_í
 > 0))

170 
WEBRTC_SPL_MEMCPY_W16
(
BGN_In°
->
pw16_fûãr
, 
pw16_A
, 
BGN_LPC_ORDER
+1);

171 
WEBRTC_SPL_MEMCPY_W16
(
BGN_In°
->
pw16_fûãrSèã
,

172 
pw16_vec
 + 
w16_vecLí
 - 
BGN_LPC_ORDER
, BGN_LPC_ORDER);

175 
	gBGN_In°
->
	gw32_íîgy
 = 
WEBRTC_SPL_MAX
(
w32_í
, 1);

179 
	gBGN_In°
->
	gw32_íîgyUpd©e
 = 
WEBRTC_SPL_MAX
(
w32_í
, 1);

180 
	gBGN_In°
->
	gw32_íîgyUpd©eLow
 = 0;

183 
	gw16_tmp2
 = 
WebRtcS∂_N‹mW32
(
w32_íBGN
) - 1;

184 i‡(
	gw16_tmp2
 & 0x1)

186 
	gw16_tmp2
 -= 1;

188 
	gw32_íBGN
 = 
WEBRTC_SPL_SHIFT_W32
(
w32_íBGN
, 
w16_tmp2
);

191 
	gBGN_In°
->
	gw16_sˇÀ
 = (
öt16_t
Ë
WebRtcS∂_SqπFlo‹
(
w32_íBGN
);

192 
	gBGN_In°
->
	gw16_sˇÀShi·
 = 13 + ((6 + 
w16_tmp2
) >> 1);

195 
	gBGN_In°
->
	gw16_öôülized
 = 1;

207 
	gw32_tmp
 = 
WEBRTC_SPL_MUL_16_16_RSFT
(
NETEQFIX_BGNFRAQINCQ16
,

208 
BGN_In°
->
w32_íîgyUpd©eLow
, 16);

209 
	gw32_tmp
 +
WEBRTC_SPL_MUL_16_16
(
NETEQFIX_BGNFRAQINCQ16
,

210 (
öt16_t
)(
BGN_In°
->
w32_íîgyUpd©e
 & 0xFF));

211 
	gw32_tmp
 +(
WEBRTC_SPL_MUL_16_16
(
NETEQFIX_BGNFRAQINCQ16
,

212 (
öt16_t
)((
BGN_In°
->
w32_íîgyUpd©e
>>8) & 0xFF)) << 8);

213 
	gBGN_In°
->
	gw32_íîgyUpd©eLow
 +
w32_tmp
;

215 
	gBGN_In°
->
	gw32_íîgyUpd©e
 +
WEBRTC_SPL_MUL_16_16
(
NETEQFIX_BGNFRAQINCQ16
,

216 (
öt16_t
)(
BGN_In°
->
w32_íîgyUpd©e
>>16));

217 
	gBGN_In°
->
	gw32_íîgyUpd©e
 +
BGN_In°
->
w32_íîgyUpd©eLow
 >> 16;

218 
	gBGN_In°
->
	gw32_íîgyUpd©eLow
 = (
BGN_In°
->
w32_íîgyUpd©eLow
 & 0x0FFFF);

222 
	gBGN_In°
->
	gw32_íîgyMax
 = 
BGN_In°
->
w32_íîgyMax
 - (BGN_Inst->w32_energyMax >> 10);

223 i‡(
	gw32_í
 > 
	gBGN_In°
->
	gw32_íîgyMax
)

225 
	gBGN_In°
->
	gw32_íîgyMax
 = 
w32_í
;

229 
	gw32_íUpd©eThªashﬁd
 = (
BGN_In°
->
w32_íîgyMax
 + 524288) >> 20;

230 i‡(
	gw32_íUpd©eThªashﬁd
 > 
	gBGN_In°
->
	gw32_íîgyUpd©e
)

232 
	gBGN_In°
->
	gw32_íîgyUpd©e
 = 
w32_íUpd©eThªashﬁd
;

236 #ifde‡
NETEQ_VAD


243 #unde‡
SCRATCH_PW32_AUTO_CORR


244 #unde‡
SCRATCH_PW16_TEMP_VEC


245 #unde‡
SCRATCH_PW16_RC


246 #unde‡
SCRATCH_PW16_OUT_VEC


	@buffer_stats.h

15 #i‚de‡
BUFFER_STATS_H


16 
	#BUFFER_STATS_H


	)

18 
	~"automode.h
"

19 
	~"öãrÁ˚/webπc_√ãq.h
"

22 
	#BUFSTATS_DO_NORMAL
 0

	)

23 
	#BUFSTATS_DO_ACCELERATE
 1

	)

24 
	#BUFSTATS_DO_MERGE
 2

	)

25 
	#BUFSTATS_DO_EXPAND
 3

	)

26 
	#BUFSTAT_REINIT
 4

	)

27 
	#BUFSTATS_DO_RFC3389CNG_PACKET
 5

	)

28 
	#BUFSTATS_DO_RFC3389CNG_NOPACKET
 6

	)

29 
	#BUFSTATS_DO_INTERNAL_CNG_NOPACKET
 7

	)

30 
	#BUFSTATS_DO_PREEMPTIVE_EXPAND
 8

	)

31 
	#BUFSTAT_REINIT_DECODER
 9

	)

32 
	#BUFSTATS_DO_DTMF_ONLY
 10

	)

34 
	#BUFSTATS_DO_ALTERNATIVE_PLC
 11

	)

35 
	#BUFSTATS_DO_ALTERNATIVE_PLC_INC_TS
 12

	)

36 
	#BUFSTATS_DO_AUDIO_REPETITION
 13

	)

37 
	#BUFSTATS_DO_AUDIO_REPETITION_INC_TS
 14

	)

40 
	#REINIT_AFTER_EXPANDS
 100

	)

43 
	#MAX_WAIT_FOR_PACKET
 10

	)

46 
	#CNG_OFF
 0

	)

47 
	#CNG_RFC3389_ON
 1

	)

48 
	#CNG_INTERNAL_ON
 2

	)

54 
öt16_t
 
	mw16_˙gOn
;

55 
öt16_t
 
	mw16_noEx∑nd
;

56 
öt32_t
 
	muw32_CNG∂ayedTS
;

59 
uöt16_t
 
	mavgDñayMsQ8
;

60 
öt16_t
 
	mmaxDñayMs
;

62 
AutomodeIn°_t
 
	mAutomode_ö°
;

64 } 
	tBuf°©sIn°_t
;

86 
uöt16_t
 
WebRtcNëEQ_Buf°©sDecisi⁄
(
Buf°©sIn°_t
 *
ö°
, 
öt16_t
 
‰ameSize
,

87 
öt32_t
 
cur_size
, 
uöt32_t
 
èrgëTS
,

88 
uöt32_t
 
avaûabÀTS
, 
noPackë
,

89 
˙gPackë
, 
¥evPœyMode
,

90 
WebRtcNëEQPœyoutMode
 
∂ayoutMode
,

91 
time°ampsPîCÆl
, 
NoOfEx∑ndCÆls
,

92 
öt16_t
 
fs_mu…
,

93 
öt16_t
 
œ°ModeBGN⁄ly
, 
∂ayDtmf
);

	@bufstats_decision.c

16 
	~"buf„r_°©s.h
"

18 
	~<as£π.h
>

20 
	~"sig«l_¥o˚ssög_libøry.h
"

22 
	~"automode.h
"

23 
	~"√ãq_deföes.h
"

24 
	~"√ãq_îr‹_codes.h
"

25 
	~"öãrÁ˚/webπc_√ãq.h
"

27 
	#NETEQ_BUFSTAT_20MS_Q7
 2560

	)

29 
uöt16_t
 
	$WebRtcNëEQ_Buf°©sDecisi⁄
(
Buf°©sIn°_t
 *
ö°
, 
öt16_t
 
‰ameSize
,

30 
öt32_t
 
cur_size
, 
uöt32_t
 
èrgëTS
,

31 
uöt32_t
 
avaûabÀTS
, 
noPackë
,

32 
˙gPackë
, 
¥evPœyMode
,

33 
WebRtcNëEQPœyoutMode
 
∂ayoutMode
,

34 
time°ampsPîCÆl
, 
NoOfEx∑ndCÆls
,

35 
öt16_t
 
fs_mu…
,

36 
öt16_t
 
œ°ModeBGN⁄ly
, 
∂ayDtmf
)

39 
cuºítDñayMs
;

40 
öt32_t
 
cuºSizeSam∂es
 = 
cur_size
;

41 
exåaDñayPackësQ8
 = 0;

44 
öt32_t
 
cuº_sizeQ7
 = 
	`WEBRTC_SPL_LSHIFT_W32
(
cur_size
, 4);

45 
Àvñ_limô_hi
, 
Àvñ_limô_lo
;

47 
ö°
->
Automode_ö°
.
¥evTimeSˇÀ
 &(
¥evPœyMode
 =
MODE_SUCCESS_ACCELERATE


48 || 
¥evPœyMode
 =
MODE_LOWEN_ACCELERATE
 ||ÖªvPœyModê=
MODE_SUCCESS_PREEMPTIVE


49 || 
¥evPœyMode
 =
MODE_LOWEN_PREEMPTIVE
);

51 i‡((
¥evPœyMode
 !
MODE_RFC3389CNG
Ë&& (¥evPœyModê!
MODE_CODEC_INTERNAL_CNG
))

57 
	`WebRtcNëEQ_Buf„rLevñFûãr
(
cur_size
, &(
ö°
->
Automode_ö°
), 
time°ampsPîCÆl
,

58 
fs_mu…
);

63 
ö°
->
Automode_ö°
.
∑ckëI©Cou¡Samp
 +
time°ampsPîCÆl
;

64 
ö°
->
Automode_ö°
.
≥akI©Cou¡Samp
 +
time°ampsPîCÆl
;

65 
ö°
->
Automode_ö°
.
timesˇÀHﬁdOff
 >>= 1;

67 
cur_size
 = 
	`WEBRTC_SPL_MIN
(
cuº_sizeQ7
, 
WEBRTC_SPL_WORD16_MAX
);

71 
ö°
->
avgDñayMsQ8
 = (
öt16_t
Ë(
	`WEBRTC_SPL_MUL_16_16_RSFT
(inst->avgDelayMsQ8,511,9)

72 + (
cur_size
 >> 9));

75 
cuºítDñayMs
 = (
cuº_sizeQ7
 >> 7);

76 i‡(
cuºítDñayMs
 > 
ö°
->
maxDñayMs
)

78 
ö°
->
maxDñayMs
 = 
cuºítDñayMs
;

82 i‡(
∂ayoutMode
 =
kPœyoutOn
 ||ÖœyoutModê=
kPœyoutSåómög
)

85 i‡(
¥evPœyMode
 =
MODE_ERROR
)

87 i‡(
noPackë
)

89  
BUFSTATS_DO_EXPAND
;

93  
BUFSTAT_REINIT
;

97 i‡(
¥evPœyMode
 !
MODE_EXPAND
 &&ÖªvPœyModê!
MODE_FADE_TO_BGN
)

99 
ö°
->
w16_noEx∑nd
 = 1;

103 
ö°
->
w16_noEx∑nd
 = 0;

106 i‡(
˙gPackë
)

109 
öt32_t
 
diffTS
 = (
ö°
->
uw32_CNG∂ayedTS
 + 
èrgëTS
Ë- 
avaûabÀTS
;

110 
öt32_t
 
›timÆ_Àvñ_ßmp
 = (
ö°
->
Automode_ö°
.
›tBufLevñ
 *

111 
ö°
->
Automode_ö°
.
∑ckëS≥echLíSamp
) >> 8;

112 
öt32_t
 
ex˚ss_waôög_time_ßmp
 = -
diffTS
 - 
›timÆ_Àvñ_ßmp
;

114 i‡(
ex˚ss_waôög_time_ßmp
 > 
›timÆ_Àvñ_ßmp
 / 2)

120 
ö°
->
uw32_CNG∂ayedTS
 +
ex˚ss_waôög_time_ßmp
;

121 
diffTS
 +
ex˚ss_waôög_time_ßmp
;

124 i‡((
diffTS
Ë< 0 && (
¥evPœyMode
 =
MODE_RFC3389CNG
))

128  
BUFSTATS_DO_RFC3389CNG_NOPACKET
;

132  
BUFSTATS_DO_RFC3389CNG_PACKET
;

136 i‡(
noPackë
)

138 i‡(
ö°
->
w16_˙gOn
 =
CNG_RFC3389_ON
)

141  
BUFSTATS_DO_RFC3389CNG_NOPACKET
;

143 i‡(
ö°
->
w16_˙gOn
 =
CNG_INTERNAL_ON
)

146  
BUFSTATS_DO_INTERNAL_CNG_NOPACKET
;

148 i‡(
∂ayDtmf
 == 1)

151  
BUFSTATS_DO_DTMF_ONLY
;

156  
BUFSTATS_DO_EXPAND
;

164 i‡(
NoOfEx∑ndCÆls
 > 
REINIT_AFTER_EXPANDS
Ë 
BUFSTAT_REINIT_DECODER
;

167 i‡(
ö°
->
Automode_ö°
.
exåaDñayMs
 > 0 && in°->Automode_ö°.
∑ckëS≥echLíSamp


172 
exåaDñayPackësQ8
 =

173 ((
ö°
->
Automode_ö°
.
exåaDñayMs
 * 8 * 
fs_mu…
) << 8) /

174 
ö°
->
Automode_ö°
.
∑ckëS≥echLíSamp
;

178 i‡(
èrgëTS
 =
avaûabÀTS
)

182 i‡(
ö°
->
w16_noEx∑nd
 =1 && 
∂ayDtmf
 == 0)

186 
Àvñ_limô_lo
 = ((
ö°
->
Automode_ö°
.
›tBufLevñ
) >> 1)

187 + ((
ö°
->
Automode_ö°
.
›tBufLevñ
) >> 2);

190 
Àvñ_limô_hi
 = 
	`WEBRTC_SPL_MAX
(
ö°
->
Automode_ö°
.
›tBufLevñ
,

191 
Àvñ_limô_lo
 +

192 
	`WebRtcS∂_DivW32W16ResW16
((
	`WEBRTC_SPL_MUL
(20*8, 
fs_mu…
) << 8),

193 
ö°
->
Automode_ö°
.
∑ckëS≥echLíSamp
));

196 i‡(
exåaDñayPackësQ8
 > 0)

198 
Àvñ_limô_hi
 +
exåaDñayPackësQ8
;

199 
Àvñ_limô_lo
 +
exåaDñayPackësQ8
;

202 i‡(((
ö°
->
Automode_ö°
.
buffLevñFût
 >
Àvñ_limô_hi
) &&

203 (
ö°
->
Automode_ö°
.
timesˇÀHﬁdOff
 == 0)) ||

204 (
ö°
->
Automode_ö°
.
buffLevñFût
 >
Àvñ_limô_hi
 << 2))

210  
BUFSTATS_DO_ACCELERATE
;

212 i‡((
ö°
->
Automode_ö°
.
buffLevñFût
 < 
Àvñ_limô_lo
)

213 && (
ö°
->
Automode_ö°
.
timesˇÀHﬁdOff
 == 0))

215  
BUFSTATS_DO_PREEMPTIVE_EXPAND
;

218  
BUFSTATS_DO_NORMAL
;

222 i‡(
avaûabÀTS
 > 
èrgëTS
)

226 i‡((
¥evPœyMode
 =
MODE_EXPAND
)

227 && (
avaûabÀTS
 - 
èrgëTS


228 < (
uöt32_t
Ë
	`WEBRTC_SPL_MUL_16_16
((
öt16_t
)
time°ampsPîCÆl
,

229 (
öt16_t
)
REINIT_AFTER_EXPANDS
))

230 && (
NoOfEx∑ndCÆls
 < 
MAX_WAIT_FOR_PACKET
)

231 && (
avaûabÀTS


232 > 
èrgëTS


233 + 
	`WEBRTC_SPL_MUL_16_16
((
öt16_t
)
time°ampsPîCÆl
,

234 (
öt16_t
)
NoOfEx∑ndCÆls
))

235 && (
ö°
->
Automode_ö°
.
buffLevñFût
 <ö°->Automode_ö°.
›tBufLevñ


236 + 
exåaDñayPackësQ8
))

238 i‡(
∂ayDtmf
 == 1)

241  
BUFSTATS_DO_DTMF_ONLY
;

246  
BUFSTATS_DO_EXPAND
;

251 i‡((
¥evPœyMode
 =
MODE_RFC3389CNG
Ë|| (¥evPœyModê=
MODE_CODEC_INTERNAL_CNG
)

252 || 
œ°ModeBGN⁄ly
)

259 
öt32_t
 
diffTS
 = (
ö°
->
uw32_CNG∂ayedTS
 + 
èrgëTS
Ë- 
avaûabÀTS
;

260 
vÆ
 = ((
ö°
->
Automode_ö°
.
›tBufLevñ
 +

261 
exåaDñayPackësQ8
) *

262 
ö°
->
Automode_ö°
.
∑ckëS≥echLíSamp
) >> 6;

263 i‡(
diffTS
 >0 || 
vÆ
 < 
cuºSizeSam∂es
)

266  
BUFSTATS_DO_NORMAL
;

271 i‡(
¥evPœyMode
 =
MODE_RFC3389CNG
)

273  
BUFSTATS_DO_RFC3389CNG_NOPACKET
;

275 i‡(
¥evPœyMode
 =
MODE_CODEC_INTERNAL_CNG
)

277  
BUFSTATS_DO_INTERNAL_CNG_NOPACKET
;

279 i‡(
∂ayDtmf
 == 1)

282  
BUFSTATS_DO_DTMF_ONLY
;

287  
BUFSTATS_DO_EXPAND
;

293 i‡((
ö°
->
w16_noEx∑nd
 =0Ë|| ((
‰ameSize
 < 
time°ampsPîCÆl
Ë&& (
cur_size


294 > 
NETEQ_BUFSTAT_20MS_Q7
)))

296  
BUFSTATS_DO_MERGE
;

298 i‡(
∂ayDtmf
 == 1)

301  
BUFSTATS_DO_DTMF_ONLY
;

305  
BUFSTATS_DO_EXPAND
;

311 i‡(
˙gPackë
)

313 i‡(((
öt32_t
Ë((
ö°
->
uw32_CNG∂ayedTS
 + 
èrgëTS
Ë- 
avaûabÀTS
)) >= 0)

316  
BUFSTATS_DO_RFC3389CNG_PACKET
;

321  
BUFSTATS_DO_RFC3389CNG_NOPACKET
;

324 i‡(
noPackë
)

331 i‡(
ö°
->
w16_˙gOn
 =
CNG_RFC3389_ON
)

334  
BUFSTATS_DO_RFC3389CNG_NOPACKET
;

336 i‡(
ö°
->
w16_˙gOn
 =
CNG_INTERNAL_ON
)

339  
BUFSTATS_DO_INTERNAL_CNG_NOPACKET
;

344 i‡(
∂ayoutMode
 =
kPœyoutOff
)

346  
BUFSTATS_DO_ALTERNATIVE_PLC
;

348 i‡(
∂ayoutMode
 =
kPœyoutFax
)

350  
BUFSTATS_DO_AUDIO_REPETITION
;

355 
	`as£π
(0);

356  
BUFSTAT_REINIT
;

360 i‡(
èrgëTS
 =
avaûabÀTS
)

362  
BUFSTATS_DO_NORMAL
;

366 i‡(((
öt32_t
Ë((
ö°
->
uw32_CNG∂ayedTS
 + 
èrgëTS
Ë- 
avaûabÀTS
)) >= 0)

368  
BUFSTATS_DO_NORMAL
;

370 i‡(
∂ayoutMode
 =
kPœyoutOff
)

376 i‡(
ö°
->
w16_˙gOn
 =
CNG_RFC3389_ON
)

378  
BUFSTATS_DO_RFC3389CNG_NOPACKET
;

380 i‡(
ö°
->
w16_˙gOn
 =
CNG_INTERNAL_ON
)

382  
BUFSTATS_DO_INTERNAL_CNG_NOPACKET
;

390  
BUFSTATS_DO_ALTERNATIVE_PLC_INC_TS
;

393 i‡(
∂ayoutMode
 =
kPœyoutFax
)

399 i‡(
ö°
->
w16_˙gOn
 =
CNG_RFC3389_ON
)

401  
BUFSTATS_DO_RFC3389CNG_NOPACKET
;

403 i‡(
ö°
->
w16_˙gOn
 =
CNG_INTERNAL_ON
)

405  
BUFSTATS_DO_INTERNAL_CNG_NOPACKET
;

413  
BUFSTATS_DO_AUDIO_REPETITION_INC_TS
;

419 
	`as£π
(0);

420  
BUFSTAT_REINIT
;

425  
BUFSTAT_REINIT
;

426 
	}
}

	@cng_internal.c

16 
	~"d•.h
"

18 
	~"sig«l_¥o˚ssög_libøry.h
"

19 
	~"webπc_˙g.h
"

21 
	~"d•_hñpfun˘i⁄s.h
"

22 
	~"√ãq_îr‹_codes.h
"

43 #ifde‡
NETEQ_CNG_CODEC


46 
	$WebRtcNëEQ_Cng
(
DSPIn°_t
 *
ö°
, 
öt16_t
 *
pw16_outD©a
, 
Àn
)

48 
öt16_t
 
w16_wöMuã
 = 0;

49 
öt16_t
 
w16_wöUnMuã
 = 0;

50 
öt16_t
 
w16_wöMuãInc
 = 0;

51 
öt16_t
 
w16_wöUnMuãInc
 = 0;

52 
i
;

58 i‡(
ö°
->
w16_mode
 !
MODE_RFC3389CNG
)

63 i‡(
	`WebRtcCng_Gíî©e
(
ö°
->
CNG_Codec_ö°
, 
pw16_outD©a
,

64 (
öt16_t
Ë(
Àn
 + 
ö°
->
Ex∑ndIn°
.
w16_ovîœp
), 1) < 0)

67  -
	`WebRtcCng_GëEº‹CodeDec
(
ö°
->
CNG_Codec_ö°
);

71 i‡(
ö°
->
fs
 == 8000)

74 
w16_wöMuã
 = 
NETEQ_OVERLAP_WINMUTE_8KHZ_START
;

75 
w16_wöMuãInc
 = 
NETEQ_OVERLAP_WINMUTE_8KHZ_INC
;

76 
w16_wöUnMuã
 = 
NETEQ_OVERLAP_WINUNMUTE_8KHZ_START
;

77 
w16_wöUnMuãInc
 = 
NETEQ_OVERLAP_WINUNMUTE_8KHZ_INC
;

78 #ifde‡
NETEQ_WIDEBAND


80 i‡(
ö°
->
fs
 == 16000)

83 
w16_wöMuã
 = 
NETEQ_OVERLAP_WINMUTE_16KHZ_START
;

84 
w16_wöMuãInc
 = 
NETEQ_OVERLAP_WINMUTE_16KHZ_INC
;

85 
w16_wöUnMuã
 = 
NETEQ_OVERLAP_WINUNMUTE_16KHZ_START
;

86 
w16_wöUnMuãInc
 = 
NETEQ_OVERLAP_WINUNMUTE_16KHZ_INC
;

88 #ifde‡
NETEQ_32KHZ_WIDEBAND


90 i‡(
ö°
->
fs
 == 32000)

93 
w16_wöMuã
 = 
NETEQ_OVERLAP_WINMUTE_32KHZ_START
;

94 
w16_wöMuãInc
 = 
NETEQ_OVERLAP_WINMUTE_32KHZ_INC
;

95 
w16_wöUnMuã
 = 
NETEQ_OVERLAP_WINUNMUTE_32KHZ_START
;

96 
w16_wöUnMuãInc
 = 
NETEQ_OVERLAP_WINUNMUTE_32KHZ_INC
;

98 #ifde‡
NETEQ_48KHZ_WIDEBAND


100 i‡(
ö°
->
fs
 == 48000)

103 
w16_wöMuã
 = 
NETEQ_OVERLAP_WINMUTE_48KHZ_START
;

104 
w16_wöMuãInc
 = 
NETEQ_OVERLAP_WINMUTE_48KHZ_INC
;

105 
w16_wöUnMuã
 = 
NETEQ_OVERLAP_WINUNMUTE_48KHZ_START
;

106 
w16_wöUnMuãInc
 = 
NETEQ_OVERLAP_WINUNMUTE_48KHZ_INC
;

112  
NETEQ_OTHER_ERROR
;

116 
i
 = 0; i < 
ö°
->
Ex∑ndIn°
.
w16_ovîœp
; i++)

119 
ö°
->
Ex∑ndIn°
.
pw16_ovîœpVec
[
i
] = (
öt16_t
Ë
	`WEBRTC_SPL_RSHIFT_W32
(

120 
	`WEBRTC_SPL_MUL_16_16
(

121 
ö°
->
Ex∑ndIn°
.
pw16_ovîœpVec
[
i
], 
w16_wöMuã
) +

122 
	`WEBRTC_SPL_MUL_16_16
(
pw16_outD©a
[
i
], 
w16_wöUnMuã
)

125 
w16_wöMuã
 +
w16_wöMuãInc
;

126 
w16_wöUnMuã
 +
w16_wöUnMuãInc
;

135 
	`WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
,Öw16_outD©a+
ö°
->
Ex∑ndIn°
.
w16_ovîœp
, 
Àn
);

143 i‡(
	`WebRtcCng_Gíî©e
(
ö°
->
CNG_Codec_ö°
, 
pw16_outD©a
, (
öt16_t
Ë
Àn
, 0) < 0)

146  -
	`WebRtcCng_GëEº‹CodeDec
(
ö°
->
CNG_Codec_ö°
);

152 
	}
}

	@codec_db.c

15 
	~"codec_db.h
"

17 
	~<°rög.h
>

19 
	~"sig«l_¥o˚ssög_libøry.h
"

21 
	~"√ãq_îr‹_codes.h
"

27 
	$WebRtcNëEQ_DbRe£t
(
CodecDbIn°_t
 *
ö°
)

29 
i
;

31 
	`WebRtcS∂_MemSëW16
((
öt16_t
*Ë
ö°
, 0,

32 (
CodecDbIn°_t
Ë/ (
öt16_t
));

34 
i
 = 0; i < 
NUM_TOTAL_CODECS
; i++)

36 
ö°
->
posôi⁄
[
i
] = -1;

39 
i
 = 0; i < 
NUM_CODECS
; i++)

41 
ö°
->
∑ylﬂdTy≥
[
i
] = -1;

44 
i
 = 0; i < 
NUM_CNG_CODECS
; i++)

46 
ö°
->
CNG∑ylﬂdTy≥
[
i
] = -1;

50 
	}
}

56 
	$WebRtcNëEQ_DbAdd
(
CodecDbIn°_t
 *
ö°
, 
WebRtcNëEQDecodî
 
codec
,

57 
öt16_t
 
∑ylﬂdTy≥
, 
FuncDecode
 
funcDecode
,

58 
FuncDecode
 
funcDecodeRCU
, 
FuncDecodePLC
 
funcDecodePLC
,

59 
FuncDecodeInô
 
funcDecodeInô
, 
FuncAddL©ePkt
 
funcAddL©ePkt
,

60 
FuncGëMDöfo
 
funcGëMDöfo
, 
FuncGëPôchInfo
 
funcGëPôch
,

61 
FuncUpdBWE°
 
funcUpdBWE°
, 
FuncDuøti⁄E°
 
funcDuøti⁄E°
,

62 
FuncGëEº‹Code
 
funcGëEº‹Code
, * 
codec_°©e
,

63 
uöt16_t
 
codec_fs
)

66 
ãmp
;

67 
ö£πCNGcodec
 = 0, 
ovîwrôeCNGcodec
 = 0, 
CNGpos
 = -1;

69 #i‚de‡
NETEQ_RED_CODEC


70 i‡(
codec
 =
kDecodîRED
)

72  
CODEC_DB_UNSUPPORTED_CODEC
;

75 i‡(((Ë
codec
 <(Ë
kDecodîRe£rvedSèπ
) || (() codec

76 >(Ë
kDecodîRe£rvedEnd
))

78  
CODEC_DB_UNSUPPORTED_CODEC
;

81 i‡((
codec_fs
 != 8000)

82 #ifde‡
NETEQ_WIDEBAND


83 &&(
codec_fs
!=16000)

85 #ifde‡
NETEQ_32KHZ_WIDEBAND


86 &&(
codec_fs
!=32000)

88 #i‡
	`deföed
(
NETEQ_48KHZ_WIDEBAND
Ë|| deföed(
NETEQ_OPUS_CODEC
)

89 &&(
codec_fs
!=48000)

93  
CODEC_DB_UNSUPPORTED_FS
;

97 
codec
)

99 #ifde‡
NETEQ_PCM16B_CODEC


100 
kDecodîPCM16B
 :

101 
kDecodîPCM16B_2ch
 :

103 #ifde‡
NETEQ_G711_CODEC


104 
kDecodîPCMu
 :

105 
kDecodîPCMa
 :

106 
kDecodîPCMu_2ch
 :

107 
kDecodîPCMa_2ch
 :

109 #ifde‡
NETEQ_ILBC_CODEC


110 
kDecodîILBC
 :

112 #ifde‡
NETEQ_ISAC_CODEC


113 
kDecodîISAC
 :

115 #ifde‡
NETEQ_ISAC_SWB_CODEC


116 
kDecodîISACswb
 :

118 #ifde‡
NETEQ_ISAC_FB_CODEC


119 
kDecodîISACfb
 :

121 #ifde‡
NETEQ_OPUS_CODEC


122 
kDecodîOpus
 :

124 #ifde‡
NETEQ_G722_CODEC


125 
kDecodîG722
 :

126 
kDecodîG722_2ch
 :

128 #ifde‡
NETEQ_WIDEBAND


129 
kDecodîPCM16Bwb
 :

130 
kDecodîPCM16Bwb_2ch
 :

132 #ifde‡
NETEQ_32KHZ_WIDEBAND


133 
kDecodîPCM16Bswb32kHz
 :

134 
kDecodîPCM16Bswb32kHz_2ch
 :

136 #ifde‡
NETEQ_CNG_CODEC


137 
kDecodîCNG
 :

139 #ifde‡
NETEQ_ATEVENT_DECODE


140 
kDecodîAVT
 :

142 #ifde‡
NETEQ_RED_CODEC


143 
kDecodîRED
 :

145 #ifde‡
NETEQ_48KHZ_WIDEBAND


146 
kDecodîPCM16Bswb48kHz
 :

148 #ifde‡
NETEQ_ARBITRARY_CODEC


149 
kDecodîArbôøry
:

151 #ifde‡
NETEQ_G729_CODEC


152 
kDecodîG729
:

154 #ifde‡
NETEQ_G729_1_CODEC


155 
kDecodîG729_1
 :

157 #ifde‡
NETEQ_G726_CODEC


158 
kDecodîG726_16
 :

159 
kDecodîG726_24
 :

160 
kDecodîG726_32
 :

161 
kDecodîG726_40
 :

163 #ifde‡
NETEQ_G722_1_CODEC


164 
kDecodîG722_1_16
 :

165 
kDecodîG722_1_24
 :

166 
kDecodîG722_1_32
 :

168 #ifde‡
NETEQ_G722_1C_CODEC


169 
kDecodîG722_1C_24
 :

170 
kDecodîG722_1C_32
 :

171 
kDecodîG722_1C_48
 :

173 #ifde‡
NETEQ_SPEEX_CODEC


174 
kDecodîSPEEX_8
 :

175 
kDecodîSPEEX_16
 :

177 #ifde‡
NETEQ_CELT_CODEC


178 
kDecodîCELT_32
 :

179 
kDecodîCELT_32_2ch
 :

181 #ifde‡
NETEQ_GSMFR_CODEC


182 
kDecodîGSMFR
 :

184 #ifde‡
NETEQ_AMR_CODEC


185 
kDecodîAMR
 :

187 #ifde‡
NETEQ_AMRWB_CODEC


188 
kDecodîAMRWB
 :

197  
CODEC_DB_UNSUPPORTED_CODEC
;

202 i‡(
	`WebRtcNëEQ_DbGëCodec
(
ö°
, 
∑ylﬂdTy≥
) > 0)

204  
CODEC_DB_PAYLOAD_TAKEN
;

208 i‡(
codec
 =
kDecodîCNG
)

211 i‡(
	`WebRtcNëEQ_DbGëPaylﬂd
(
ö°
, 
codec
Ë=
CODEC_DB_NOT_EXIST2
)

214 
ö£πCNGcodec
 = 1;

218 
codec_fs
)

220 #ifde‡
NETEQ_WIDEBAND


222 
CNGpos
 = 1;

225 #ifde‡
NETEQ_32KHZ_WIDEBAND


227 
CNGpos
 = 2;

230 #ifde‡
NETEQ_48KHZ_WIDEBAND


232 
CNGpos
 = 3;

236 
CNGpos
 = 0;

242 
ovîwrôeCNGcodec
 = !
ö£πCNGcodec
;

247 
ö°
->
CNG∑ylﬂdTy≥
[
CNGpos
] = 
∑ylﬂdTy≥
;

251 i‡((
codec
 !
kDecodîCNG
Ë|| (
ö£πCNGcodec
 =1Ë|| (
ovîwrôeCNGcodec
 == 1))

254 i‡(
ö°
->
ƒOfCodecs
 =
NUM_CODECS
Ë 
CODEC_DB_FULL
;

258 i‡((
ö°
->
posôi⁄
[
codec
] !-1Ë&& (
ovîwrôeCNGcodec
 != 1))

260 
	`WebRtcNëEQ_DbRemove
(
ö°
, 
codec
);

263 i‡(
ovîwrôeCNGcodec
 == 1)

265 
ãmp
 = 
ö°
->
posôi⁄
[
codec
];

269 
ãmp
 = 
ö°
->
ƒOfCodecs
;

270 
ö°
->
posôi⁄
[
codec
] = 
ãmp
;

271 
ö°
->
ƒOfCodecs
++;

274 
ö°
->
∑ylﬂdTy≥
[
ãmp
] =ÖayloadType;

277 
ö°
->
codec_°©e
[
ãmp
] = codec_state;

278 
ö°
->
funcDecode
[
ãmp
] = funcDecode;

279 
ö°
->
funcDecodeRCU
[
ãmp
] = funcDecodeRCU;

280 
ö°
->
funcAddL©ePkt
[
ãmp
] = funcAddLatePkt;

281 
ö°
->
funcDecodeInô
[
ãmp
] = funcDecodeInit;

282 
ö°
->
funcDecodePLC
[
ãmp
] = funcDecodePLC;

283 
ö°
->
funcGëMDöfo
[
ãmp
] = funcGetMDinfo;

284 
ö°
->
funcGëPôch
[
ãmp
] = funcGetPitch;

285 
ö°
->
funcUpdBWE°
[
ãmp
] = funcUpdBWEst;

286 
ö°
->
funcDuøti⁄E°
[
ãmp
] = funcDurationEst;

287 
ö°
->
funcGëEº‹Code
[
ãmp
] = funcGetErrorCode;

288 
ö°
->
codec_fs
[
ãmp
] = codec_fs;

293 
	}
}

299 
	$WebRtcNëEQ_DbRemove
(
CodecDbIn°_t
 *
ö°
, 
WebRtcNëEQDecodî
 
codec
)

301 
i
;

302 
pos
 = -1;

304 #i‚de‡
NETEQ_RED_CODEC


305 i‡(
codec
 =
kDecodîRED
)

307  
CODEC_DB_UNSUPPORTED_CODEC
;

310 i‡(((Ë
codec
 <(Ë
kDecodîRe£rvedSèπ
) || (() codec

311 >(Ë
kDecodîRe£rvedEnd
))

313  
CODEC_DB_UNSUPPORTED_CODEC
;

316 
pos
 = 
ö°
->
posôi⁄
[
codec
];

317 i‡(
pos
 == -1)

319  
CODEC_DB_NOT_EXIST4
;

324 
ö°
->
posôi⁄
[
codec
] = -1;

325 
i
 = 
pos
; i < (
ö°
->
ƒOfCodecs
 - 1); i++)

327 
ö°
->
∑ylﬂdTy≥
[
i
] = inst->payloadType[i + 1];

328 
ö°
->
codec_°©e
[
i
] = inst->codec_state[i + 1];

329 
ö°
->
funcDecode
[
i
] = inst->funcDecode[i + 1];

330 
ö°
->
funcDecodeRCU
[
i
] = inst->funcDecodeRCU[i + 1];

331 
ö°
->
funcAddL©ePkt
[
i
] = inst->funcAddLatePkt[i + 1];

332 
ö°
->
funcDecodeInô
[
i
] = inst->funcDecodeInit[i + 1];

333 
ö°
->
funcDecodePLC
[
i
] = inst->funcDecodePLC[i + 1];

334 
ö°
->
funcGëMDöfo
[
i
] = inst->funcGetMDinfo[i + 1];

335 
ö°
->
funcGëPôch
[
i
] = inst->funcGetPitch[i + 1];

336 
ö°
->
funcDuøti⁄E°
[
i
] = inst->funcDurationEst[i + 1];

337 
ö°
->
funcUpdBWE°
[
i
] = inst->funcUpdBWEst[i + 1];

338 
ö°
->
funcGëEº‹Code
[
i
] = inst->funcGetErrorCode[i + 1];

339 
ö°
->
codec_fs
[
i
] = inst->codec_fs[i + 1];

341 
ö°
->
∑ylﬂdTy≥
[
i
] = -1;

342 
ö°
->
codec_°©e
[
i
] = 
NULL
;

343 
ö°
->
funcDecode
[
i
] = 
NULL
;

344 
ö°
->
funcDecodeRCU
[
i
] = 
NULL
;

345 
ö°
->
funcAddL©ePkt
[
i
] = 
NULL
;

346 
ö°
->
funcDecodeInô
[
i
] = 
NULL
;

347 
ö°
->
funcDecodePLC
[
i
] = 
NULL
;

348 
ö°
->
funcGëMDöfo
[
i
] = 
NULL
;

349 
ö°
->
funcGëPôch
[
i
] = 
NULL
;

350 
ö°
->
funcDuøti⁄E°
[
i
] = 
NULL
;

351 
ö°
->
funcUpdBWE°
[
i
] = 
NULL
;

352 
ö°
->
funcGëEº‹Code
[
i
] = 
NULL
;

353 
ö°
->
codec_fs
[
i
] = 0;

355 
i
 = 0; i < 
NUM_TOTAL_CODECS
; i++)

357 i‡(
ö°
->
posôi⁄
[
i
] >
pos
)

359 
ö°
->
posôi⁄
[
i
] = inst->position[i] - 1;

362 
ö°
->
ƒOfCodecs
--;

364 i‡(
codec
 =
kDecodîCNG
)

367 
i
 = 0; i < 
NUM_CNG_CODECS
; i++)

369 
ö°
->
CNG∑ylﬂdTy≥
[
i
] = -1;

374 
	}
}

380 
	$WebRtcNëEQ_DbGëPås
(
CodecDbIn°_t
 *
ö°
, 
WebRtcNëEQDecodî
 
codec
,

381 
CodecFuncIn°_t
 *
±r_ö°
)

384 
pos
 = 
ö°
->
posôi⁄
[
codec
];

385 i‡((
codec
 <
kDecodîRe£rvedSèπ
Ë|| (code¯>
kDecodîRe£rvedEnd
) || (codec

386 > 
NUM_TOTAL_CODECS
))

389 
pos
 = -1;

391 i‡(
pos
 >= 0)

393 
±r_ö°
->
codec_°©e
 = 
ö°
->codec_°©e[
pos
];

394 
±r_ö°
->
funcAddL©ePkt
 = 
ö°
->funcAddL©ePkt[
pos
];

395 
±r_ö°
->
funcDecode
 = 
ö°
->funcDecode[
pos
];

396 
±r_ö°
->
funcDecodeRCU
 = 
ö°
->funcDecodeRCU[
pos
];

397 
±r_ö°
->
funcDecodeInô
 = 
ö°
->funcDecodeInô[
pos
];

398 
±r_ö°
->
funcDecodePLC
 = 
ö°
->funcDecodePLC[
pos
];

399 
±r_ö°
->
funcGëMDöfo
 = 
ö°
->funcGëMDöfo[
pos
];

400 
±r_ö°
->
funcUpdBWE°
 = 
ö°
->funcUpdBWE°[
pos
];

401 
±r_ö°
->
funcGëEº‹Code
 = 
ö°
->funcGëEº‹Code[
pos
];

402 
±r_ö°
->
codec_fs
 = 
ö°
->codec_fs[
pos
];

407 
	`WebRtcS∂_MemSëW16
((
öt16_t
*Ë
±r_ö°
, 0,

408 (
CodecFuncIn°_t
Ë/ (
öt16_t
));

409  
CODEC_DB_NOT_EXIST1
;

411 
	}
}

417 
	$WebRtcNëEQ_DbGëPaylﬂd
(
CodecDbIn°_t
 *
ö°
, 
WebRtcNëEQDecodî
 
codecID
)

419 i‡(
ö°
->
posôi⁄
[
codecID
] == -1)

420  
CODEC_DB_NOT_EXIST2
;

422  (
ö°
->
∑ylﬂdTy≥
[ö°->
posôi⁄
[
codecID
]]);

424 
	}
}

431 
	$WebRtcNëEQ_DbGëCodec
(c⁄° 
CodecDbIn°_t
 *
ö°
, 
∑ylﬂdTy≥
)

433 
i
, 
pos
;

435 
i
 = 0; i < 
NUM_TOTAL_CODECS
; i++)

437 
pos
 = 
ö°
->
posôi⁄
[
i
];

438 i‡(
pos
 != -1)

440 i‡(
ö°
->
∑ylﬂdTy≥
[
pos
] =∑ylﬂdTy≥Ë 
i
;

446 i‡(
	`WebRtcNëEQ_DbIsCNGPaylﬂd
(
ö°
, 
∑ylﬂdTy≥
))

448  
kDecodîCNG
;

452  
CODEC_DB_NOT_EXIST3
;

453 
	}
}

459 
	$WebRtcNëEQ_DbGëS∂ôInfo
(
S∂ôInfo_t
 *
ö°
, 
WebRtcNëEQDecodî
 
codecID
,

460 
codedsize
)

463 
codecID
)

465 #ifde‡
NETEQ_ISAC_CODEC


466 
kDecodîISAC
:

468 #ifde‡
NETEQ_ISAC_SWB_CODEC


469 
kDecodîISACswb
:

471 #ifde‡
NETEQ_ISAC_FB_CODEC


472 
kDecodîISACfb
:

474 #ifde‡
NETEQ_OPUS_CODEC


475 
kDecodîOpus
:

477 #ifde‡
NETEQ_ARBITRARY_CODEC


478 
kDecodîArbôøry
:

480 #ifde‡
NETEQ_AMR_CODEC


481 
kDecodîAMR
:

483 #ifde‡
NETEQ_AMRWB_CODEC


484 
kDecodîAMRWB
:

486 #ifde‡
NETEQ_G726_CODEC


488 
kDecodîG726_16
:

489 
kDecodîG726_24
:

490 
kDecodîG726_32
:

491 
kDecodîG726_40
:

493 #ifde‡
NETEQ_SPEEX_CODEC


494 
kDecodîSPEEX_8
:

495 
kDecodîSPEEX_16
:

497 #ifde‡
NETEQ_CELT_CODEC


498 
kDecodîCELT_32
 :

499 
kDecodîCELT_32_2ch
 :

501 #ifde‡
NETEQ_G729_1_CODEC


502 
kDecodîG729_1
:

506 
ö°
->
dñèByãs
 = 
NO_SPLIT
;

515 #i‡(
deföed
 
NETEQ_G711_CODEC
)

516 
kDecodîPCMu
:

517 
kDecodîPCMa
:

518 
kDecodîPCMu_2ch
:

519 
kDecodîPCMa_2ch
:

521 
ö°
->
dñèByãs
 = -12;

522 
ö°
->
dñèTime
 = 1;

526 #i‡(
deföed
 
NETEQ_G722_CODEC
)

527 
kDecodîG722
:

528 
kDecodîG722_2ch
:

530 
ö°
->
dñèByãs
 = -14;

531 
ö°
->
dñèTime
 = 0;

535 #i‡(
deföed
 
NETEQ_PCM16B_CODEC
)

536 
kDecodîPCM16B
:

537 
kDecodîPCM16B_2ch
:

539 
ö°
->
dñèByãs
 = -12;

540 
ö°
->
dñèTime
 = 2;

544 #i‡((
deföed
 
NETEQ_PCM16B_CODEC
)&&(deföed 
NETEQ_WIDEBAND
))

545 
kDecodîPCM16Bwb
:

546 
kDecodîPCM16Bwb_2ch
:

548 
ö°
->
dñèByãs
 = -14;

549 
ö°
->
dñèTime
 = 2;

553 #i‡((
deföed
 
NETEQ_PCM16B_CODEC
)&&(deföed 
NETEQ_32KHZ_WIDEBAND
))

554 
kDecodîPCM16Bswb32kHz
:

555 
kDecodîPCM16Bswb32kHz_2ch
:

557 
ö°
->
dñèByãs
 = -18;

558 
ö°
->
dñèTime
 = 2;

562 #i‡((
deföed
 
NETEQ_PCM16B_CODEC
)&&(deföed 
NETEQ_48KHZ_WIDEBAND
))

563 
kDecodîPCM16Bswb48kHz
:

565 
ö°
->
dñèByãs
 = -22;

566 
ö°
->
dñèTime
 = 2;

572 #ifde‡
NETEQ_G722_1_CODEC


573 
kDecodîG722_1_16
:

575 
ö°
->
dñèByãs
 = 40;

576 
ö°
->
dñèTime
 = 320;

579 
kDecodîG722_1_24
:

581 
ö°
->
dñèByãs
 = 60;

582 
ö°
->
dñèTime
 = 320;

585 
kDecodîG722_1_32
:

587 
ö°
->
dñèByãs
 = 80;

588 
ö°
->
dñèTime
 = 320;

592 #ifde‡
NETEQ_G722_1C_CODEC


593 
kDecodîG722_1C_24
:

595 
ö°
->
dñèByãs
 = 60;

596 
ö°
->
dñèTime
 = 640;

599 
kDecodîG722_1C_32
:

601 
ö°
->
dñèByãs
 = 80;

602 
ö°
->
dñèTime
 = 640;

605 
kDecodîG722_1C_48
:

607 
ö°
->
dñèByãs
 = 120;

608 
ö°
->
dñèTime
 = 640;

612 #ifde‡
NETEQ_G729_CODEC


613 
kDecodîG729
:

615 
ö°
->
dñèByãs
 = 10;

616 
ö°
->
dñèTime
 = 80;

620 #ifde‡
NETEQ_ILBC_CODEC


621 
kDecodîILBC
:

630 
codedsize
)

645 
ö°
->
dñèByãs
 = 50;

646 
ö°
->
dñèTime
 = 240;

662 
ö°
->
dñèByãs
 = 38;

663 
ö°
->
dñèTime
 = 160;

668  
AMBIGUOUS_ILBC_FRAME_SIZE
;

674 #ifde‡
NETEQ_GSMFR_CODEC


675 
kDecodîGSMFR
:

677 
ö°
->
dñèByãs
 = 33;

678 
ö°
->
dñèTime
 = 160;

684 
ö°
->
dñèByãs
 = 
NO_SPLIT
;

685  
CODEC_DB_UNKNOWN_CODEC
;

688 
	}
}

694 
	$WebRtcNëEQ_DbIsMDCodec
(
WebRtcNëEQDecodî
 
codecID
)

700 
	}
}

705 
	$WebRtcNëEQ_DbIsCNGPaylﬂd
(c⁄° 
CodecDbIn°_t
 *
ö°
, 
∑ylﬂdTy≥
)

707 #ifde‡
NETEQ_CNG_CODEC


708 
i
;

710 
i
=0; i<
NUM_CNG_CODECS
; i++)

712 if–(
ö°
->
CNG∑ylﬂdTy≥
[
i
] !-1Ë&& (ö°->CNG∑ylﬂdTy≥[i] =
∑ylﬂdTy≥
) )

721 
	}
}

726 
uöt16_t
 
	$WebRtcNëEQ_DbGëSam∂eR©e
(
CodecDbIn°_t
 *
ö°
, 
∑ylﬂdTy≥
)

728 
i
;

729 
CodecFuncIn°_t
 
codecIn°
;

732 i‡(
ö°
 =
NULL
)

739 
i
 = 0; i < 
NUM_CNG_CODECS
; i++)

741 i‡((
ö°
->
CNG∑ylﬂdTy≥
[
i
] !-1Ë&& (ö°->CNG∑ylﬂdTy≥[i] =
∑ylﬂdTy≥
))

743 
i
)

745 #ifde‡
NETEQ_WIDEBAND


749 #ifde‡
NETEQ_32KHZ_WIDEBAND


753 #ifde‡
NETEQ_48KHZ_WIDEBAND


764 
i
 = 
	`WebRtcNëEQ_DbGëCodec
(
ö°
, 
∑ylﬂdTy≥
);

765 i‡(
i
 >= 0)

767 i‡(
	`WebRtcNëEQ_DbGëPås
(
ö°
, (
WebRtcNëEQDecodî
Ë
i
, &
codecIn°
) != 0)

772  
codecIn°
.
codec_fs
;

778 
	}
}

	@codec_db.h

15 #i‚de‡
CODEC_DB_H


16 
	#CODEC_DB_H


	)

18 
	~"ty≥defs.h
"

20 
	~"öãrÁ˚/webπc_√ãq.h
"

21 
	~"codec_db_deföes.h
"

22 
	~"√ãq_deföes.h
"

24 #i‡
deföed
(
NETEQ_48KHZ_WIDEBAND
)

25 
	#NUM_CNG_CODECS
 4

	)

26 #ñi‡
deföed
(
NETEQ_32KHZ_WIDEBAND
)

27 
	#NUM_CNG_CODECS
 3

	)

28 #ñi‡
deföed
(
NETEQ_WIDEBAND
)

29 
	#NUM_CNG_CODECS
 2

	)

31 
	#NUM_CNG_CODECS
 1

	)

37 
öt16_t
 
	mposôi⁄
[
NUM_TOTAL_CODECS
];

38 
öt16_t
 
	mƒOfCodecs
;

40 
öt16_t
 
	m∑ylﬂdTy≥
[
NUM_CODECS
];

41 
FuncDecode
 
	mfuncDecode
[
NUM_CODECS
];

42 
FuncDecode
 
	mfuncDecodeRCU
[
NUM_CODECS
];

43 
FuncDecodePLC
 
	mfuncDecodePLC
[
NUM_CODECS
];

44 
FuncDecodeInô
 
	mfuncDecodeInô
[
NUM_CODECS
];

45 
FuncAddL©ePkt
 
	mfuncAddL©ePkt
[
NUM_CODECS
];

46 
FuncGëMDöfo
 
	mfuncGëMDöfo
[
NUM_CODECS
];

47 
FuncGëPôchInfo
 
	mfuncGëPôch
[
NUM_CODECS
];

48 
FuncUpdBWE°
 
	mfuncUpdBWE°
[
NUM_CODECS
];

49 
FuncDuøti⁄E°
 
	mfuncDuøti⁄E°
[
NUM_CODECS
];

50 
FuncGëEº‹Code
 
	mfuncGëEº‹Code
[
NUM_CODECS
];

51 * 
	mcodec_°©e
[
NUM_CODECS
];

52 
uöt16_t
 
	mcodec_fs
[
NUM_CODECS
];

53 
öt16_t
 
	mCNG∑ylﬂdTy≥
[
NUM_CNG_CODECS
];

55 } 
	tCodecDbIn°_t
;

57 
	#NO_SPLIT
 -1

	)

61 
öt16_t
 
	mdñèByãs
;

62 
öt16_t
 
	mdñèTime
;

63 } 
	tS∂ôInfo_t
;

68 
WebRtcNëEQ_DbRe£t
(
CodecDbIn°_t
 *
ö°
);

73 
WebRtcNëEQ_DbAdd
(
CodecDbIn°_t
 *
ö°
, 
WebRtcNëEQDecodî
 
codec
,

74 
öt16_t
 
∑ylﬂdTy≥
, 
FuncDecode
 
funcDecode
,

75 
FuncDecode
 
funcDecodeRCU
, 
FuncDecodePLC
 
funcDecodePLC
,

76 
FuncDecodeInô
 
funcDecodeInô
, 
FuncAddL©ePkt
 
funcAddL©ePkt
,

77 
FuncGëMDöfo
 
funcGëMDöfo
, 
FuncGëPôchInfo
 
funcGëPôch
,

78 
FuncUpdBWE°
 
funcUpdBWE°
, 
FuncDuøti⁄E°
 
funcDuøti⁄E°
,

79 
FuncGëEº‹Code
 
funcGëEº‹Code
, * 
codec_°©e
,

80 
uöt16_t
 
codec_fs
);

85 
WebRtcNëEQ_DbRemove
(
CodecDbIn°_t
 *
ö°
, 
WebRtcNëEQDecodî
 
codec
);

90 
WebRtcNëEQ_DbGëPås
(
CodecDbIn°_t
 *
ö°
, 
WebRtcNëEQDecodî
,

91 
CodecFuncIn°_t
 *
±r_ö°
);

97 
WebRtcNëEQ_DbGëPaylﬂd
(
CodecDbIn°_t
 *
ö°
, 
WebRtcNëEQDecodî
 
codecID
);

103 
WebRtcNëEQ_DbGëCodec
(c⁄° 
CodecDbIn°_t
 *
ö°
, 
∑ylﬂdTy≥
);

109 
WebRtcNëEQ_DbGëS∂ôInfo
(
S∂ôInfo_t
 *
ö°
, 
WebRtcNëEQDecodî
 
codecID
,

110 
codedsize
);

115 
WebRtcNëEQ_DbIsMDCodec
(
WebRtcNëEQDecodî
 
codecID
);

120 
WebRtcNëEQ_DbIsCNGPaylﬂd
(c⁄° 
CodecDbIn°_t
 *
ö°
, 
∑ylﬂdTy≥
);

125 
uöt16_t
 
WebRtcNëEQ_DbGëSam∂eR©e
(
CodecDbIn°_t
 *
ö°
, 
∑ylﬂdTy≥
);

	@codec_db_defines.h

15 #i‚de‡
CODEC_DB_DEFINES_H


16 
	#CODEC_DB_DEFINES_H


	)

18 
	~"ty≥defs.h
"

20 
	#NUM_CODECS
 47

	)

21 
	#NUM_TOTAL_CODECS
 
kDecodîRe£rvedEnd


	)

26 
	$öt16_t
 (*
	tFuncDecode
)(* 
	t°©e
, 
	töt16_t
* 
	tícoded
, i¡16_à
	tÀn
,

27 
	töt16_t
* 
	tdecoded
, i¡16_t* 
	t•ìchTy≥
);

32 
	$öt16_t
 (*
	tFuncDecodePLC
)(* 
	t°©e
, 
	töt16_t
* 
	tdecodec
,

33 
	töt16_t
 
	t‰ames
);

38 
	$öt16_t
 (*
	tFuncDecodeInô
)(* 
	t°©e
);

43 
öt16_t


44 (*
	tFuncAddL©ePkt
)(* 
	t°©e
, 
	töt16_t
* 
	tícoded
, i¡16_à
	tÀn
);

49 
	$öt16_t
 (*
	tFuncGëMDöfo
)(* 
	t°©e
);

55 
	$öt16_t
 (*
	tFuncGëPôchInfo
)(* 
	t°©e
, 
	töt16_t
* 
	tícoded
,

56 
	töt16_t
* 
	tÀngth
);

61 
	$öt16_t
 (*
	tFuncUpdBWE°
)(* 
	t°©e
, c⁄° 
	tuöt16_t
 *
	tícoded
,

62 
	töt32_t
 
	t∑ckë_size
,

63 
	tuöt16_t
 
	tπp_£q_numbî
, 
	tuöt32_t
 
	t£nd_ts
,

64 
	tuöt32_t
 
	t¨r_ts
);

70 (*
	tFuncDuøti⁄E°
)(* 
	t°©e
, c⁄° 
	tuöt8_t
* 
	t∑ylﬂd
,

71 
	t∑ylﬂd_Àngth_byãs
);

76 
	$öt16_t
 (*
	tFuncGëEº‹Code
)(* 
	t°©e
);

78 
	sCodecFuncIn°_t_


81 
FuncDecode
 
funcDecode
;

82 
FuncDecode
 
funcDecodeRCU
;

83 
FuncDecodePLC
 
funcDecodePLC
;

84 
FuncDecodeInô
 
funcDecodeInô
;

85 
FuncAddL©ePkt
 
funcAddL©ePkt
;

86 
FuncGëMDöfo
 
funcGëMDöfo
;

87 
FuncUpdBWE°
 
funcUpdBWE°
;

88 
FuncDuøti⁄E°
 
funcDuøti⁄E°
;

89 
FuncGëEº‹Code
 
funcGëEº‹Code
;

90 * 
codec_°©e
;

91 
uöt16_t
 
codec_fs
;

92 
uöt32_t
 
timeSèmp
;

94 } 
	tCodecFuncIn°_t
;

	@complex_bit_reverse.c

11 
	~"sig«l_¥o˚ssög_libøry.h
"

20 c⁄° 
öt16_t
 
	gödex_7
[112] = {

31 c⁄° 
öt16_t
 
	gödex_8
[240] = {

49 
	$WebRtcS∂_Com∂exBôRevî£
(
öt16_t
* 
__ª°ri˘
 
com∂ex_d©a
, 
°ages
) {

55 i‡(
°ages
 == 7 || stages == 8) {

56 
m
 = 0;

57 
Àngth
 = 112;

58 c⁄° 
öt16_t
* 
ödex
 = 
ödex_7
;

60 i‡(
°ages
 == 8) {

61 
Àngth
 = 240;

62 
ödex
 = 
ödex_8
;

66 
m
 = 0; m < 
Àngth
; m += 2) {

71 
öt32_t
* 
com∂ex_d©a_±r
 = (öt32_t*)
com∂ex_d©a
;

72 
öt32_t
 
ãmp
 = 0;

74 
ãmp
 = 
com∂ex_d©a_±r
[
ödex
[
m
]];

75 
com∂ex_d©a_±r
[
ödex
[
m
]] = complex_data_ptr[index[m + 1]];

76 
com∂ex_d©a_±r
[
ödex
[
m
 + 1]] = 
ãmp
;

80 
m
 = 0, 
mr
 = 0, 
l
 = 0;

81 
n
 = 1 << 
°ages
;

82 
¬
 = 
n
 - 1;

85 
m
 = 1; m <
¬
; ++m) {

86 
öt32_t
* 
com∂ex_d©a_±r
 = (öt32_t*)
com∂ex_d©a
;

87 
öt32_t
 
ãmp
 = 0;

90 
l
 = 
n
;

92 
l
 >>= 1;

93 } 
l
 > 
¬
 - 
mr
);

94 
mr
 = (m∏& (
l
 - 1)) +Ü;

96 i‡(
mr
 <
m
) {

103 
ãmp
 = 
com∂ex_d©a_±r
[
m
];

104 
com∂ex_d©a_±r
[
m
] = com∂ex_d©a_±r[
mr
];

105 
com∂ex_d©a_±r
[
mr
] = 
ãmp
;

108 
	}
}

	@complex_fft.c

18 
	~"sig«l_¥o˚ssög_libøry.h
"

19 
	~"com∂ex_f·_èbÀs.h
"

21 
	#CFFTSFT
 14

	)

22 
	#CFFTRND
 1

	)

23 
	#CFFTRND2
 16384

	)

25 
	#CIFFTSFT
 14

	)

26 
	#CIFFTRND
 1

	)

29 
	$WebRtcS∂_Com∂exFFT
(
öt16_t
 
‰fi
[], 
°ages
, 
mode
)

31 
i
, 
j
, 
l
, 
k
, 
i°ï
, 
n
, 
m
;

32 
öt16_t
 
wr
, 
wi
;

33 
öt32_t
 
å32
, 
ti32
, 
qr32
, 
qi32
;

38 
n
 = 1 << 
°ages
;

39 i‡(
n
 > 1024)

42 
l
 = 1;

43 
k
 = 10 - 1;

46 i‡(
mode
 == 0)

49 
l
 < 
n
)

51 
i°ï
 = 
l
 << 1;

53 
m
 = 0; m < 
l
; ++m)

55 
j
 = 
m
 << 
k
;

61 
wr
 = 
kSöTabÀ1024
[
j
 + 256];

62 
wi
 = -
kSöTabÀ1024
[
j
];

64 
i
 = 
m
; i < 
n
; i +
i°ï
)

66 
j
 = 
i
 + 
l
;

68 
å32
 = 
	`WEBRTC_SPL_RSHIFT_W32
((
	`WEBRTC_SPL_MUL_16_16
(
wr
, 
‰fi
[2 * 
j
])

69 - 
	`WEBRTC_SPL_MUL_16_16
(
wi
, 
‰fi
[2 * 
j
 + 1])), 15);

71 
ti32
 = 
	`WEBRTC_SPL_RSHIFT_W32
((
	`WEBRTC_SPL_MUL_16_16
(
wr
, 
‰fi
[2 * 
j
 + 1])

72 + 
	`WEBRTC_SPL_MUL_16_16
(
wi
, 
‰fi
[2 * 
j
])), 15);

74 
qr32
 = (
öt32_t
)
‰fi
[2 * 
i
];

75 
qi32
 = (
öt32_t
)
‰fi
[2 * 
i
 + 1];

76 
‰fi
[2 * 
j
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
qr32
 - 
å32
, 1);

77 
‰fi
[2 * 
j
 + 1] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
qi32
 - 
ti32
, 1);

78 
‰fi
[2 * 
i
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
qr32
 + 
å32
, 1);

79 
‰fi
[2 * 
i
 + 1] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
qi32
 + 
ti32
, 1);

83 --
k
;

84 
l
 = 
i°ï
;

91 
l
 < 
n
)

93 
i°ï
 = 
l
 << 1;

95 
m
 = 0; m < 
l
; ++m)

97 
j
 = 
m
 << 
k
;

103 
wr
 = 
kSöTabÀ1024
[
j
 + 256];

104 
wi
 = -
kSöTabÀ1024
[
j
];

106 #ifde‡
WEBRTC_ARCH_ARM_V7


107 
öt32_t
 
wri
 = 0;

108 
öt32_t
 
‰fi_r
 = 0;

109 
__asm
 
	`__vﬁ©ûe
("pkhbà%0, %1, %2,Ü¶ #16" : "Ù"(
wri
) :

110 "r"((
öt32_t
)
wr
), "r"((öt32_t)
wi
));

113 
i
 = 
m
; i < 
n
; i +
i°ï
)

115 
j
 = 
i
 + 
l
;

117 #ifde‡
WEBRTC_ARCH_ARM_V7


118 
__asm
 
	`__vﬁ©ûe
(

122 :[
‰fi_r
]"+r"(frfi_r),

123 [
å32
]"=r"(tr32),

124 [
ti32
]"=r"(ti32)

125 :[
‰fi_eví
]"r"((
öt32_t
)
‰fi
[2*
j
]),

126 [
‰fi_odd
]"r"((
öt32_t
)
‰fi
[2*
j
 +1]),

127 [
wri
]"r"(wri),

128 [
cf·∫d
]"r"(
CFFTRND
)

132 
å32
 = 
	`WEBRTC_SPL_MUL_16_16
(
wr
, 
‰fi
[2 * 
j
])

133 - 
	`WEBRTC_SPL_MUL_16_16
(
wi
, 
‰fi
[2 * 
j
 + 1]Ë+ 
CFFTRND
;

135 
ti32
 = 
	`WEBRTC_SPL_MUL_16_16
(
wr
, 
‰fi
[2 * 
j
 + 1])

136 + 
	`WEBRTC_SPL_MUL_16_16
(
wi
, 
‰fi
[2 * 
j
]Ë+ 
CFFTRND
;

139 
å32
 = 
	`WEBRTC_SPL_RSHIFT_W32
—r32, 15 - 
CFFTSFT
);

140 
ti32
 = 
	`WEBRTC_SPL_RSHIFT_W32
—i32, 15 - 
CFFTSFT
);

142 
qr32
 = ((
öt32_t
)
‰fi
[2 * 
i
]Ë<< 
CFFTSFT
;

143 
qi32
 = ((
öt32_t
)
‰fi
[2 * 
i
 + 1]Ë<< 
CFFTSFT
;

145 
‰fi
[2 * 
j
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(

146 (
qr32
 - 
å32
 + 
CFFTRND2
), 1 + 
CFFTSFT
);

147 
‰fi
[2 * 
j
 + 1] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(

148 (
qi32
 - 
ti32
 + 
CFFTRND2
), 1 + 
CFFTSFT
);

149 
‰fi
[2 * 
i
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(

150 (
qr32
 + 
å32
 + 
CFFTRND2
), 1 + 
CFFTSFT
);

151 
‰fi
[2 * 
i
 + 1] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(

152 (
qi32
 + 
ti32
 + 
CFFTRND2
), 1 + 
CFFTSFT
);

156 --
k
;

157 
l
 = 
i°ï
;

161 
	}
}

163 
	$WebRtcS∂_Com∂exIFFT
(
öt16_t
 
‰fi
[], 
°ages
, 
mode
)

165 
i
, 
j
, 
l
, 
k
, 
i°ï
, 
n
, 
m
, 
sˇÀ
, 
shi·
;

166 
öt16_t
 
wr
, 
wi
;

167 
öt32_t
 
å32
, 
ti32
, 
qr32
, 
qi32
;

168 
öt32_t
 
tmp32
, 
round2
;

173 
n
 = 1 << 
°ages
;

174 i‡(
n
 > 1024)

177 
sˇÀ
 = 0;

179 
l
 = 1;

180 
k
 = 10 - 1;

183 
l
 < 
n
)

186 
shi·
 = 0;

187 
round2
 = 8192;

189 
tmp32
 = (
öt32_t
)
	`WebRtcS∂_MaxAbsVÆueW16
(
‰fi
, 2 * 
n
);

190 i‡(
tmp32
 > 13573)

192 
shi·
++;

193 
sˇÀ
++;

194 
round2
 <<= 1;

196 i‡(
tmp32
 > 27146)

198 
shi·
++;

199 
sˇÀ
++;

200 
round2
 <<= 1;

203 
i°ï
 = 
l
 << 1;

205 i‡(
mode
 == 0)

208 
m
 = 0; m < 
l
; ++m)

210 
j
 = 
m
 << 
k
;

216 
wr
 = 
kSöTabÀ1024
[
j
 + 256];

217 
wi
 = 
kSöTabÀ1024
[
j
];

219 
i
 = 
m
; i < 
n
; i +
i°ï
)

221 
j
 = 
i
 + 
l
;

223 
å32
 = 
	`WEBRTC_SPL_RSHIFT_W32
((
	`WEBRTC_SPL_MUL_16_16_RSFT
(
wr
, 
‰fi
[2 * 
j
], 0)

224 - 
	`WEBRTC_SPL_MUL_16_16_RSFT
(
wi
, 
‰fi
[2 * 
j
 + 1], 0)), 15);

226 
ti32
 = 
	`WEBRTC_SPL_RSHIFT_W32
(

227 (
	`WEBRTC_SPL_MUL_16_16_RSFT
(
wr
, 
‰fi
[2 * 
j
 + 1], 0)

228 + 
	`WEBRTC_SPL_MUL_16_16_RSFT
(
wi
,
‰fi
[2*
j
],0)), 15);

230 
qr32
 = (
öt32_t
)
‰fi
[2 * 
i
];

231 
qi32
 = (
öt32_t
)
‰fi
[2 * 
i
 + 1];

232 
‰fi
[2 * 
j
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
qr32
 - 
å32
, 
shi·
);

233 
‰fi
[2 * 
j
 + 1] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
qi32
 - 
ti32
, 
shi·
);

234 
‰fi
[2 * 
i
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
qr32
 + 
å32
, 
shi·
);

235 
‰fi
[2 * 
i
 + 1] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
qi32
 + 
ti32
, 
shi·
);

242 
m
 = 0; m < 
l
; ++m)

244 
j
 = 
m
 << 
k
;

250 
wr
 = 
kSöTabÀ1024
[
j
 + 256];

251 
wi
 = 
kSöTabÀ1024
[
j
];

253 #ifde‡
WEBRTC_ARCH_ARM_V7


254 
öt32_t
 
wri
 = 0;

255 
öt32_t
 
‰fi_r
 = 0;

256 
__asm
 
	`__vﬁ©ûe
("pkhbà%0, %1, %2,Ü¶ #16" : "Ù"(
wri
) :

257 "r"((
öt32_t
)
wr
), "r"((öt32_t)
wi
));

260 
i
 = 
m
; i < 
n
; i +
i°ï
)

262 
j
 = 
i
 + 
l
;

264 #ifde‡
WEBRTC_ARCH_ARM_V7


265 
__asm
 
	`__vﬁ©ûe
(

269 :[
‰fi_r
]"+r"(frfi_r),

270 [
å32
]"=r"(tr32),

271 [
ti32
]"=r"(ti32)

272 :[
‰fi_eví
]"r"((
öt32_t
)
‰fi
[2*
j
]),

273 [
‰fi_odd
]"r"((
öt32_t
)
‰fi
[2*
j
 +1]),

274 [
wri
]"r"(wri),

275 [
cif·∫d
]"r"(
CIFFTRND
)

279 
å32
 = 
	`WEBRTC_SPL_MUL_16_16
(
wr
, 
‰fi
[2 * 
j
])

280 - 
	`WEBRTC_SPL_MUL_16_16
(
wi
, 
‰fi
[2 * 
j
 + 1]Ë+ 
CIFFTRND
;

282 
ti32
 = 
	`WEBRTC_SPL_MUL_16_16
(
wr
, 
‰fi
[2 * 
j
 + 1])

283 + 
	`WEBRTC_SPL_MUL_16_16
(
wi
, 
‰fi
[2 * 
j
]Ë+ 
CIFFTRND
;

285 
å32
 = 
	`WEBRTC_SPL_RSHIFT_W32
—r32, 15 - 
CIFFTSFT
);

286 
ti32
 = 
	`WEBRTC_SPL_RSHIFT_W32
—i32, 15 - 
CIFFTSFT
);

288 
qr32
 = ((
öt32_t
)
‰fi
[2 * 
i
]Ë<< 
CIFFTSFT
;

289 
qi32
 = ((
öt32_t
)
‰fi
[2 * 
i
 + 1]Ë<< 
CIFFTSFT
;

291 
‰fi
[2 * 
j
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
qr32
 - 
å32
+
round2
),

292 
shi·
+
CIFFTSFT
);

293 
‰fi
[2 * 
j
 + 1] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(

294 (
qi32
 - 
ti32
 + 
round2
), 
shi·
 + 
CIFFTSFT
);

295 
‰fi
[2 * 
i
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
qr32
 + 
å32
 + 
round2
),

296 
shi·
 + 
CIFFTSFT
);

297 
‰fi
[2 * 
i
 + 1] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(

298 (
qi32
 + 
ti32
 + 
round2
), 
shi·
 + 
CIFFTSFT
);

303 --
k
;

304 
l
 = 
i°ï
;

306  
sˇÀ
;

307 
	}
}

	@complex_fft_tables.h

12 #i‚de‡
WEBRTC_COMMON_AUDIO_SIGNAL_PROCESSING_COMPLEX_FFT_TABLES_H_


13 
	#WEBRTC_COMMON_AUDIO_SIGNAL_PROCESSING_COMPLEX_FFT_TABLES_H_


	)

15 
	~"ty≥defs.h
"

17 c⁄° 
öt16_t
 
	gkSöTabÀ1024
[] = {

	@copy_set_operations.c

27 
	~<°rög.h
>

28 
	~"sig«l_¥o˚ssög_libøry.h
"

31 
	$WebRtcS∂_MemSëW16
(
öt16_t
 *
±r
, i¡16_à
£t_vÆue
, 
Àngth
)

33 
j
;

34 
öt16_t
 *
¨Ωå
 = 
±r
;

36 
j
 = 
Àngth
; j > 0; j--)

38 *
¨Ωå
++ = 
£t_vÆue
;

40 
	}
}

42 
	$WebRtcS∂_MemSëW32
(
öt32_t
 *
±r
, i¡32_à
£t_vÆue
, 
Àngth
)

44 
j
;

45 
öt32_t
 *
¨Ωå
 = 
±r
;

47 
j
 = 
Àngth
; j > 0; j--)

49 *
¨Ωå
++ = 
£t_vÆue
;

51 
	}
}

53 
	$WebRtcS∂_MemCpyRevî£dOrdî
(
öt16_t
* 
de°
, i¡16_t* 
sour˚
, 
Àngth
)

55 
j
;

56 
öt16_t
* 
de°På
 = 
de°
;

57 
öt16_t
* 
sour˚På
 = 
sour˚
;

59 
j
 = 0; j < 
Àngth
; j++)

61 *
de°På
-- = *
sour˚På
++;

63 
	}
}

65 
öt16_t
 
	$WebRtcS∂_C›yFromEndW16
(c⁄° 
öt16_t
 *
ve˘‹_ö
,

66 
öt16_t
 
Àngth
,

67 
öt16_t
 
ßm∂es
,

68 
öt16_t
 *
ve˘‹_out
)

71 
	`WEBRTC_SPL_MEMCPY_W16
(
ve˘‹_out
, &
ve˘‹_ö
[
Àngth
 - 
ßm∂es
], samples);

73  
ßm∂es
;

74 
	}
}

76 
öt16_t
 
	$WebRtcS∂_ZîosAºayW16
(
öt16_t
 *
ve˘‹
, i¡16_à
Àngth
)

78 
	`WebRtcS∂_MemSëW16
(
ve˘‹
, 0, 
Àngth
);

79  
Àngth
;

80 
	}
}

82 
öt16_t
 
	$WebRtcS∂_ZîosAºayW32
(
öt32_t
 *
ve˘‹
, 
öt16_t
 
Àngth
)

84 
	`WebRtcS∂_MemSëW32
(
ve˘‹
, 0, 
Àngth
);

85  
Àngth
;

86 
	}
}

88 
öt16_t
 
	$WebRtcS∂_O√sAºayW16
(
öt16_t
 *
ve˘‹
, i¡16_à
Àngth
)

90 
öt16_t
 
i
;

91 
öt16_t
 *
tmpvec
 = 
ve˘‹
;

92 
i
 = 0; i < 
Àngth
; i++)

94 *
tmpvec
++ = 1;

96  
Àngth
;

97 
	}
}

99 
öt16_t
 
	$WebRtcS∂_O√sAºayW32
(
öt32_t
 *
ve˘‹
, 
öt16_t
 
Àngth
)

101 
öt16_t
 
i
;

102 
öt32_t
 *
tmpvec
 = 
ve˘‹
;

103 
i
 = 0; i < 
Àngth
; i++)

105 *
tmpvec
++ = 1;

107  
Àngth
;

108 
	}
}

	@correlator.c

11 
	~"d•.h
"

13 
	~"sig«l_¥o˚ssög_libøry.h
"

15 
	~"d•_hñpfun˘i⁄s.h
"

27 
	#SCRATCH_pw16_c‹rVec
 0

	)

28 
	#SCRATCH_pw16_d©a_ds
 0

	)

29 
	#SCRATCH_pw32_c‹r
 124

	)

31 
	#NETEQ_CORRELATOR_DSVECLEN
 124

	)

33 
öt16_t
 
WebRtcNëEQ_C‹ªœt‹
(
DSPIn°_t
 *
ö°
,

34 #ifde‡
SCRATCH


35 
öt16_t
 *
pw16_s¸©chPå
,

37 
öt16_t
 *
pw16_d©a
,

38 
öt16_t
 
w16_d©aLí
,

39 
öt16_t
 *
pw16_c‹rOut
,

40 
öt16_t
 *
pw16_c‹rSˇÀ
)

42 
öt16_t
 
	gw16_c‹rLí
 = 60;

43 #ifde‡
SCRATCH


44 
öt16_t
 *
	gpw16_d©a_ds
 = 
pw16_s¸©chPå
 + 
SCRATCH_pw16_c‹rVec
;

45 
öt32_t
 *
	gpw32_c‹r
 = (öt32_t*Ë(
pw16_s¸©chPå
 + 
SCRATCH_pw32_c‹r
);

48 
öt16_t
 
	gpw16_d©a_ds
[
NETEQ_CORRELATOR_DSVECLEN
];

49 
öt32_t
 
	gpw32_c‹r
[54];

53 
öt16_t
 
	gw16_maxVÆ
;

54 
öt32_t
 
	gw32_maxVÆ
;

55 
öt16_t
 
	gw16_n‹mVÆ
;

56 
öt16_t
 
	gw16_n‹mVÆ2
;

58 
öt16_t
 *
	gpw16_B
 = 
NULL
;

59 
öt16_t
 
	gw16_BÀn
 = 0;

60 
öt16_t
 
	gw16_Á˘‹
 = 0;

63 i‡(
	gö°
->
	gfs
 == 8000)

65 
w16_BÀn
 = 3;

66 
	gw16_Á˘‹
 = 2;

67 
	gpw16_B
 = (
öt16_t
*Ë
WebRtcNëEQ_kDownßm∂e8kHzTbl
;

68 #ifde‡
NETEQ_WIDEBAND


70 i‡(
	gö°
->
	gfs
==16000)

72 
w16_BÀn
 = 5;

73 
	gw16_Á˘‹
 = 4;

74 
	gpw16_B
 = (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e16kHzTbl
;

76 #ifde‡
NETEQ_32KHZ_WIDEBAND


78 i‡(
	gö°
->
	gfs
==32000)

80 
w16_BÀn
 = 7;

81 
	gw16_Á˘‹
 = 8;

82 
	gpw16_B
 = (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e32kHzTbl
;

84 #ifde‡
NETEQ_48KHZ_WIDEBAND


88 
	gw16_BÀn
 = 7;

89 
	gw16_Á˘‹
 = 12;

90 
	gpw16_B
 = (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e48kHzTbl
;

95 
WebRtcS∂_Downßm∂eFa°
(

96 
pw16_d©a
 + 
w16_d©aLí
 - (
NETEQ_CORRELATOR_DSVECLEN
 * 
w16_Á˘‹
),

97 (
öt16_t
Ë(
NETEQ_CORRELATOR_DSVECLEN
 * 
w16_Á˘‹
), 
pw16_d©a_ds
,

98 
NETEQ_CORRELATOR_DSVECLEN
, 
pw16_B
, 
w16_BÀn
, 
w16_Á˘‹
, (
öt16_t
) 0);

101 
	gw16_maxVÆ
 = 
WebRtcS∂_MaxAbsVÆueW16
(
pw16_d©a_ds
, 124);

102 
	gw16_n‹mVÆ
 = 16 - 
WebRtcS∂_N‹mW32
((
öt32_t
Ë
w16_maxVÆ
);

103 
WebRtcS∂_Ve˘‹BôShi·W16
(
pw16_d©a_ds
, 
NETEQ_CORRELATOR_DSVECLEN
,Öw16_data_ds,

104 
w16_n‹mVÆ
);

108 
WebRtcNëEQ_CrossC‹r
(

109 
pw32_c‹r
, &
pw16_d©a_ds
[
NETEQ_CORRELATOR_DSVECLEN
 - 
w16_c‹rLí
],

110 &
pw16_d©a_ds
[
NETEQ_CORRELATOR_DSVECLEN
 - 
w16_c‹rLí
 - 10], 60, 54,

117 
	gw32_maxVÆ
 = 
WebRtcS∂_MaxAbsVÆueW32
(
pw32_c‹r
, 54);

118 
	gw16_n‹mVÆ2
 = 18 - 
WebRtcS∂_N‹mW32
(
w32_maxVÆ
);

119 
	gw16_n‹mVÆ2
 = 
WEBRTC_SPL_MAX
(
w16_n‹mVÆ2
, 0);

121 
WebRtcS∂_Ve˘‹BôShi·W32ToW16
(
pw16_c‹rOut
, 54, 
pw32_c‹r
, 
w16_n‹mVÆ2
);

124 *
	gpw16_c‹rSˇÀ
 = 2 * 
w16_n‹mVÆ
 + 6 + 
w16_n‹mVÆ2
;

129 #unde‡
SCRATCH_pw16_c‹rVec


130 #unde‡
SCRATCH_pw16_d©a_ds


131 #unde‡
SCRATCH_pw32_c‹r


	@cpu_features_wrapper.h

11 #i‚de‡
WEBRTC_SYSTEM_WRAPPERS_INTERFACE_CPU_FEATURES_WRAPPER_H_


12 
	#WEBRTC_SYSTEM_WRAPPERS_INTERFACE_CPU_FEATURES_WRAPPER_H_


	)

14 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

18 
	~<ty≥defs.h
>

22 
kSSE2
,

23 
kSSE3


24 } 
	tCPUFótuª
;

28 
kCPUFótuªARMv7
 = (1 << 0),

29 
kCPUFótuªVFPv3
 = (1 << 1),

30 
kCPUFótuªNEON
 = (1 << 2),

31 
kCPUFótuªLDREXSTREX
 = (1 << 3)

34 (*
WebRtc_CPUInfo
)(
	tCPUFótuª
 
	t„©uª
);

37 
WebRtc_CPUInfo
 
WebRtc_GëCPUInfo
;

40 
WebRtc_CPUInfo
 
WebRtc_GëCPUInfoNoASM
;

45 
uöt64_t
 
WebRtc_GëCPUFótuªsARM
();

47 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

	@cross_correlation.c

11 
	~"sig«l_¥o˚ssög_libøry.h
"

14 
	$WebRtcS∂_CrossC‹ªœti⁄C
(
öt32_t
* 
¸oss_c‹ªœti⁄
,

15 c⁄° 
öt16_t
* 
£q1
,

16 c⁄° 
öt16_t
* 
£q2
,

17 
öt16_t
 
dim_£q
,

18 
öt16_t
 
dim_¸oss_c‹ªœti⁄
,

19 
öt16_t
 
right_shi·s
,

20 
öt16_t
 
°ï_£q2
) {

21 
i
 = 0, 
j
 = 0;

23 
i
 = 0; i < 
dim_¸oss_c‹ªœti⁄
; i++) {

24 *
¸oss_c‹ªœti⁄
 = 0;

26 
j
 = 0; j < 
dim_£q
; j++) {

27 *
¸oss_c‹ªœti⁄
 +(
£q1
[
j
] * 
£q2
[
°ï_£q2
 * 
i
 + j]Ë>> 
right_shi·s
;

29 
¸oss_c‹ªœti⁄
++;

31 
	}
}

	@delay_logging.h

16 #i‚de‡
DELAY_LOGGING_H


17 
	#DELAY_LOGGING_H


	)

19 
	#NETEQ_DELAY_LOGGING_VERSION_STRING
 "2.0"

	)

21 
	#NETEQ_DELAY_LOGGING_SIGNAL_RECIN
 1

	)

22 
	#NETEQ_DELAY_LOGGING_SIGNAL_FLUSH
 2

	)

23 
	#NETEQ_DELAY_LOGGING_SIGNAL_CLOCK
 3

	)

24 
	#NETEQ_DELAY_LOGGING_SIGNAL_EOF
 4

	)

25 
	#NETEQ_DELAY_LOGGING_SIGNAL_DECODE
 5

	)

26 
	#NETEQ_DELAY_LOGGING_SIGNAL_CHANGE_FS
 6

	)

27 
	#NETEQ_DELAY_LOGGING_SIGNAL_MERGE_INFO
 7

	)

28 
	#NETEQ_DELAY_LOGGING_SIGNAL_EXPAND_INFO
 8

	)

29 
	#NETEQ_DELAY_LOGGING_SIGNAL_ACCELERATE_INFO
 9

	)

30 
	#NETEQ_DELAY_LOGGING_SIGNAL_PREEMPTIVE_INFO
 10

	)

31 
	#NETEQ_DELAY_LOGGING_SIGNAL_OPTBUF
 11

	)

32 
	#NETEQ_DELAY_LOGGING_SIGNAL_DECODE_ONE_DESC
 12

	)

	@division_operations.c

24 
	~"sig«l_¥o˚ssög_libøry.h
"

26 
uöt32_t
 
	$WebRtcS∂_DivU32U16
(
uöt32_t
 
num
, 
uöt16_t
 
dí
)

29 i‡(
dí
 != 0)

31  (
uöt32_t
)(
num
 / 
dí
);

34  (
uöt32_t
)0xFFFFFFFF;

36 
	}
}

38 
öt32_t
 
	$WebRtcS∂_DivW32W16
(
öt32_t
 
num
, 
öt16_t
 
dí
)

41 i‡(
dí
 != 0)

43  (
öt32_t
)(
num
 / 
dí
);

46  (
öt32_t
)0x7FFFFFFF;

48 
	}
}

50 
öt16_t
 
	$WebRtcS∂_DivW32W16ResW16
(
öt32_t
 
num
, 
öt16_t
 
dí
)

53 i‡(
dí
 != 0)

55  (
öt16_t
)(
num
 / 
dí
);

58  (
öt16_t
)0x7FFF;

60 
	}
}

62 
öt32_t
 
	$WebRtcS∂_DivResu…InQ31
(
öt32_t
 
num
, i¡32_à
dí
)

64 
öt32_t
 
L_num
 = 
num
;

65 
öt32_t
 
L_dí
 = 
dí
;

66 
öt32_t
 
div
 = 0;

67 
k
 = 31;

68 
ch™ge_sign
 = 0;

70 i‡(
num
 == 0)

73 i‡(
num
 < 0)

75 
ch™ge_sign
++;

76 
L_num
 = -
num
;

78 i‡(
dí
 < 0)

80 
ch™ge_sign
++;

81 
L_dí
 = -
dí
;

83 
k
--)

85 
div
 <<= 1;

86 
L_num
 <<= 1;

87 i‡(
L_num
 >
L_dí
)

89 
L_num
 -
L_dí
;

90 
div
++;

93 i‡(
ch™ge_sign
 == 1)

95 
div
 = -div;

97  
div
;

98 
	}
}

100 
öt32_t
 
	$WebRtcS∂_DivW32HiLow
(
öt32_t
 
num
, 
öt16_t
 
dí_hi
, i¡16_à
dí_low
)

102 
öt16_t
 
≠¥ox
, 
tmp_hi
, 
tmp_low
, 
num_hi
, 
num_low
;

103 
öt32_t
 
tmpW32
;

105 
≠¥ox
 = (
öt16_t
)
	`WebRtcS∂_DivW32W16
((
öt32_t
)0x1FFFFFFF, 
dí_hi
);

109 
tmpW32
 = (
	`WEBRTC_SPL_MUL_16_16
(
dí_hi
, 
≠¥ox
) << 1)

110 + ((
	`WEBRTC_SPL_MUL_16_16
(
dí_low
, 
≠¥ox
) >> 15) << 1);

113 
tmpW32
 = (
öt32_t
)0x7fffffffL -ÅmpW32;

116 
tmp_hi
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
tmpW32
, 16);

117 
tmp_low
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
tmpW32


118 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
tmp_hi
, 16)), 1);

121 
tmpW32
 = ((
	`WEBRTC_SPL_MUL_16_16
(
tmp_hi
, 
≠¥ox
Ë+ (WEBRTC_SPL_MUL_16_16(
tmp_low
,ápprox)

125 
tmp_hi
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
tmpW32
, 16);

126 
tmp_low
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
tmpW32


127 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
tmp_hi
, 16)), 1);

130 
num_hi
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
num
, 16);

131 
num_low
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
num


132 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
num_hi
, 16)), 1);

136 
tmpW32
 = (
	`WEBRTC_SPL_MUL_16_16
(
num_hi
, 
tmp_hi
Ë+ (WEBRTC_SPL_MUL_16_16“um_hi, 
tmp_low
)

137 >> 15Ë+ (
	`WEBRTC_SPL_MUL_16_16
(
num_low
, 
tmp_hi
) >> 15));

140 
tmpW32
 = 
	`WEBRTC_SPL_LSHIFT_W32
(tmpW32, 3);

142  
tmpW32
;

143 
	}
}

	@dot_product_with_scale.c

11 
	~"sig«l_¥o˚ssög_libøry.h
"

13 
öt32_t
 
	$WebRtcS∂_DŸProdu˘WôhSˇÀ
(c⁄° 
öt16_t
* 
ve˘‹1
,

14 c⁄° 
öt16_t
* 
ve˘‹2
,

15 
Àngth
,

16 
sˇlög
) {

17 
öt32_t
 
sum
 = 0;

18 
i
 = 0;

21 
i
 = 0; i < 
Àngth
 - 3; i += 4) {

22 
sum
 +(
ve˘‹1
[
i
 + 0] * 
ve˘‹2
[ò+ 0]Ë>> 
sˇlög
;

23 
sum
 +(
ve˘‹1
[
i
 + 1] * 
ve˘‹2
[ò+ 1]Ë>> 
sˇlög
;

24 
sum
 +(
ve˘‹1
[
i
 + 2] * 
ve˘‹2
[ò+ 2]Ë>> 
sˇlög
;

25 
sum
 +(
ve˘‹1
[
i
 + 3] * 
ve˘‹2
[ò+ 3]Ë>> 
sˇlög
;

27 ; 
i
 < 
Àngth
; i++) {

28 
sum
 +(
ve˘‹1
[
i
] * 
ve˘‹2
[i]Ë>> 
sˇlög
;

31  
sum
;

32 
	}
}

	@downsample_fast.c

11 
	~"sig«l_¥o˚ssög_libøry.h
"

15 
	$WebRtcS∂_Downßm∂eFa°C
(c⁄° 
öt16_t
* 
d©a_ö
,

16 
d©a_ö_Àngth
,

17 
öt16_t
* 
d©a_out
,

18 
d©a_out_Àngth
,

19 c⁄° 
öt16_t
* 
__ª°ri˘
 
c€fficõ¡s
,

20 
c€fficõ¡s_Àngth
,

21 
Á˘‹
,

22 
dñay
) {

23 
i
 = 0;

24 
j
 = 0;

25 
öt32_t
 
out_s32
 = 0;

26 
ídpos
 = 
dñay
 + 
Á˘‹
 * (
d©a_out_Àngth
 - 1) + 1;

29 i‡(
d©a_out_Àngth
 <0 || 
c€fficõ¡s_Àngth
 <= 0

30 || 
d©a_ö_Àngth
 < 
ídpos
) {

34 
i
 = 
dñay
; i < 
ídpos
; i +
Á˘‹
) {

35 
out_s32
 = 2048;

37 
j
 = 0; j < 
c€fficõ¡s_Àngth
; j++) {

38 
out_s32
 +
c€fficõ¡s
[
j
] * 
d©a_ö
[
i
 - j];

41 
out_s32
 >>= 12;

44 *
d©a_out
++ = 
	`WebRtcS∂_S©W32ToW16
(
out_s32
);

48 
	}
}

	@dsp.c

16 
	~"d•.h
"

18 
	~"sig«l_¥o˚ssög_libøry.h
"

20 
	~"√ãq_îr‹_codes.h
"

27 c⁄° 
öt16_t
 
	gWebRtcNëEQ_kDownßm∂e8kHzTbl
[] = { 1229, 1638, 1229 };

29 #ifde‡
NETEQ_WIDEBAND


31 c⁄° 
öt16_t
 
	gWebRtcNëEQ_kDownßm∂e16kHzTbl
[] =

35 #ifde‡
NETEQ_32KHZ_WIDEBAND


37 c⁄° 
öt16_t
 
	gWebRtcNëEQ_kDownßm∂e32kHzTbl
[] =

41 #ifde‡
NETEQ_48KHZ_WIDEBAND


43 c⁄° 
öt16_t
 
	gWebRtcNëEQ_kDownßm∂e48kHzTbl
[] =

50 c⁄° 
öt16_t
 
	gWebRtcNëEQ_kMixFø˘i⁄FuncTbl
[4] = { -5179, 19931, -16422, 5776 };

54 c⁄° 
öt16_t
 
	gWebRtcNëEQ_k1049div
[7] = { 0, 1049, 524, 349, 262, 209, 174 };

57 c⁄° 
öt16_t
 
	gWebRtcNëEQ_k2097div
[7] = { 0, 2097, 1048, 699, 524, 419, 349 };

60 c⁄° 
öt16_t
 
	gWebRtcNëEQ_k5243div
[7] = { 0, 5243, 2621, 1747, 1310, 1048, 873 };

62 #ifde‡
WEBRTC_NETEQ_40BITACC_TEST


92 
	$WebRtcNëEQ_40BôAccCrossC‹r
(
öt32_t
 *
¸ossC‹r
,

93 
öt16_t
 *
£q1
,

94 
öt16_t
 *
£q2
,

95 
öt16_t
 
dimSeq
,

96 
öt16_t
 
dimCrossC‹r
,

97 
öt16_t
 
rShi·
,

98 
öt16_t
 
°ï_£q2
)

100 
i
, 
j
;

101 
öt16_t
 *
£q1På
, *
£q2På
;

102 
öt64_t
 
acc
;

104 
i
 = 0; i < 
dimCrossC‹r
; i++)

108 
£q1På
 = 
£q1
;

109 
£q2På
 = 
£q2
 + (
°ï_£q2
 * 
i
);

110 
acc
 = 0;

113 
j
 = 0; j < 
dimSeq
; j++)

115 
acc
 +
	`WEBRTC_SPL_MUL_16_16
((*
£q1På
), (*
£q2På
));

116 
£q1På
++;

117 
£q2På
++;

120 (*
¸ossC‹r
Ë(
öt32_t
Ë(
acc
 >> 
rShi·
);

121 
¸ossC‹r
++;

123 
	}
}

140 
öt32_t
 
	$WebRtcNëEQ_40BôAccDŸW16W16
(
öt16_t
 *
ve˘‹1
,

141 
öt16_t
 *
ve˘‹2
,

142 
Àn
,

143 
sˇlög
)

145 
öt32_t
 
sum
;

146 
i
;

147 
öt64_t
 
acc
;

149 
acc
 = 0;

150 
i
 = 0; i < 
Àn
; i++)

152 
acc
 +
	`WEBRTC_SPL_MUL_16_16
(*
ve˘‹1
++, *
ve˘‹2
++);

155 
sum
 = (
öt32_t
Ë(
acc
 >> 
sˇlög
);

157 (
sum
);

158 
	}
}

178 
	$WebRtcNëEQ_DSPInô
(
DSPIn°_t
 *
ö°
, 
uöt16_t
 
fs
)

181 
ªs
 = 0;

182 
öt16_t
 
fs_mu…
;

185 #ifde‡
NETEQ_CNG_CODEC


186 *
ßvedPå1
 = 
ö°
->
CNG_Codec_ö°
;

188 *
ßvedPå2
 = 
ö°
->
pw16_ªadAddªss
;

189 *
ßvedPå3
 = 
ö°
->
pw16_wrôeAddªss
;

190 *
ßvedPå4
 = 
ö°
->
maö_ö°
;

191 #ifde‡
NETEQ_VAD


192 *
ßvedVAD±r
 = 
ö°
->
VADIn°
.
VADSèã
;

193 
VADInôFun˘i⁄
 
ßvedVADöô
 = 
ö°
->
VADIn°
.
öôFun˘i⁄
;

194 
VADSëmodeFun˘i⁄
 
ßvedVAD£tmode
 = 
ö°
->
VADIn°
.
£tmodeFun˘i⁄
;

195 
VADFun˘i⁄
 
ßvedVADfunc
 = 
ö°
->
VADIn°
.VADFunction;

196 
öt16_t
 
ßvedVADE«bÀd
 = 
ö°
->
VADIn°
.
VADE«bÀd
;

197 
ßvedVADMode
 = 
ö°
->
VADIn°
.
VADMode
;

199 
DSPSèts_t
 
ßveSèts
;

200 
öt16_t
 
ßveMsPîCÆl
 = 
ö°
->
mûli£c⁄dsPîCÆl
;

201 
BGNMode
 
ßveBgnMode
 = 
ö°
->
BGNIn°
.
bgnMode
;

202 #ifde‡
NETEQ_STEREO


203 
Ma°îSœveInfo
* 
ßveMSöfo
 = 
ö°
->
msInfo
;

206  
	`WEBRTC_SPL_MEMCPY_W16
(&
ßveSèts
, &(
ö°
->
°©In°
),

207 (
DSPSèts_t
)/(
öt16_t
));

210 i‡((
fs
 != 8000)

211 #ifde‡
NETEQ_WIDEBAND


212 &&(
fs
!=16000)

214 #ifde‡
NETEQ_32KHZ_WIDEBAND


215 &&(
fs
!=32000)

217 #ifde‡
NETEQ_48KHZ_WIDEBAND


218 &&(
fs
!=48000)

223  (
CODEC_DB_UNSUPPORTED_FS
);

227 
fs_mu…
 = 
	`WebRtcS∂_DivW32W16ResW16
(
fs
, 8000);

230 
	`WebRtcS∂_MemSëW16
((
öt16_t
 *Ë
ö°
, 0, (
DSPIn°_t
) / (int16_t));

233 #ifde‡
NETEQ_CNG_CODEC


234 
ö°
->
CNG_Codec_ö°
 = (
CNG_dec_ö°
 *)
ßvedPå1
;

236 
ö°
->
pw16_ªadAddªss
 = (
öt16_t
 *Ë
ßvedPå2
;

237 
ö°
->
pw16_wrôeAddªss
 = (
öt16_t
 *Ë
ßvedPå3
;

238 
ö°
->
maö_ö°
 = 
ßvedPå4
;

239 #ifde‡
NETEQ_VAD


240 
ö°
->
VADIn°
.
VADSèã
 = 
ßvedVAD±r
;

241 
ö°
->
VADIn°
.
öôFun˘i⁄
 = 
ßvedVADöô
;

242 
ö°
->
VADIn°
.
£tmodeFun˘i⁄
 = 
ßvedVAD£tmode
;

243 
ö°
->
VADIn°
.
VADFun˘i⁄
 = 
ßvedVADfunc
;

244 
ö°
->
VADIn°
.
VADE«bÀd
 = 
ßvedVADE«bÀd
;

245 
ö°
->
VADIn°
.
VADMode
 = 
ßvedVADMode
;

249 
ö°
->
fs
 = fs;

250 
ö°
->
mûli£c⁄dsPîCÆl
 = 
ßveMsPîCÆl
;

251 
ö°
->
time°ampsPîCÆl
 = in°->
mûli£c⁄dsPîCÆl
 * 8 * 
fs_mu…
;

252 
ö°
->
Ex∑ndIn°
.
w16_ovîœp
 = 5 * 
fs_mu…
;

253 
ö°
->
ídPosôi⁄
 = 565 * 
fs_mu…
;

254 
ö°
->
curPosôi⁄
 = in°->
ídPosôi⁄
 - in°->
Ex∑ndIn°
.
w16_ovîœp
;

255 
ö°
->
w16_£edInc
 = 1;

256 
ö°
->
uw16_£ed
 = 777;

257 
ö°
->
w16_muãFa˘‹
 = 16384;

258 
ö°
->
w16_‰ameLí
 = 3 * in°->
time°ampsPîCÆl
;

260 
ö°
->
w16_•ìchHi°‹yLí
 = 256 * 
fs_mu…
;

261 
ö°
->
pw16_•ìchHi°‹y
 = &ö°->
•ìchBuf„r
[ö°->
ídPosôi⁄


262 - 
ö°
->
w16_•ìchHi°‹yLí
];

263 
ö°
->
Ex∑ndIn°
.
pw16_ovîœpVec
 = &(ö°->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí


264 - 
ö°
->
Ex∑ndIn°
.
w16_ovîœp
]);

267 
ö°
->
Ex∑ndIn°
.
pw16_expVecs
[0] = &ö°->
•ìchBuf„r
[0];

268 
ö°
->
Ex∑ndIn°
.
pw16_expVecs
[1] = &ö°->
•ìchBuf„r
[126 * 
fs_mu…
];

269 
ö°
->
Ex∑ndIn°
.
pw16_¨Sèã
 = &ö°->
•ìchBuf„r
[2 * 126 * 
fs_mu…
];

270 
ö°
->
Ex∑ndIn°
.
pw16_¨Fûãr
 = &ö°->
•ìchBuf„r
[2 * 126 * 
fs_mu…


271 + 
UNVOICED_LPC_ORDER
];

274 
ö°
->
Ex∑ndIn°
.
w16_ex∑ndMuãFa˘‹
 = 16384;

277 
ö°
->
BGNIn°
.
pw16_fûãr
[0] = 4096;

278 
ö°
->
BGNIn°
.
w16_sˇÀ
 = 20000;

279 
ö°
->
BGNIn°
.
w16_sˇÀShi·
 = 24;

280 
ö°
->
BGNIn°
.
w32_íîgyUpd©e
 = 500000;

281 
ö°
->
BGNIn°
.
w32_íîgyUpd©eLow
 = 0;

282 
ö°
->
BGNIn°
.
w32_íîgy
 = 2500;

283 
ö°
->
BGNIn°
.
w16_öôülized
 = 0;

284 
ö°
->
BGNIn°
.
bgnMode
 = 
ßveBgnMode
;

286  
	`WEBRTC_SPL_MEMCPY_W16
(&(
ö°
->
°©In°
), &
ßveSèts
,

287 (
DSPSèts_t
)/(
öt16_t
));

289 #ifde‡
NETEQ_STEREO


291 
ö°
->
msInfo
 = 
ßveMSöfo
;

294 #ifde‡
NETEQ_CNG_CODEC


295 i‡(
ö°
->
CNG_Codec_ö°
!=
NULL
)

298 
ªs
 |
	`WebRtcCng_InôDec
(
ö°
->
CNG_Codec_ö°
);

302 #ifde‡
NETEQ_VAD


305 
ªs
 |
	`WebRtcNëEQ_InôVAD
(&
ö°
->
VADIn°
, 
fs
);

308  (
ªs
);

309 
	}
}

328 
	$WebRtcNëEQ_AddªssInô
(
DSPIn°_t
 *
ö°
, c⁄° *
d©a2McuAddªss
,

329 c⁄° *
d©a2D•Addªss
, c⁄° *
maöIn°
)

333 
ö°
->
pw16_ªadAddªss
 = (
öt16_t
 *Ë
d©a2D•Addªss
;

334 
ö°
->
pw16_wrôeAddªss
 = (
öt16_t
 *Ë
d©a2McuAddªss
;

337 
ö°
->
maö_ö°
 = (*Ë
maöIn°
;

340 
ö°
->
mûli£c⁄dsPîCÆl
 = 10;

341 
ö°
->
time°ampsPîCÆl
 = 160;

345 
	}
}

361 
	$WebRtcNëEQ_CÀ¨InCÆlSèts
(
DSPIn°_t
 *
ö°
)

364 
ö°
->
°©In°
.
ac˚ÀøãLígth
 = 0;

365 
ö°
->
°©In°
.
ex∑ndLígth
 = 0;

366 
ö°
->
°©In°
.
¥ìm±iveLígth
 = 0;

367 
ö°
->
°©In°
.
addedSam∂es
 = 0;

369 
	}
}

385 
	$WebRtcNëEQ_CÀ¨Po°CÆlSèts
(
DSPIn°_t
 *
ö°
)

389 
ö°
->
°©In°
.
ex∑ndedVoi˚Sam∂es
 = 0;

390 
ö°
->
°©In°
.
ex∑ndedNoi£Sam∂es
 = 0;

392 
	}
}

407 
	$WebRtcNëEQ_CÀ¨A˘ivôySèts
(
DSPIn°_t
 *
ö°
) {

408 
	`mem£t
(&
ö°
->
a˘ivôy_°©s
, 0, (
A˘ivôySèts
));

409 
	}
}

411 #ifde‡
NETEQ_VAD


429 
	$WebRtcNëEQ_InôVAD
(
Po°DecodeVAD_t
 *
VADIn°
, 
uöt16_t
 
fs
)

432 
ªs
 = 0;

435 
VADIn°
->
VADE«bÀd
 = 0;

437 i‡(
VADIn°
->
VADSèã
 !
NULL


438 && 
VADIn°
->
öôFun˘i⁄
 !
NULL


439 && 
VADIn°
->
£tmodeFun˘i⁄
 !
NULL


440 && 
VADIn°
->
VADFun˘i⁄
 !
NULL
)

442 
ªs
 = 
VADIn°
->
	`öôFun˘i⁄
–VADIn°->
VADSèã
 );

443 
ªs
 |
	`WebRtcNëEQ_SëVADModeI¡î«l
–
VADIn°
, VADIn°->
VADMode
 );

445 i‡(
ªs
!=0)

448 
VADIn°
->
VADSèã
 = 
NULL
;

450 i‡(
fs
<=16000)

453 
VADIn°
->
VADE«bÀd
 = 1;

458 
VADIn°
->
SIDöãrvÆCou¡î
 = 0;

461 
VADIn°
->
VADDecisi⁄
 = 1;

463 (
ªs
);

465 
	}
}

484 
	$WebRtcNëEQ_SëVADModeI¡î«l
(
Po°DecodeVAD_t
 *
VADIn°
, 
mode
)

487 
ªs
 = 0;

489 
VADIn°
->
VADMode
 = 
mode
;

491 i‡(
VADIn°
->
VADSèã
 !
NULL
)

494 
ªs
 = 
VADIn°
->
	`£tmodeFun˘i⁄
(VADIn°->
VADSèã
, 
mode
);

497 (
ªs
);

499 
	}
}

518 
	$WebRtcNëEQ_FlushS≥echBuf„r
(
DSPIn°_t
 *
ö°
)

520 
öt16_t
 
fs_mu…
;

523 
fs_mu…
 = 
	`WebRtcS∂_DivW32W16ResW16
(
ö°
->
fs
, 8000);

526 
	`WebRtcS∂_MemSëW16
(
ö°
->
•ìchBuf„r
, 0, 
SPEECH_BUF_SIZE
);

527 
ö°
->
ídPosôi⁄
 = 565 * 
fs_mu…
;

528 
ö°
->
curPosôi⁄
 = in°->
ídPosôi⁄
 - in°->
Ex∑ndIn°
.
w16_ovîœp
;

531 
	}
}

	@dsp.h

18 #i‚de‡
DSP_H


19 
	#DSP_H


	)

21 
	~"ty≥defs.h
"

23 
	~"webπc_˙g.h
"

25 
	~"codec_db_deföes.h
"

26 
	~"√ãq_deföes.h
"

27 
	~"öãrÁ˚/√ãq_°©i°ics.h
"

29 #ifde‡
NETEQ_ATEVENT_DECODE


30 
	~"dtmf_t⁄egí.h
"

40 #i‡
deföed
(
NETEQ_48KHZ_WIDEBAND
)

41 
	#FSMULT
 6

	)

42 #ñi‡
deföed
(
NETEQ_32KHZ_WIDEBAND
)

43 
	#FSMULT
 4

	)

44 #ñi‡
deföed
(
NETEQ_WIDEBAND
)

45 
	#FSMULT
 2

	)

47 
	#FSMULT
 1

	)

52 
	#SPEECH_BUF_SIZE
 (565 * 
FSMULT
)

	)

55 
	#BGN_LPC_ORDER
 (4 + 
FSMULT
Ë

	)

56 
	#UNVOICED_LPC_ORDER
 6

	)

57 
	#RANDVEC_NO_OF_SAMPLES
 256

	)

61 
	#DEFAULT_TIME_ADJUST
 8

	)

64 
	#POST_DECODE_VAD_AUTO_ENABLE
 3000

	)

67 
	#NETEQ_OVERLAP_WINMUTE_8KHZ_START
 27307

	)

68 
	#NETEQ_OVERLAP_WINMUTE_8KHZ_INC
 -5461

	)

69 
	#NETEQ_OVERLAP_WINUNMUTE_8KHZ_START
 5461

	)

70 
	#NETEQ_OVERLAP_WINUNMUTE_8KHZ_INC
 5461

	)

72 
	#NETEQ_OVERLAP_WINMUTE_16KHZ_START
 29789

	)

73 
	#NETEQ_OVERLAP_WINMUTE_16KHZ_INC
 -2979

	)

74 
	#NETEQ_OVERLAP_WINUNMUTE_16KHZ_START
 2979

	)

75 
	#NETEQ_OVERLAP_WINUNMUTE_16KHZ_INC
 2979

	)

77 
	#NETEQ_OVERLAP_WINMUTE_32KHZ_START
 31208

	)

78 
	#NETEQ_OVERLAP_WINMUTE_32KHZ_INC
 -1560

	)

79 
	#NETEQ_OVERLAP_WINUNMUTE_32KHZ_START
 1560

	)

80 
	#NETEQ_OVERLAP_WINUNMUTE_32KHZ_INC
 1560

	)

82 
	#NETEQ_OVERLAP_WINMUTE_48KHZ_START
 31711

	)

83 
	#NETEQ_OVERLAP_WINMUTE_48KHZ_INC
 -1057

	)

84 
	#NETEQ_OVERLAP_WINUNMUTE_48KHZ_START
 1057

	)

85 
	#NETEQ_OVERLAP_WINUNMUTE_48KHZ_INC
 1057

	)

88 
	#FADE_BGN_TIME
 200

	)

95 c⁄° 
öt16_t
 
WebRtcNëEQ_kDownßm∂e8kHzTbl
[];

96 c⁄° 
öt16_t
 
WebRtcNëEQ_kDownßm∂e16kHzTbl
[];

97 c⁄° 
öt16_t
 
WebRtcNëEQ_kDownßm∂e32kHzTbl
[];

98 c⁄° 
öt16_t
 
WebRtcNëEQ_kDownßm∂e48kHzTbl
[];

99 c⁄° 
öt16_t
 
WebRtcNëEQ_kR™dnTbl
[];

100 c⁄° 
öt16_t
 
WebRtcNëEQ_kMixFø˘i⁄FuncTbl
[];

101 c⁄° 
öt16_t
 
WebRtcNëEQ_k1049div
[];

102 c⁄° 
öt16_t
 
WebRtcNëEQ_k2097div
[];

103 c⁄° 
öt16_t
 
WebRtcNëEQ_k5243div
[];

111 
	eBGNMode


113 
	mBGN_ON
,

114 
	mBGN_FADE
,

115 
	mBGN_OFF


118 #ifde‡
NETEQ_STEREO


119 
	eMa°îSœveMode


121 
	mNETEQ_MONO
,

122 
	mNETEQ_MASTER
,

123 
	mNETEQ_SLAVE


126 
	eMa°îSœveExåaInfo


128 
	mNO_INFO
,

129 
	mACC_FAIL
,

130 
	mPE_EXP_FAIL
,

131 
	mDTMF_OVERDUB
,

132 
	mDTMF_ONLY


142 
	sBGNIn°_t_


145 
öt32_t
 
	mw32_íîgy
;

146 
öt32_t
 
	mw32_íîgyMax
;

147 
öt32_t
 
	mw32_íîgyUpd©e
;

148 
öt32_t
 
	mw32_íîgyUpd©eLow
;

149 
öt16_t
 
	mpw16_fûãrSèã
[
BGN_LPC_ORDER
];

150 
öt16_t
 
	mpw16_fûãr
[
BGN_LPC_ORDER
 + 1];

151 
öt16_t
 
	mw16_muãÁ˘‹
;

152 
öt16_t
 
	mw16_sˇÀ
;

153 
öt16_t
 
	mw16_sˇÀShi·
;

154 
öt16_t
 
	mw16_öôülized
;

155 
BGNMode
 
	mbgnMode
;

157 } 
	tBGNIn°_t
;

160 
	sEx∑ndIn°_t_


163 
öt16_t
 
	mw16_ovîœp
;

164 
öt16_t
 
	mw16_c⁄£cExp
;

165 
öt16_t
 *
	mpw16_¨Fûãr
;

166 
öt16_t
 *
	mpw16_¨Sèã
;

167 
öt16_t
 
	mw16_¨Gaö
;

168 
öt16_t
 
	mw16_¨GaöSˇÀ
;

169 
öt16_t
 
	mw16_vFø˘i⁄
;

170 
öt16_t
 
	mw16_cuºítVFø˘i⁄
;

171 
öt16_t
 *
	mpw16_expVecs
[2];

172 
öt16_t
 
	mw16_œgs
[3];

173 
öt16_t
 
	mw16_maxLag
;

174 
öt16_t
 *
	mpw16_ovîœpVec
;

175 
öt16_t
 
	mw16_œgsDúe˘i⁄
;

176 
öt16_t
 
	mw16_œgsPosôi⁄
;

177 
öt16_t
 
	mw16_ex∑ndMuãFa˘‹
;

178 
öt16_t
 
	mw16_°›Mutög
;

179 
öt16_t
 
	mw16_⁄£t
;

180 
öt16_t
 
	mw16_muãSl›e
;

182 } 
	tEx∑ndIn°_t
;

184 #ifde‡
NETEQ_VAD


191 (*
	tVADInôFun˘i⁄
)(*
	tVAD_ö°
);

192 (*
	tVADSëmodeFun˘i⁄
)(*
	tVAD_ö°
, 
	tmode
);

193 (*
	tVADFun˘i⁄
)(*
	tVAD_ö°
, 
	tfs
, 
	töt16_t
 *
	t‰ame
,

194 
	t‰ameLí
);

197 
	sPo°DecodeVAD_t_


200 *
VADSèã
;

202 
öt16_t
 
VADE«bÀd
;

203 
VADMode
;

204 
VADDecisi⁄
;

205 
öt16_t
 
SIDöãrvÆCou¡î
;

209 
VADInôFun˘i⁄
 
öôFun˘i⁄
;

210 
VADSëmodeFun˘i⁄
 
£tmodeFun˘i⁄
;

211 
VADFun˘i⁄
 VADFunction;

213 } 
	tPo°DecodeVAD_t
;

217 #ifde‡
NETEQ_STEREO


218 
	#MAX_MS_DECODES
 10

	)

223 
Ma°îSœveMode
 
msMode
;

225 
Ma°îSœveExåaInfo
 
exåaInfo
;

227 
uöt16_t
 
ö°ru˘i⁄
;

228 
öt16_t
 
di°Lag
;

229 
öt16_t
 
c‹rLag
;

230 
öt16_t
 
be°Index
;

232 
uöt32_t
 
ídTime°amp
;

233 
uöt16_t
 
ßm∂esLe·WôhOvîœp
;

235 } 
	tMa°îSœveInfo
;

240 
	sDSPIn°_t_


244 
öt16_t
 *
pw16_ªadAddªss
;

245 
öt16_t
 *
pw16_wrôeAddªss
;

246 *
maö_ö°
;

249 
öt16_t
 
mûli£c⁄dsPîCÆl
;

250 
öt16_t
 
time°ampsPîCÆl
;

266 
öt16_t
 
•ìchBuf„r
[
SPEECH_BUF_SIZE
];

267 
curPosôi⁄
;

268 
ídPosôi⁄
;

269 
uöt32_t
 
ídTime°amp
;

270 
uöt32_t
 
videoSyncTime°amp
;

274 
uöt16_t
 
fs
;

275 
öt16_t
 
w16_‰ameLí
;

276 
öt16_t
 
w16_mode
;

277 
öt16_t
 
w16_muãFa˘‹
;

278 
öt16_t
 *
pw16_•ìchHi°‹y
;

279 
öt16_t
 
w16_•ìchHi°‹yLí
;

282 
öt16_t
 
w16_£edInc
;

283 
uöt32_t
 
uw16_£ed
;

286 
öt16_t
 
w16_c⁄˚ÆedTS
;

293 
CodecFuncIn°_t
 
codec_±r_ö°
;

295 #ifde‡
NETEQ_CNG_CODEC


297 
CNG_dec_ö°
 *
CNG_Codec_ö°
;

300 #ifde‡
NETEQ_ATEVENT_DECODE


302 
dtmf_t⁄e_ö°_t
 
DTMFIn°
;

305 #ifde‡
NETEQ_VAD


307 
Po°DecodeVAD_t
 
VADIn°
;

311 
Ex∑ndIn°_t
 
Ex∑ndIn°
;

314 
BGNIn°_t
 
BGNIn°
;

317 
DSPSèts_t
 
°©In°
;

320 
A˘ivôySèts
 
a˘ivôy_°©s
;

322 #ifde‡
NETEQ_STEREO


324 
Ma°îSœveInfo
 *
msInfo
;

327 } 
	tDSPIn°_t
;

350 
	`WebRtcNëEQ_DSPInô
(
DSPIn°_t
 *
ö°
, 
uöt16_t
 
fs
);

369 
	`WebRtcNëEQ_AddªssInô
(
DSPIn°_t
 *
ö°
, c⁄° *
d©a2McuAddªss
,

370 c⁄° *
d©a2D•Addªss
, c⁄° *
maöIn°
);

386 
	`WebRtcNëEQ_CÀ¨InCÆlSèts
(
DSPIn°_t
 *
ö°
);

402 
	`WebRtcNëEQ_CÀ¨Po°CÆlSèts
(
DSPIn°_t
 *
ö°
);

417 
	`WebRtcNëEQ_CÀ¨A˘ivôySèts
(
DSPIn°_t
 *
ö°
);

442 
	`WebRtcNëEQ_RecOutI¡î«l
(
DSPIn°_t
 *
ö°
, 
öt16_t
 *
pw16_outD©a
,

443 
öt16_t
 *
pw16_Àn
, i¡16_à
BGN⁄ly
, 
av_sync
);

467 
	`WebRtcNëEQ_N‹mÆ
(
DSPIn°_t
 *
ö°
,

468 #ifde‡
SCRATCH


469 
öt16_t
 *
pw16_s¸©chPå
,

471 
öt16_t
 *
pw16_decoded
, i¡16_à
Àn
,

472 
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_Àn
);

497 
	`WebRtcNëEQ_Ex∑nd
(
DSPIn°_t
 *
ö°
,

498 #ifde‡
SCRATCH


499 
öt16_t
 *
pw16_s¸©chPå
,

501 
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_Àn
,

502 
öt16_t
 
BGN⁄ly
);

526 
	`WebRtcNëEQ_Gíî©eBGN
(
DSPIn°_t
 *
ö°
,

527 #ifde‡
SCRATCH


528 
öt16_t
 *
pw16_s¸©chPå
,

530 
öt16_t
 *
pw16_outD©a
, i¡16_à
Àn
);

563 
	`WebRtcNëEQ_PªEm±iveEx∑nd
(
DSPIn°_t
 *
ö°
,

564 #ifde‡
SCRATCH


565 
öt16_t
 *
pw16_s¸©chPå
,

567 c⁄° 
öt16_t
 *
pw16_decoded
, 
Àn
, 
ﬁdD©aLí
,

568 
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_Àn
,

569 
öt16_t
 
BGN⁄ly
);

598 
	`WebRtcNëEQ_Ac˚Àøã
(
DSPIn°_t
 *
ö°
,

599 #ifde‡
SCRATCH


600 
öt16_t
 *
pw16_s¸©chPå
,

602 c⁄° 
öt16_t
 *
pw16_decoded
, 
Àn
,

603 
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_Àn
,

604 
öt16_t
 
BGN⁄ly
);

631 
	`WebRtcNëEQ_Mîge
(
DSPIn°_t
 *
ö°
,

632 #ifde‡
SCRATCH


633 
öt16_t
 *
pw16_s¸©chPå
,

635 
öt16_t
 *
pw16_decoded
, 
Àn
, i¡16_à*
pw16_outD©a
,

636 
öt16_t
 *
pw16_Àn
);

654 #ifde‡
NETEQ_CNG_CODEC


657 
	`WebRtcNëEQ_Cng
(
DSPIn°_t
 *
ö°
, 
öt16_t
 *
pw16_outD©a
, 
Àn
);

676 
	`WebRtcNëEQ_BGNUpd©e
(

677 #ifde‡
SCRATCH


678 
DSPIn°_t
 *
ö°
, 
öt16_t
 *
pw16_s¸©chPå


680 
DSPIn°_t
 *
ö°


684 #ifde‡
NETEQ_VAD


703 
	`WebRtcNëEQ_InôVAD
(
Po°DecodeVAD_t
 *
VADIn°
, 
uöt16_t
 
fs
);

722 
	`WebRtcNëEQ_SëVADModeI¡î«l
(
Po°DecodeVAD_t
 *
VADIn°
, 
mode
);

741 
	`WebRtcNëEQ_FlushS≥echBuf„r
(
DSPIn°_t
 *
ö°
);

743 #i‚de‡
WEBRTC_NETEQ_40BITACC_TEST


745 
	~"sig«l_¥o˚ssög_libøry.h
"

747 
	#WebRtcNëEQ_CrossC‹r
 
WebRtcS∂_CrossC‹ªœti⁄


	)

748 
	#WebRtcNëEQ_DŸW16W16
 
WebRtcS∂_DŸProdu˘WôhSˇÀ


	)

756 
	#WebRtcNëEQ_CrossC‹r
 
WebRtcNëEQ_40BôAccCrossC‹r


	)

757 
	#WebRtcNëEQ_DŸW16W16
 
WebRtcNëEQ_40BôAccDŸW16W16


	)

782 
	`WebRtcNëEQ_40BôAccCrossC‹r
(
öt32_t
 *
¸ossC‹r
, 
öt16_t
 *
£q1
,

783 
öt16_t
 *
£q2
, i¡16_à
dimSeq
,

784 
öt16_t
 
dimCrossC‹r
, i¡16_à
rShi·
,

785 
öt16_t
 
°ï_£q2
);

802 
öt32_t
 
	`WebRtcNëEQ_40BôAccDŸW16W16
(
öt16_t
 *
ve˘‹1
, i¡16_à*
ve˘‹2
,

803 
Àn
, 
sˇlög
);

	@dsp_helpfunctions.c

15 
	~"d•_hñpfun˘i⁄s.h
"

18 
öt16_t
 
	$WebRtcNëEQ_CÆcFsMu…
(
uöt16_t
 
fsHz
)

20 
fsHz
)

43 
	}
}

46 
	$WebRtcNëEQ_DownSam∂eTo4kHz
(c⁄° 
öt16_t
 *
ö
, 
öLí
, 
uöt16_t
 
öFsHz
,

47 
öt16_t
 *
out
, 
outLí
, 
com≥nßãDñay
)

49 
öt16_t
 *
B
;

50 
öt16_t
 
BÀn
;

51 
öt16_t
 
fûãrDñay
;

52 
öt16_t
 
Á˘‹
;

53 
ok
;

59 
öFsHz
)

63 
BÀn
 = 3;

64 
Á˘‹
 = 2;

65 
B
 = (
öt16_t
*Ë
WebRtcNëEQ_kDownßm∂e8kHzTbl
;

66 
fûãrDñay
 = 1 + 1;

69 #ifde‡
NETEQ_WIDEBAND


72 
BÀn
 = 5;

73 
Á˘‹
 = 4;

74 
B
 = (
öt16_t
*Ë
WebRtcNëEQ_kDownßm∂e16kHzTbl
;

75 
fûãrDñay
 = 2 + 1;

79 #ifde‡
NETEQ_32KHZ_WIDEBAND


82 
BÀn
 = 7;

83 
Á˘‹
 = 8;

84 
B
 = (
öt16_t
*Ë
WebRtcNëEQ_kDownßm∂e32kHzTbl
;

85 
fûãrDñay
 = 3 + 1;

89 #ifde‡
NETEQ_48KHZ_WIDEBAND


92 
BÀn
 = 7;

93 
Á˘‹
 = 12;

94 
B
 = (
öt16_t
*Ë
WebRtcNëEQ_kDownßm∂e48kHzTbl
;

95 
fûãrDñay
 = 3 + 1;

106 i‡(!
com≥nßãDñay
)

109 
fûãrDñay
 = 0;

112 
ok
 = 
	`WebRtcS∂_Downßm∂eFa°
((
öt16_t
*Ë&
ö
[
BÀn
 - 1],

113 (
öt16_t
Ë(
öLí
 - (
BÀn
 - 1)),

114 
out
, (
öt16_t
Ë
outLí
,

115 
B
, 
BÀn
, 
Á˘‹
, 
fûãrDñay
);

117  
ok
;

119 
	}
}

	@dsp_helpfunctions.h

15 #i‚de‡
DSP_HELPFUNCTIONS_H


16 
	#DSP_HELPFUNCTIONS_H


	)

18 
	~"ty≥defs.h
"

20 
	~"d•.h
"

39 
öt16_t
 
WebRtcNëEQ_C‹ªœt‹
(
DSPIn°_t
 *
ö°
,

40 #ifde‡
SCRATCH


41 
öt16_t
 *
pw16_s¸©chPå
,

43 
öt16_t
 *
pw16_d©a
, i¡16_à
w16_d©aLí
,

44 
öt16_t
 *
pw16_c‹rOut
,

45 
öt16_t
 *
pw16_c‹rSˇÀ
);

65 
öt16_t
 
WebRtcNëEQ_PókDëe˘i⁄
(öt16_à*
pw16_d©a
, i¡16_à
w16_d©aLí
,

66 
öt16_t
 
w16_nmbPóks
, i¡16_à
fs_mu…
,

67 
öt16_t
 *
pw16_c‹rIndex
,

68 
öt16_t
 *
pw16_wö√rs
);

86 
öt16_t
 
WebRtcNëEQ_PrblFô
(öt16_à*
pw16_3±s
, i¡16_à*
pw16_Ind
,

87 
öt16_t
 *
pw16_outVÆ
, i¡16_à
fs_mu…
);

107 
öt16_t
 
WebRtcNëEQ_MöDi°‹ti⁄
(c⁄° i¡16_à*
pw16_d©a
,

108 
öt16_t
 
w16_möLag
, i¡16_à
w16_maxLag
,

109 
öt16_t
 
Àn
, 
öt32_t
 *
pw16_di°
);

125 
WebRtcNëEQ_R™domVec
(
uöt32_t
 *
w32_£ed
, 
öt16_t
 *
pw16_øndVec
,

126 
öt16_t
 
w16_Àn
, i¡16_à
w16_öcvÆ
);

144 
WebRtcNëEQ_MixVoi˚Unvoi˚
(
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_voi˚dVec
,

145 
öt16_t
 *
pw16_unvoi˚dVec
,

146 
öt16_t
 *
w16_cuºít_v‰a˘i⁄
,

147 
öt16_t
 
w16_v‰a˘i⁄_ch™ge
, i¡16_à
N
);

164 
WebRtcNëEQ_UnmuãSig«l
(
öt16_t
 *
pw16_öVec
, i¡16_à*
°¨tMuãFa˘
,

165 
öt16_t
 *
pw16_outVec
, i¡16_à
unmuãFa˘
,

166 
öt16_t
 
N
);

179 
WebRtcNëEQ_MuãSig«l
(
öt16_t
 *
pw16_öout
, i¡16_à
muãSl›e
,

180 
öt16_t
 
N
);

193 
öt16_t
 
WebRtcNëEQ_CÆcFsMu…
(
uöt16_t
 
fsHz
);

216 
WebRtcNëEQ_DownSam∂eTo4kHz
(c⁄° 
öt16_t
 *
ö
, 
öLí
, 
uöt16_t
 
öFsHz
,

217 
öt16_t
 *
out
, 
outLí
, 
com≥nßãDñay
);

	@dtmf_buffer.c

15 
	~"dtmf_buf„r.h
"

17 
	~"ty≥defs.h
"

18 
	~"sig«l_¥o˚ssög_libøry.h
"

20 
	~"√ãq_îr‹_codes.h
"

23 #ifde‡
NETEQ_ATEVENT_DECODE


25 
öt16_t
 
	$WebRtcNëEQ_DtmfRemoveEvít
(
dtmf_ö°_t
 *
DTMFdec_ö°
)

28 
i
;

29 
i
 = 0; i < 3; i++)

31 
DTMFdec_ö°
->
EvítQueue
[
i
] = DTMFdec_inst->EventQueue[i + 1];

32 
DTMFdec_ö°
->
EvítQueueVﬁume
[
i
] = DTMFdec_inst->EventQueueVolume[i + 1];

33 
DTMFdec_ö°
->
EvítQueueEnded
[
i
] = DTMFdec_inst->EventQueueEnded[i + 1];

34 
DTMFdec_ö°
->
EvítQueueSèπTime
[
i
] = DTMFdec_inst->EventQueueStartTime[i + 1];

35 
DTMFdec_ö°
->
EvítQueueEndTime
[
i
] = DTMFdec_inst->EventQueueEndTime[i + 1];

37 
DTMFdec_ö°
->
EvítBuf„rSize
--;

38 
DTMFdec_ö°
->
EvítQueue
[3] = -1;

39 
DTMFdec_ö°
->
EvítQueueVﬁume
[3] = 0;

40 
DTMFdec_ö°
->
EvítQueueEnded
[3] = 0;

41 
DTMFdec_ö°
->
EvítQueueSèπTime
[3] = 0;

42 
DTMFdec_ö°
->
EvítQueueEndTime
[3] = 0;

45 
	}
}

47 
öt16_t
 
	$WebRtcNëEQ_DtmfDecodîInô
(
dtmf_ö°_t
 *
DTMFdec_ö°
, 
uöt16_t
 
fs
,

48 
öt16_t
 
MaxPLCtime
)

50 
i
;

51 i‡(((
fs
 !8000Ë&& (f†!16000Ë&& (f†!32000Ë&& (f†!48000)Ë|| (
MaxPLCtime
 < 0))

53  
DTMF_DEC_PARAMETER_ERROR
;

55 i‡(
fs
 == 8000)

56 
DTMFdec_ö°
->
‰amñí
 = 80;

57 i‡(
fs
 == 16000)

58 
DTMFdec_ö°
->
‰amñí
 = 160;

59 i‡(
fs
 == 32000)

60 
DTMFdec_ö°
->
‰amñí
 = 320;

63 
DTMFdec_ö°
->
‰amñí
 = 480;

65 
DTMFdec_ö°
->
MaxPLCtime
 = MaxPLCtime;

66 
DTMFdec_ö°
->
CuºítPLCtime
 = 0;

67 
DTMFdec_ö°
->
EvítBuf„rSize
 = 0;

68 
i
 = 0; i < 4; i++)

70 
DTMFdec_ö°
->
EvítQueue
[
i
] = -1;

71 
DTMFdec_ö°
->
EvítQueueVﬁume
[
i
] = 0;

72 
DTMFdec_ö°
->
EvítQueueEnded
[
i
] = 0;

73 
DTMFdec_ö°
->
EvítQueueSèπTime
[
i
] = 0;

74 
DTMFdec_ö°
->
EvítQueueEndTime
[
i
] = 0;

77 
	}
}

79 
öt16_t
 
	$WebRtcNëEQ_DtmfIn£πEvít
(
dtmf_ö°_t
 *
DTMFdec_ö°
,

80 c⁄° 
öt16_t
 *
ícoded
, i¡16_à
Àn
,

81 
uöt32_t
 
timeSèmp
)

84 
i
;

85 
öt16_t
 
vÆue
;

86 c⁄° 
öt16_t
 *
EvítSèπ
;

87 
öt16_t
 
ídEvít
;

88 
öt16_t
 
Vﬁume
;

89 
öt16_t
 
Duøti⁄
;

90 
öt16_t
 
posôi⁄
 = -1;

93 i‡(
Àn
 == 4)

95 
EvítSèπ
 = 
ícoded
;

96 #ifde‡
WEBRTC_BIG_ENDIAN


97 
vÆue
=((*
EvítSèπ
)>>8);

98 
ídEvít
=((*
EvítSèπ
)&0x80)>>7;

99 
Vﬁume
=((*
EvítSèπ
)&0x3F);

100 
Duøti⁄
=
EvítSèπ
[1];

102 
vÆue
 = ((*
EvítSèπ
) & 0xFF);

103 
ídEvít
 = ((*
EvítSèπ
) & 0x8000) >> 15;

104 
Vﬁume
 = ((*
EvítSèπ
) & 0x3F00) >> 8;

105 
Duøti⁄
 = (((((
uöt16_t
Ë
EvítSèπ
[1]) >> 8) & 0xFF)

106 | (((
uöt16_t
Ë(
EvítSèπ
[1] & 0xFF)) << 8));

109 i‡((
vÆue
 < 0) || (value > 15))

115 i‡(
Vﬁume
 > 36)

121 
i
 = 0; i < 
DTMFdec_ö°
->
EvítBuf„rSize
; i++)

125 i‡((
DTMFdec_ö°
->
EvítQueue
[
i
] =
vÆue
Ë&& (!DTMFdec_ö°->
EvítQueueEnded
[i]

126 || 
ídEvít
)Ë
posôi⁄
 = 
i
;

128 i‡(
posôi⁄
 > -1)

130 
DTMFdec_ö°
->
EvítQueueVﬁume
[
posôi⁄
] = 
Vﬁume
;

131 i‡((
timeSèmp
 + 
Duøti⁄
Ë> 
DTMFdec_ö°
->
EvítQueueEndTime
[
posôi⁄
]) DTMFdec_inst->EventQueueEndTime[position]

132 
DTMFdec_ö°
->
EvítQueueSèπTime
[
posôi⁄
] + 
Duøti⁄
;

133 i‡(
ídEvít
Ë
DTMFdec_ö°
->
EvítQueueEnded
[
posôi⁄
] = 1;

137 i‡(
DTMFdec_ö°
->
EvítBuf„rSize
 =
MAX_DTMF_QUEUE_SIZE
)

140 
DTMFdec_ö°
->
EvítBuf„rSize
--;

143 
DTMFdec_ö°
->
EvítQueue
[DTMFdec_ö°->
EvítBuf„rSize
] = 
vÆue
;

144 
DTMFdec_ö°
->
EvítQueueVﬁume
[DTMFdec_ö°->
EvítBuf„rSize
] = 
Vﬁume
;

145 
DTMFdec_ö°
->
EvítQueueEnded
[DTMFdec_ö°->
EvítBuf„rSize
] = 
ídEvít
;

146 
DTMFdec_ö°
->
EvítQueueSèπTime
[DTMFdec_ö°->
EvítBuf„rSize
] = 
timeSèmp
;

147 
DTMFdec_ö°
->
EvítQueueEndTime
[DTMFdec_ö°->
EvítBuf„rSize
] = 
timeSèmp


148 + 
Duøti⁄
;

149 
DTMFdec_ö°
->
EvítBuf„rSize
++;

153  
DTMF_INSERT_ERROR
;

154 
	}
}

156 
öt16_t
 
	$WebRtcNëEQ_DtmfDecode
(
dtmf_ö°_t
 *
DTMFdec_ö°
, 
öt16_t
 *
evít
,

157 
öt16_t
 *
vﬁume
, 
uöt32_t
 
cuºTimeSèmp
)

160 i‡(
DTMFdec_ö°
->
EvítBuf„rSize
 < 1)  0;

163 i‡(
cuºTimeSèmp
 < 
DTMFdec_ö°
->
EvítQueueSèπTime
[0])

170 *
evít
 = 
DTMFdec_ö°
->
EvítQueue
[0];

171 *
vﬁume
 = 
DTMFdec_ö°
->
EvítQueueVﬁume
[0];

173 i‡(
DTMFdec_ö°
->
EvítQueueEndTime
[0] >(
cuºTimeSèmp
 + DTMFdec_ö°->
‰amñí
))

178 
DTMFdec_ö°
->
CuºítPLCtime
 = 0;

179 i‡((
DTMFdec_ö°
->
EvítQueueEndTime
[0] =(
cuºTimeSèmp
 + DTMFdec_ö°->
‰amñí
))

180 && (
DTMFdec_ö°
->
EvítQueueEnded
[0]))

183 
	`WebRtcNëEQ_DtmfRemoveEvít
(
DTMFdec_ö°
);

185  
DTMFdec_ö°
->
‰amñí
;

190 i‡((
DTMFdec_ö°
->
EvítQueueEnded
[0]Ë|| (DTMFdec_ö°->
EvítQueue
[1] > -1))

198 
	`WebRtcNëEQ_DtmfRemoveEvít
(
DTMFdec_ö°
);

199 
DTMFdec_ö°
->
CuºítPLCtime
 = 0;

201  
DTMFdec_ö°
->
‰amñí
;

207 
DTMFdec_ö°
->
CuºítPLCtime
 = (
öt16_t
Ë(
cuºTimeSèmp


208 - 
DTMFdec_ö°
->
EvítQueueEndTime
[0]);

210 i‡((
DTMFdec_ö°
->
CuºítPLCtime
 > DTMFdec_ö°->
MaxPLCtime
)

211 || (
DTMFdec_ö°
->
CuºítPLCtime
 < -DTMFdec_ö°->
MaxPLCtime
))

214 
	`WebRtcNëEQ_DtmfRemoveEvít
(
DTMFdec_ö°
);

215 
DTMFdec_ö°
->
CuºítPLCtime
 = 0;

219 i‡((
DTMFdec_ö°
->
EvítQueue
[1] > -1Ë&& (DTMFdec_ö°->
EvítQueueSèπTime
[1]

220 >(
cuºTimeSèmp
 + 
DTMFdec_ö°
->
‰amñí
)))

223 
	`WebRtcNëEQ_DtmfRemoveEvít
(
DTMFdec_ö°
);

224 
DTMFdec_ö°
->
CuºítPLCtime
 = 0;

227  
DTMFdec_ö°
->
‰amñí
;

230 
	}
}

	@dtmf_buffer.h

15 #i‚de‡
DTMF_BUFFER_H


16 
	#DTMF_BUFFER_H


	)

18 
	~"ty≥defs.h
"

20 
	~"√ãq_deföes.h
"

23 #ifde‡
NETEQ_ATEVENT_DECODE


25 
	#MAX_DTMF_QUEUE_SIZE
 4

	)

27 
	sdtmf_ö°_t_


29 
öt16_t
 
	mMaxPLCtime
;

30 
öt16_t
 
	mCuºítPLCtime
;

31 
öt16_t
 
	mEvítQueue
[
MAX_DTMF_QUEUE_SIZE
];

32 
öt16_t
 
	mEvítQueueVﬁume
[
MAX_DTMF_QUEUE_SIZE
];

33 
öt16_t
 
	mEvítQueueEnded
[
MAX_DTMF_QUEUE_SIZE
];

34 
uöt32_t
 
	mEvítQueueSèπTime
[
MAX_DTMF_QUEUE_SIZE
];

35 
uöt32_t
 
	mEvítQueueEndTime
[
MAX_DTMF_QUEUE_SIZE
];

36 
öt16_t
 
	mEvítBuf„rSize
;

37 
öt16_t
 
	m‰amñí
;

38 } 
	tdtmf_ö°_t
;

54 
öt16_t
 
WebRtcNëEQ_DtmfDecodîInô
(
dtmf_ö°_t
 *
DTMFdec_ö°
, 
uöt16_t
 
fs
,

55 
öt16_t
 
MaxPLCtime
);

72 
öt16_t
 
WebRtcNëEQ_DtmfIn£πEvít
(
dtmf_ö°_t
 *
DTMFdec_ö°
,

73 c⁄° 
öt16_t
 *
ícoded
, i¡16_à
Àn
,

74 
uöt32_t
 
timeSèmp
);

95 
öt16_t
 
WebRtcNëEQ_DtmfDecode
(
dtmf_ö°_t
 *
DTMFdec_ö°
, i¡16_à*
evít
,

96 
öt16_t
 *
vﬁume
, 
uöt32_t
 
cuºTimeSèmp
);

	@dtmf_tonegen.c

37 
	~"dtmf_t⁄egí.h
"

39 
	~"sig«l_¥o˚ssög_libøry.h
"

41 
	~"√ãq_îr‹_codes.h
"

43 #ifde‡
NETEQ_ATEVENT_DECODE


68 c⁄° 
öt16_t
 
	gWebRtcNëEQ_dtfm_aTbl8Khz
[8] =

74 #ifde‡
NETEQ_WIDEBAND


75 c⁄° 
öt16_t
 
	gWebRtcNëEQ_dtfm_aTbl16Khz
[8]=

82 #ifde‡
NETEQ_32KHZ_WIDEBAND


83 c⁄° 
öt16_t
 
	gWebRtcNëEQ_dtfm_aTbl32Khz
[8]=

90 #ifde‡
NETEQ_48KHZ_WIDEBAND


91 c⁄° 
öt16_t
 
	gWebRtcNëEQ_dtfm_aTbl48Khz
[8]=

103 c⁄° 
öt16_t
 
	gWebRtcNëEQ_dtfm_yInôTab8Khz
[8] =

109 #ifde‡
NETEQ_WIDEBAND


110 c⁄° 
öt16_t
 
	gWebRtcNëEQ_dtfm_yInôTab16Khz
[8]=

117 #ifde‡
NETEQ_32KHZ_WIDEBAND


118 c⁄° 
öt16_t
 
	gWebRtcNëEQ_dtfm_yInôTab32Khz
[8]=

125 #ifde‡
NETEQ_48KHZ_WIDEBAND


126 c⁄° 
öt16_t
 
	gWebRtcNëEQ_dtfm_yInôTab48Khz
[8]=

138 c⁄° 
öt16_t
 
	gWebRtcNëEQ_dtfm_dBm0
[37] = { 16141, 14386, 12821, 11427, 10184, 9077, 8090,

166 
öt16_t
 
	$WebRtcNëEQ_DTMFGíî©e
(
dtmf_t⁄e_ö°_t
 *
DTMFdecIn°
, 
öt16_t
 
vÆue
,

167 
öt16_t
 
vﬁume
, i¡16_à*
sig«l
,

168 
uöt16_t
 
ßmpFªq
, 
öt16_t
 
extFømeLí
)

170 c⁄° 
öt16_t
 *
aTbl
;

171 c⁄° 
öt16_t
 *
yInôTabÀ
;

172 
öt16_t
 
a1
 = 0;

173 
öt16_t
 
a2
 = 0;

174 
i
;

175 
‰ameLí
;

176 
lowIndex
 = 0;

177 
highIndex
 = 4;

178 
öt32_t
 
ãmpVÆ
;

179 
öt16_t
 
ãmpVÆLow
;

180 
öt16_t
 
ãmpVÆHigh
;

183 i‡((
vﬁume
 < 0) || (volume > 36))

185  
DTMF_DEC_PARAMETER_ERROR
;

189 i‡(
extFømeLí
 < -1)

191  
DTMF_DEC_PARAMETER_ERROR
;

195 i‡(
ßmpFªq
 == 8000)

197 
aTbl
 = 
WebRtcNëEQ_dtfm_aTbl8Khz
;

198 
yInôTabÀ
 = 
WebRtcNëEQ_dtfm_yInôTab8Khz
;

199 
‰ameLí
 = 80;

200 #ifde‡
NETEQ_WIDEBAND


202 i‡(
ßmpFªq
 == 16000)

204 
aTbl
 = 
WebRtcNëEQ_dtfm_aTbl16Khz
;

205 
yInôTabÀ
 = 
WebRtcNëEQ_dtfm_yInôTab16Khz
;

206 
‰ameLí
 = 160;

208 #ifde‡
NETEQ_32KHZ_WIDEBAND


210 i‡(
ßmpFªq
 == 32000)

212 
aTbl
 = 
WebRtcNëEQ_dtfm_aTbl32Khz
;

213 
yInôTabÀ
 = 
WebRtcNëEQ_dtfm_yInôTab32Khz
;

214 
‰ameLí
 = 320;

216 #ifde‡
NETEQ_48KHZ_WIDEBAND


218 i‡(
ßmpFªq
 == 48000)

220 
aTbl
 = 
WebRtcNëEQ_dtfm_aTbl48Khz
;

221 
yInôTabÀ
 = 
WebRtcNëEQ_dtfm_yInôTab48Khz
;

222 
‰ameLí
 = 480;

228  
DTMF_GEN_UNKNOWN_SAMP_FREQ
;

231 i‡(
extFømeLí
 >= 0)

233 
‰ameLí
 = 
extFømeLí
;

237 
vÆue
)

244 
lowIndex
 = 0;

252 
lowIndex
 = 1;

260 
lowIndex
 = 2;

268 
lowIndex
 = 3;

273  
DTMF_DEC_PARAMETER_ERROR
;

278 
vÆue
)

285 
highIndex
 = 4;

293 
highIndex
 = 5;

301 
highIndex
 = 6;

309 
highIndex
 = 7;

315 
a1
 = 
aTbl
[
lowIndex
];

316 
a2
 = 
aTbl
[
highIndex
];

318 i‡(
DTMFdecIn°
->
ªöô
)

321 
DTMFdecIn°
->
ﬁdOuçutLow
[0] = 
yInôTabÀ
[
lowIndex
];

322 
DTMFdecIn°
->
ﬁdOuçutLow
[1] = 0;

323 
DTMFdecIn°
->
ﬁdOuçutHigh
[0] = 
yInôTabÀ
[
highIndex
];

324 
DTMFdecIn°
->
ﬁdOuçutHigh
[1] = 0;

327 
DTMFdecIn°
->
ªöô
 = 0;

331 
i
 = 0; i < 
‰ameLí
; i++)

335 
ãmpVÆLow


336 (
öt16_t
Ë(((
	`WEBRTC_SPL_MUL_16_16
(
a1
, 
DTMFdecIn°
->
ﬁdOuçutLow
[1])

337 + 8192Ë>> 14Ë- 
DTMFdecIn°
->
ﬁdOuçutLow
[0]);

338 
ãmpVÆHigh


339 (
öt16_t
Ë(((
	`WEBRTC_SPL_MUL_16_16
(
a2
, 
DTMFdecIn°
->
ﬁdOuçutHigh
[1])

340 + 8192Ë>> 14Ë- 
DTMFdecIn°
->
ﬁdOuçutHigh
[0]);

343 
DTMFdecIn°
->
ﬁdOuçutLow
[0] = DTMFdecInst->oldOutputLow[1];

344 
DTMFdecIn°
->
ﬁdOuçutLow
[1] = 
ãmpVÆLow
;

345 
DTMFdecIn°
->
ﬁdOuçutHigh
[0] = DTMFdecInst->oldOutputHigh[1];

346 
DTMFdecIn°
->
ﬁdOuçutHigh
[1] = 
ãmpVÆHigh
;

350 
ãmpVÆ
 = 
	`WEBRTC_SPL_MUL_16_16
(
DTMF_AMP_LOW
, 
ãmpVÆLow
)

351 + 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
ãmpVÆHigh
, 15);

354 
ãmpVÆ
 = (tempVal + 16384) >> 15;

357 
sig«l
[
i
] = (
öt16_t
Ë
	`WEBRTC_SPL_RSHIFT_W32
(

358 (
	`WEBRTC_SPL_MUL_16_16
(
ãmpVÆ
, 
WebRtcNëEQ_dtfm_dBm0
[
vﬁume
])

362  
‰ameLí
;

364 
	}
}

	@dtmf_tonegen.h

15 #i‚de‡
DTMF_TONEGEN_H


16 
	#DTMF_TONEGEN_H


	)

18 
	~"ty≥defs.h
"

20 
	~"√ãq_deföes.h
"

22 #ifde‡
NETEQ_ATEVENT_DECODE


25 
	#DTMF_AMP_LOW
 23171

	)

28 
	sdtmf_t⁄e_ö°_t_


31 
öt16_t
 
	mªöô
;

33 
öt16_t
 
	mﬁdOuçutLow
[2];

34 
öt16_t
 
	mﬁdOuçutHigh
[2];

36 
	mœ°DtmfSam∂e
;

38 }
	tdtmf_t⁄e_ö°_t
;

62 
öt16_t
 
WebRtcNëEQ_DTMFGíî©e
(
dtmf_t⁄e_ö°_t
 *
DTMFdecIn°
,

63 
öt16_t
 
vÆue
,

64 
öt16_t
 
vﬁume
,

65 
öt16_t
 *
sig«l
,

66 
uöt16_t
 
ßmpFªq
,

67 
öt16_t
 
‰ameLí


	@expand.c

16 
	~"d•.h
"

18 
	~<as£π.h
>

20 
	~"sig«l_¥o˚ssög_libøry.h
"

22 
	~"d•_hñpfun˘i⁄s.h
"

23 
	~"√ãq_îr‹_codes.h
"

25 
	#CHECK_NO_OF_CORRMAX
 3

	)

26 
	#DISTLEN
 20

	)

27 
	#LPCANALASYSLEN
 160

	)

53 #i‡((
BGN_LPC_ORDER
 > 10Ë|| (
UNVOICED_LPC_ORDER
 > 10)Ë&& (
deföed
 
SCRATCH
)

54 #îr‹ 
BGN_LPC_ORDER
 
™d
/
‹
 BGN_LPC_ORDER 
¨e
 
too
 
œrge
 
cuºít
 
s¸©ch
 
mem‹y
 
Æloˇti⁄


57 
	#SCRATCH_PW16_BEST_CORR_INDEX
 0

	)

58 
	#SCRATCH_PW16_BEST_CORR
 3

	)

59 
	#SCRATCH_PW16_BEST_DIST_INDEX
 6

	)

60 
	#SCRATCH_PW16_BEST_DIST
 9

	)

61 
	#SCRATCH_PW16_CORR_VEC
 12

	)

62 
	#SCRATCH_PW16_CORR2
 0

	)

63 
	#SCRATCH_PW32_AUTO_CORR
 0

	)

64 
	#SCRATCH_PW16_RC
 14

	)

65 
	#SCRATCH_PW16_RAND_VEC
 0

	)

67 #i‡(
deföed
(
NETEQ_48KHZ_WIDEBAND
))

68 
	#SCRATCH_NETEQDSP_CORRELATOR
 624

	)

69 
	#SCRATCH_PW16_SCALED_RAND_VEC
 750

	)

70 
	#SCRATCH_PW16_UNVOICED_VEC_SPACE
 1500

	)

71 #ñi‡(
deföed
(
NETEQ_32KHZ_WIDEBAND
))

72 
	#SCRATCH_NETEQDSP_CORRELATOR
 420

	)

73 
	#SCRATCH_PW16_SCALED_RAND_VEC
 510

	)

74 
	#SCRATCH_PW16_UNVOICED_VEC_SPACE
 1010

	)

75 #ñi‡(
deföed
(
NETEQ_WIDEBAND
))

76 
	#SCRATCH_NETEQDSP_CORRELATOR
 216

	)

77 
	#SCRATCH_PW16_SCALED_RAND_VEC
 270

	)

78 
	#SCRATCH_PW16_UNVOICED_VEC_SPACE
 520

	)

80 
	#SCRATCH_NETEQDSP_CORRELATOR
 114

	)

81 
	#SCRATCH_PW16_SCALED_RAND_VEC
 150

	)

82 
	#SCRATCH_PW16_UNVOICED_VEC_SPACE
 275

	)

107 
WebRtcNëEQ_Ex∑nd
(
DSPIn°_t
 *
ö°
,

108 #ifde‡
SCRATCH


109 
öt16_t
 *
pw16_s¸©chPå
,

111 
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_Àn
,

112 
öt16_t
 
BGN⁄ly
)

115 
öt16_t
 
	gfs_mu…
;

116 
Ex∑ndIn°_t
 *
	gEx∑ndSèã
 = &(
ö°
->
Ex∑ndIn°
);

117 
BGNIn°_t
 *
	gBGNSèã
 = &(
ö°
->
BGNIn°
);

118 
	gi
;

119 #ifde‡
SCRATCH


120 
öt16_t
 *
	gpw16_øndVec
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_RAND_VEC
;

121 
öt16_t
 *
	gpw16_sˇÀdR™dVec
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_SCALED_RAND_VEC
;

122 
öt16_t
 *
	gpw16_unvoi˚dVecS∑˚
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_UNVOICED_VEC_SPACE
;

124 
öt16_t
 
	gpw16_øndVec
[
FSMULT
 * 120 + 30];

125 
öt16_t
 
	gpw16_sˇÀdR™dVec
[
FSMULT
 * 125];

126 
öt16_t
 
	gpw16_unvoi˚dVecS∑˚
[
BGN_LPC_ORDER
 + 
FSMULT
 * 125];

129 
öt16_t
 *
	gpw16_voi˚dVecSt‹age
 = 
pw16_outD©a
;

130 
öt16_t
 *
	gpw16_voi˚dVec
 = &
pw16_voi˚dVecSt‹age
[
Ex∑ndSèã
->
w16_ovîœp
];

131 
öt16_t
 *
	gpw16_unvoi˚dVec
 = 
pw16_unvoi˚dVecS∑˚
 + 
UNVOICED_LPC_ORDER
;

132 
öt16_t
 *
	gpw16_˙gVec
 = 
pw16_unvoi˚dVecS∑˚
 + 
BGN_LPC_ORDER
;

133 
öt16_t
 
	gw16_expVecsLí
, 
	gw16_œg
 = 0, 
	gw16_expVecPos
;

134 
öt16_t
 
	gw16_øndLí
;

135 
öt16_t
 
	gw16_v‰a˘i⁄Ch™ge
;

136 
öt16_t
 
	gw16_wöMuã
 = 0, 
	gw16_wöMuãInc
 = 0, 
	gw16_wöUnMuã
 = 0, 
	gw16_wöUnMuãInc
 = 0;

137 
öt32_t
 
	gw32_tmp
;

138 
öt16_t
 
	gw16_tmp
, 
	gw16_tmp2
;

139 
öt16_t
 
	g°abûôy
;

140 
BGNMode
 
	gbgnMode
 = 
ö°
->
BGNIn°
.
bgnMode
;

143 
öt16_t
 
	gfsMu…4
;

144 
öt16_t
 
	gfsMu…20
;

145 
öt16_t
 
	gfsMu…120
;

146 
öt16_t
 
	gfsMu…Di°Lí
;

147 
öt16_t
 
	gfsMu…LPCA«œsysLí
;

149 #ifde‡
NETEQ_STEREO


150 
Ma°îSœveInfo
 *
	gmsInfo
 = 
ö°
->
msInfo
;

154 
	gfs_mu…
 = 
WebRtcNëEQ_CÆcFsMu…
(
ö°
->
fs
);

157 
	gfsMu…4
 = (
öt16_t
Ë
WEBRTC_SPL_MUL_16_16
(
fs_mu…
, 4);

158 
	gfsMu…20
 = (
öt16_t
Ë
WEBRTC_SPL_MUL_16_16
(
fs_mu…
, 20);

159 
	gfsMu…120
 = (
öt16_t
Ë
WEBRTC_SPL_MUL_16_16
(
fs_mu…
, 120);

160 
	gfsMu…Di°Lí
 = (
öt16_t
Ë
WEBRTC_SPL_MUL_16_16
(
fs_mu…
, 
DISTLEN
);

161 
	gfsMu…LPCA«œsysLí
 = (
öt16_t
Ë
WEBRTC_SPL_MUL_16_16
(
fs_mu…
, 
LPCANALASYSLEN
);

167 i‡(
	gEx∑ndSèã
->
	gw16_c⁄£cExp
 =0 && !
BGN⁄ly
)

170 #ifde‡
SCRATCH


171 
öt32_t
 *
pw32_autoC‹r
 = (öt32_t*Ë(
pw16_s¸©chPå


172 + 
SCRATCH_PW32_AUTO_CORR
);

173 
öt16_t
 *
	gpw16_rc
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_RC
;

174 
öt16_t
 *
	gpw16_be°C‹rIndex
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_BEST_CORR_INDEX
;

175 
öt16_t
 *
	gpw16_be°C‹r
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_BEST_CORR
;

176 
öt16_t
 *
	gpw16_be°Di°Index
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_BEST_DIST_INDEX
;

177 
öt16_t
 *
	gpw16_be°Di°
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_BEST_DIST
;

178 
öt16_t
 *
	gpw16_c‹rVec
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_CORR_VEC
;

179 
öt32_t
 *
	gpw32_c‹r2
 = (öt32_t*Ë(
pw16_s¸©chPå
 + 
SCRATCH_PW16_CORR2
);

181 
öt32_t
 
	gpw32_autoC‹r
[
UNVOICED_LPC_ORDER
+1];

182 
öt16_t
 
	gpw16_rc
[
UNVOICED_LPC_ORDER
];

183 
öt16_t
 
	gpw16_c‹rVec
[
FSMULT
*102];

184 
öt16_t
 
	gpw16_be°C‹rIndex
[
CHECK_NO_OF_CORRMAX
];

185 
öt16_t
 
	gpw16_be°C‹r
[
CHECK_NO_OF_CORRMAX
];

186 
öt16_t
 
	gpw16_be°Di°Index
[
CHECK_NO_OF_CORRMAX
];

187 
öt16_t
 
	gpw16_be°Di°
[
CHECK_NO_OF_CORRMAX
];

188 
öt32_t
 
	gpw32_c‹r2
[(99*
FSMULT
)+1];

190 
öt32_t
 
	gpw32_be°Di°
[
CHECK_NO_OF_CORRMAX
];

191 
öt16_t
 
	gw16_öd
 = 0;

192 
öt16_t
 
	gw16_c‹rVecLí
;

193 
öt16_t
 
	gw16_c‹rSˇÀ
;

194 
öt16_t
 
	gw16_di°SˇÀ
;

195 
öt16_t
 
	gw16_ödMö
, 
	gw16_ödMax
;

196 
öt16_t
 
	gw16_Àn
;

197 
öt32_t
 
	gw32_í1
, 
	gw32_í2
, 
	gw32_cc
;

198 
öt16_t
 
	gw16_í1SˇÀ
, 
	gw16_í2SˇÀ
;

199 
öt16_t
 
	gw16_í1
, 
	gw16_í2
;

200 
öt32_t
 
	gw32_í1_mul_í2
;

201 
öt16_t
 
	gw16_sqπ_í1í2
;

202 
öt16_t
 
	gw16_ccShi·L
;

203 
öt16_t
 
	gw16_be°c‹r
;

204 
öt16_t
 *
	gpw16_vec1
, *
	gpw16_vec2
;

205 
öt16_t
 
	gw16_Á˘‹
;

206 
öt16_t
 
	gw16_Di°Lag
, 
	gw16_C‹rLag
, 
	gw16_diffLag
;

207 
öt16_t
 
	gw16_íîgyLí
;

208 
öt16_t
 
	gw16_¶›e
;

209 
öt16_t
 
	gw16_°¨tInd
;

210 
öt16_t
 
	gw16_noOfc‹r2
;

211 
öt16_t
 
	gw16_sˇÀ
;

214 
	gEx∑ndSèã
->
	gw16_œgsDúe˘i⁄
 = 1;

215 
	gEx∑ndSèã
->
	gw16_œgsPosôi⁄
 = -1;

216 
	gEx∑ndSèã
->
	gw16_ex∑ndMuãFa˘‹
 = 16384;

217 
	gBGNSèã
->
	gw16_muãÁ˘‹
 = 0;

218 
	gö°
->
	gw16_£edInc
 = 1;

220 #ifde‡
NETEQ_STEREO


222 i‡(
	gmsInfo
 =
NULL
)

225  
MASTER_SLAVE_ERROR
;

232 i‡((
	gmsInfo
->
	gmsMode
 !
NETEQ_SLAVE
)

233 || ((
msInfo
->
di°Lag
 <0Ë|| (msInfo->
c‹rLag
 <= 0)))

237 
w16_c‹rVecLí
 = 
WebRtcNëEQ_C‹ªœt‹
(
ö°
,

238 #ifde‡
SCRATCH


239 
pw16_s¸©chPå
 + 
SCRATCH_NETEQDSP_CORRELATOR
,

241 
ö°
->
pw16_•ìchHi°‹y
, in°->
w16_•ìchHi°‹yLí
, 
pw16_c‹rVec
,

242 &
w16_c‹rSˇÀ
);

245 
WebRtcNëEQ_PókDëe˘i⁄
(
pw16_c‹rVec
, 
w16_c‹rVecLí
, 
CHECK_NO_OF_CORRMAX
, 
fs_mu…
,

246 
pw16_be°C‹rIndex
, 
pw16_be°C‹r
);

252 
	gpw16_be°C‹rIndex
[0] +
fsMu…20
;

253 
	gpw16_be°C‹rIndex
[1] +
fsMu…20
;

254 
	gpw16_be°C‹rIndex
[2] +
fsMu…20
;

257 
	gw16_di°SˇÀ
 = 0;

258 
	gi
 = 0; i < 
	gCHECK_NO_OF_CORRMAX
; i++)

260 
	gw16_tmp
 = 
fsMu…20
;

261 
	gw16_tmp2
 = 
pw16_be°C‹rIndex
[
i
] - 
fsMu…4
;

262 
	gw16_ödMö
 = 
WEBRTC_SPL_MAX
(
w16_tmp
, 
w16_tmp2
);

263 
	gw16_tmp
 = 
fsMu…120
 - 1;

264 
	gw16_tmp2
 = 
pw16_be°C‹rIndex
[
i
] + 
fsMu…4
;

265 
	gw16_ödMax
 = 
WEBRTC_SPL_MIN
(
w16_tmp
, 
w16_tmp2
);

267 
	gpw16_be°Di°Index
[
i
] = 
WebRtcNëEQ_MöDi°‹ti⁄
(

268 &(
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 
fsMu…Di°Lí
]),

269 
w16_ödMö
, 
w16_ödMax
, 
fsMu…Di°Lí
, &
pw32_be°Di°
[
i
]);

271 
	gw16_di°SˇÀ


272 
WEBRTC_SPL_MAX
(16 - 
WebRtcS∂_N‹mW32
(
pw32_be°Di°
[
i
]), 
w16_di°SˇÀ
);

277 
WebRtcS∂_Ve˘‹BôShi·W32ToW16
(
pw16_be°Di°
, 
CHECK_NO_OF_CORRMAX
, 
pw32_be°Di°
,

278 
w16_di°SˇÀ
);

285 
	gw32_í1
 = 
WEBRTC_SPL_MUL_16_16
((
öt32_t
Ë
pw16_be°C‹r
[0],
pw16_be°Di°
[1]);

286 
	gw32_í2
 = 
WEBRTC_SPL_MUL_16_16
((
öt32_t
Ë
pw16_be°C‹r
[1],
pw16_be°Di°
[0]);

287 i‡(
	gw32_í1
 >
w32_í2
)

290 
w32_í1


291 
WEBRTC_SPL_MUL_16_16
((
öt32_t
Ë
pw16_be°C‹r
[0], 
pw16_be°Di°
[2]);

292 
	gw32_í2


293 
WEBRTC_SPL_MUL_16_16
((
öt32_t
Ë
pw16_be°C‹r
[2], 
pw16_be°Di°
[0]);

294 i‡(
	gw32_í1
 >
w32_í2
)

297 
w16_öd
 = 0;

302 
	gw16_öd
 = 2;

308 
	gw32_í1


309 
WEBRTC_SPL_MUL_16_16
((
öt32_t
Ë
pw16_be°C‹r
[1],
pw16_be°Di°
[2]);

310 
	gw32_í2


311 
WEBRTC_SPL_MUL_16_16
((
öt32_t
Ë
pw16_be°C‹r
[2],
pw16_be°Di°
[1]);

312 i‡((
	göt32_t
Ë
	gw32_í1
 >(
öt32_t
Ë
w32_í2
)

315 
w16_öd
 = 1;

320 
	gw16_öd
 = 2;

324 #ifde‡
NETEQ_STEREO


328 i‡((
	gmsInfo
->
	gmsMode
 =
NETEQ_MASTER
Ë|| (
msInfo
->
msMode
 =
NETEQ_MONO
)

329 || ((
msInfo
->
msMode
 =
NETEQ_SLAVE
Ë&& (msInfo->
di°Lag
 <0 || msInfo->
c‹rLag


333 
w16_Di°Lag
 = 
pw16_be°Di°Index
[
w16_öd
];

334 
	gw16_C‹rLag
 = 
pw16_be°C‹rIndex
[
w16_öd
];

335 i‡(
	gmsInfo
->
	gmsMode
 =
NETEQ_MASTER
)

337 
msInfo
->
di°Lag
 = 
w16_Di°Lag
;

338 
	gmsInfo
->
	gc‹rLag
 = 
w16_C‹rLag
;

341 i‡(
	gmsInfo
->
	gmsMode
 =
NETEQ_SLAVE
)

344 
w16_Di°Lag
 = 
msInfo
->
di°Lag
;

345 
	gw16_C‹rLag
 = 
msInfo
->
c‹rLag
;

348 i‡((
	gw16_Di°Lag
 <0Ë|| (
w16_C‹rLag
 <= 0))

350  
MASTER_SLAVE_ERROR
;

356  
	gMASTER_SLAVE_ERROR
;

359 
	gw16_Di°Lag
 = 
pw16_be°Di°Index
[
w16_öd
];

360 
	gw16_C‹rLag
 = 
pw16_be°C‹rIndex
[
w16_öd
];

363 
	gEx∑ndSèã
->
	gw16_maxLag
 = 
WEBRTC_SPL_MAX
(
w16_Di°Lag
, 
w16_C‹rLag
);

366 
	gw16_Àn
 = 
w16_Di°Lag
 + 10;

367 
	gw16_Àn
 = 
WEBRTC_SPL_MIN
(
w16_Àn
, 
fsMu…120
);

368 
	gw16_Àn
 = 
WEBRTC_SPL_MAX
(
w16_Àn
, 60 * 
fs_mu…
);

370 
	gw16_°¨tInd
 = 
WEBRTC_SPL_MIN
(
w16_Di°Lag
, 
w16_C‹rLag
);

371 
	gw16_noOfc‹r2
 = 
WEBRTC_SPL_ABS_W16
((
w16_Di°Lag
-
w16_C‹rLag
)) + 1;

375 
	gw16_tmp


376 
WebRtcS∂_MaxAbsVÆueW16
(

377 &
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 
w16_Àn
 - 
w16_°¨tInd


378 - 
w16_noOfc‹r2
],

379 (
öt16_t
Ë(
w16_Àn
 + 
w16_°¨tInd
 + 
w16_noOfc‹r2
 - 1));

380 
	gw16_c‹rSˇÀ
 = ((31 - 
WebRtcS∂_N‹mW32
(
WEBRTC_SPL_MUL_16_16
(
w16_tmp
, w16_tmp)))

381 + (31 - 
WebRtcS∂_N‹mW32
(
w16_Àn
))) - 31;

382 
	gw16_c‹rSˇÀ
 = 
WEBRTC_SPL_MAX
(0, 
w16_c‹rSˇÀ
);

388 
WebRtcNëEQ_CrossC‹r
(
pw32_c‹r2
,

389 &(
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 
w16_Àn
]),

390 &(
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 
w16_Àn
 - 
w16_°¨tInd
]),

391 
w16_Àn
, 
w16_noOfc‹r2
, 
w16_c‹rSˇÀ
, -1);

394 
	gw16_öd
 = 
WebRtcS∂_MaxIndexW32
(
pw32_c‹r2
, 
w16_noOfc‹r2
);

395 
	gw32_cc
 = 
pw32_c‹r2
[
w16_öd
];

396 
	gw16_öd
 = 
w16_öd
 + 
w16_°¨tInd
;

399 
	gw32_í1
 = 
WebRtcNëEQ_DŸW16W16
(

400 &(
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 
w16_Àn
]),

401 &(
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 
w16_Àn
]), w16_len,

402 
w16_c‹rSˇÀ
);

403 
	gw32_í2
 = 
WebRtcNëEQ_DŸW16W16
(

404 &(
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 
w16_Àn
 - 
w16_öd
]),

405 &(
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 
w16_Àn
 - 
w16_öd
]),

406 
w16_Àn
, 
w16_c‹rSˇÀ
);

409 i‡((
	gw32_í1
 > 0Ë&& (
	gw32_í2
 > 0))

411 
	gw16_í1SˇÀ
 = 16 - 
WebRtcS∂_N‹mW32
(
w32_í1
);

412 
	gw16_í1SˇÀ
 = 
WEBRTC_SPL_MAX
(0, 
w16_í1SˇÀ
);

413 
	gw16_í2SˇÀ
 = 16 - 
WebRtcS∂_N‹mW32
(
w32_í2
);

414 
	gw16_í2SˇÀ
 = 
WEBRTC_SPL_MAX
(0, 
w16_í2SˇÀ
);

416 i‡((
	gw16_í1SˇÀ
 + 
	gw16_í2SˇÀ
) & 1)

419 
	gw16_í1SˇÀ
 += 1;

421 
	gw16_í1
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(
w32_í1
, 
w16_í1SˇÀ
);

422 
	gw16_í2
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(
w32_í2
, 
w16_í2SˇÀ
);

423 
	gw32_í1_mul_í2
 = 
WEBRTC_SPL_MUL_16_16
(
w16_í1
, 
w16_í2
);

424 
	gw16_sqπ_í1í2
 = (
öt16_t
Ë
WebRtcS∂_SqπFlo‹
(
w32_í1_mul_í2
);

427 
	gw16_ccShi·L
 = 14 - ((
w16_í1SˇÀ
 + 
w16_í2SˇÀ
) >> 1);

428 
	gw32_cc
 = 
WEBRTC_SPL_SHIFT_W32
(
w32_cc
, 
w16_ccShi·L
);

429 
	gw16_be°c‹r
 = (
öt16_t
Ë
WebRtcS∂_DivW32W16
(
w32_cc
, 
w16_sqπ_í1í2
);

430 
	gw16_be°c‹r
 = 
WEBRTC_SPL_MIN
(16384, 
w16_be°c‹r
);

436 
	gw16_be°c‹r
 = 0;

443 
	gw16_expVecsLí
 = 
Ex∑ndSèã
->
w16_maxLag
 + Ex∑ndSèã->
w16_ovîœp
;

444 
	gpw16_vec1
 = &(
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 
w16_expVecsLí
]);

445 
	gpw16_vec2
 = 
pw16_vec1
 - 
w16_Di°Lag
;

447 
	gw32_í1
 = 
WebRtcNëEQ_DŸW16W16
(
pw16_vec1
,Öw16_vec1, 
w16_expVecsLí
, 
w16_c‹rSˇÀ
);

448 
	gw32_í2
 = 
WebRtcNëEQ_DŸW16W16
(
pw16_vec2
,Öw16_vec2, 
w16_expVecsLí
, 
w16_c‹rSˇÀ
);

454 i‡(((
	gw32_í1
 >> 2Ë< 
	gw32_í2
) && ((w32_en1) > (w32_en2 >> 2)))

458 
	gw16_í2SˇÀ
 = 16 - 
WebRtcS∂_N‹mW32
(
w32_í2
);

459 
	gw16_í2SˇÀ
 = 
WEBRTC_SPL_MAX
(0, 
w16_í2SˇÀ
);

460 
	gw16_í1SˇÀ
 = 
w16_í2SˇÀ
 - 13;

463 
	gw32_í1_mul_í2
 = 
WebRtcS∂_DivW32W16
(

464 
WEBRTC_SPL_SHIFT_W32
(
w32_í1
, -
w16_í1SˇÀ
),

465 (
öt16_t
Ë(
WEBRTC_SPL_RSHIFT_W32
(
w32_í2
, 
w16_í2SˇÀ
)));

468 
	gw16_Á˘‹
 = (
öt16_t
Ë
WebRtcS∂_SqπFlo‹
(

469 
WEBRTC_SPL_LSHIFT_W32
(
w32_í1_mul_í2
, 13));

473 
WEBRTC_SPL_MEMCPY_W16
(
Ex∑ndSèã
->
pw16_expVecs
[0], 
pw16_vec1
, 
w16_expVecsLí
);

474 
WebRtcS∂_AfföeTønsf‹mVe˘‹
(
Ex∑ndSèã
->
pw16_expVecs
[1], 
pw16_vec2
,

475 
w16_Á˘‹
, 4096, 13, 
w16_expVecsLí
);

482 
WEBRTC_SPL_MEMCPY_W16
(
Ex∑ndSèã
->
pw16_expVecs
[0], 
pw16_vec1
, 
w16_expVecsLí
);

483 
WEBRTC_SPL_MEMCPY_W16
(
Ex∑ndSèã
->
pw16_expVecs
[1], ExpandState->pw16_expVecs[0],

484 
w16_expVecsLí
);

487 i‡(((
	gw32_í1
 >> 2Ë< 
	gw32_í2
) || (w32_en2 == 0))

489 
w16_Á˘‹
 = 4096;

493 
	gw16_Á˘‹
 = 16384;

498 
	gw16_diffLag
 = 
w16_Di°Lag
 - 
w16_C‹rLag
;

499 i‡(
	gw16_diffLag
 == 0)

502 
Ex∑ndSèã
->
w16_œgs
[0] = 
w16_Di°Lag
;

503 
	gEx∑ndSèã
->
	gw16_œgs
[1] = 
w16_Di°Lag
;

504 
	gEx∑ndSèã
->
	gw16_œgs
[2] = 
w16_Di°Lag
;

509 
	gEx∑ndSèã
->
	gw16_œgs
[0] = 
w16_Di°Lag
;

510 
	gEx∑ndSèã
->
	gw16_œgs
[1] = ((
w16_Di°Lag
 + 
w16_C‹rLag
) >> 1);

512 i‡(
	gw16_diffLag
 > 0)

514 
	gEx∑ndSèã
->
	gw16_œgs
[2] = (
w16_Di°Lag
 + 
w16_C‹rLag
 - 1) >> 1;

518 
	gEx∑ndSèã
->
	gw16_œgs
[2] = (
w16_Di°Lag
 + 
w16_C‹rLag
 + 1) >> 1;

527 
	gw16_tmp
 = 
WebRtcS∂_MaxAbsVÆueW16
(

528 &(
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 
fsMu…LPCA«œsysLí
]),

529 
fsMu…LPCA«œsysLí
);

531 
	gw16_tmp
 = 16 - 
WebRtcS∂_N‹mW32
(
w16_tmp
);

532 
	gw16_tmp
 = 
WEBRTC_SPL_MIN
(
w16_tmp
,0);

533 
	gw16_tmp
 = (
w16_tmp
 << 1) + 7;

534 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(
w16_tmp
,0);

537 
	gw16_öd
 = 
ö°
->
w16_•ìchHi°‹yLí
 - 
fsMu…LPCA«œsysLí
 - 
UNVOICED_LPC_ORDER
;

541 
WEBRTC_SPL_MEMCPY_W16
(
pw16_rc
, &
ö°
->
pw16_•ìchHi°‹y
[
w16_öd
], 
UNVOICED_LPC_ORDER
);

544 
WebRtcS∂_MemSëW16
(&
ö°
->
pw16_•ìchHi°‹y
[
w16_öd
], 0, 
UNVOICED_LPC_ORDER
);

548 
WebRtcNëEQ_CrossC‹r
(

549 
pw32_autoC‹r
, &(
ö°
->
pw16_•ìchHi°‹y
[
w16_öd
 + 
UNVOICED_LPC_ORDER
]),

550 &(
ö°
->
pw16_•ìchHi°‹y
[
w16_öd
 + 
UNVOICED_LPC_ORDER
]), 
fsMu…LPCA«œsysLí
,

551 
UNVOICED_LPC_ORDER
 + 1, 
w16_tmp
, -1);

555 
WEBRTC_SPL_MEMCPY_W16
(&
ö°
->
pw16_•ìchHi°‹y
[
w16_öd
], 
pw16_rc
, 
UNVOICED_LPC_ORDER
);

557 i‡(
	gpw32_autoC‹r
[0] > 0)

562 
	g°abûôy
 = 
WebRtcS∂_Levös⁄Durbö
(
pw32_autoC‹r
, 
Ex∑ndSèã
->
pw16_¨Fûãr
,

563 
pw16_rc
, 
UNVOICED_LPC_ORDER
);

566 i‡(
	g°abûôy
 != 1)

569 
Ex∑ndSèã
->
pw16_¨Fûãr
[0] = 4096;

571 
WebRtcS∂_MemSëW16
(
Ex∑ndSèã
->
pw16_¨Fûãr
 + 1, 0, 
UNVOICED_LPC_ORDER
);

576 i‡(
	gw16_Di°Lag
 < 40)

578 
	gw16_íîgyLí
 = 2 * 
w16_Di°Lag
;

582 
	gw16_íîgyLí
 = 
w16_Di°Lag
;

584 
	gw16_øndLí
 = 
w16_íîgyLí
 + 30;

587 i‡(
	gw16_øndLí
 <
RANDVEC_NO_OF_SAMPLES
)

589 
WEBRTC_SPL_MEMCPY_W16
(
pw16_øndVec
,

590 (
öt16_t
*Ë
WebRtcNëEQ_kR™dnTbl
, 
w16_øndLí
);

594 #i‡
FSMULT
 >= 2

595 
WEBRTC_SPL_MEMCPY_W16
(
pw16_øndVec
, (
öt16_t
*Ë
WebRtcNëEQ_kR™dnTbl
,

596 
RANDVEC_NO_OF_SAMPLES
);

597 
	gö°
->
	gw16_£edInc
 = (
ö°
->
w16_£edInc
 + 2Ë& (
RANDVEC_NO_OF_SAMPLES
 - 1);

598 
as£π
(
w16_øndLí
 <
FSMULT
 * 120 + 30);

599 
WebRtcNëEQ_R™domVec
(&
ö°
->
uw16_£ed
, &
pw16_øndVec
[
RANDVEC_NO_OF_SAMPLES
],

600 (
öt16_t
Ë(
w16_øndLí
 - 
RANDVEC_NO_OF_SAMPLES
), 
ö°
->
w16_£edInc
);

602 
as£π
(0);

608 
WEBRTC_SPL_MEMCPY_W16
(
Ex∑ndSèã
->
pw16_¨Sèã
,

609 &(
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 
UNVOICED_LPC_ORDER
]),

610 
UNVOICED_LPC_ORDER
);

611 
WEBRTC_SPL_MEMCPY_W16
(
pw16_unvoi˚dVec
 - 
UNVOICED_LPC_ORDER
,

612 &(
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 128 - 
UNVOICED_LPC_ORDER
]),

613 
UNVOICED_LPC_ORDER
);

614 
WebRtcS∂_FûãrMAFa°Q12
(&
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
 - 128],

615 
pw16_unvoi˚dVec
, 
Ex∑ndSèã
->
pw16_¨Fûãr
, 
UNVOICED_LPC_ORDER
 + 1, 128);

616 i‡(
WebRtcS∂_MaxAbsVÆueW16
(
pw16_unvoi˚dVec
, 128) > 4000)

618 
	gw16_sˇÀ
 = 4;

622 
	gw16_sˇÀ
 = 0;

624 
	gw32_tmp
 = 
WebRtcNëEQ_DŸW16W16
(
pw16_unvoi˚dVec
,Öw16_unvoi˚dVec, 128, 
w16_sˇÀ
);

627 
	gw16_tmp
 = 
WebRtcS∂_N‹mW32
(
w32_tmp
) - 3;

628 
	gw16_tmp
 +((
w16_tmp
 & 0x1) ^ 0x1);

630 
	gw32_tmp
 = 
WEBRTC_SPL_SHIFT_W32
(
w32_tmp
, 
w16_tmp
);

631 
	gw32_tmp
 = 
WebRtcS∂_SqπFlo‹
(
w32_tmp
);

632 
	gEx∑ndSèã
->
	gw16_¨GaöSˇÀ
 = 13 + ((
w16_tmp
 + 7 - 
w16_sˇÀ
) >> 1);

633 
	gEx∑ndSèã
->
	gw16_¨Gaö
 = (
öt16_t
Ë
w32_tmp
;

647 i‡(
	gw16_be°c‹r
 > 7875)

650 
öt16_t
 
	gw16_x1
, 
	gw16_x2
, 
	gw16_x3
;

651 
	gw16_x1
 = 
w16_be°c‹r
;

652 
	gw32_tmp
 = 
WEBRTC_SPL_MUL_16_16
((
öt32_t
Ë
w16_x1
, w16_x1);

653 
	gw16_x2
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(
w32_tmp
, 14);

654 
	gw32_tmp
 = 
WEBRTC_SPL_MUL_16_16
(
w16_x1
, 
w16_x2
);

655 
	gw16_x3
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(
w32_tmp
, 14);

656 
	gw32_tmp


657 (
öt32_t
Ë
WEBRTC_SPL_LSHIFT_W32
((öt32_tË
WebRtcNëEQ_kMixFø˘i⁄FuncTbl
[0], 14);

658 
	gw32_tmp


659 +(
öt32_t
Ë
WEBRTC_SPL_MUL_16_16
(
WebRtcNëEQ_kMixFø˘i⁄FuncTbl
[1], 
w16_x1
);

660 
	gw32_tmp


661 +(
öt32_t
Ë
WEBRTC_SPL_MUL_16_16
(
WebRtcNëEQ_kMixFø˘i⁄FuncTbl
[2], 
w16_x2
);

662 
	gw32_tmp


663 +(
öt32_t
Ë
WEBRTC_SPL_MUL_16_16
(
WebRtcNëEQ_kMixFø˘i⁄FuncTbl
[3], 
w16_x3
);

664 
	gEx∑ndSèã
->
	gw16_vFø˘i⁄
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(
w32_tmp
, 12);

665 
	gEx∑ndSèã
->
	gw16_vFø˘i⁄
 = 
WEBRTC_SPL_MIN
(
Ex∑ndSèã
->
w16_vFø˘i⁄
, 16384);

666 
	gEx∑ndSèã
->
	gw16_vFø˘i⁄
 = 
WEBRTC_SPL_MAX
(
Ex∑ndSèã
->
w16_vFø˘i⁄
, 0);

670 
	gEx∑ndSèã
->
	gw16_vFø˘i⁄
 = 0;

676 
	gw16_¶›e
 = 
w16_Á˘‹
;

678 i‡(
	gw16_¶›e
 > 12288)

682 
	gw32_tmp
 = 
w16_¶›e
 - 8192;

683 
	gw32_tmp
 = 
WEBRTC_SPL_LSHIFT_W32
(
w32_tmp
, 12);

684 
	gw16_tmp
 = (
öt16_t
Ë
WEBRTC_SPL_MUL_16_16_RSFT
(
w16_Di°Lag
,

685 
w16_¶›e
, 8);

686 
	gw16_tmp
 = (
öt16_t
Ë
WebRtcS∂_DivW32W16
(
w32_tmp
,

687 
w16_tmp
);

689 i‡(
	gw16_¶›e
 > 14746)

691 
	gEx∑ndSèã
->
	gw16_muãSl›e
 = (
w16_tmp
 + 1) >> 1;

695 
	gEx∑ndSèã
->
	gw16_muãSl›e
 = (
w16_tmp
 + 4) >> 3;

697 
	gEx∑ndSèã
->
	gw16_⁄£t
 = 1;

699 i‡(
	gEx∑ndSèã
->
	gw16_vFø˘i⁄
 > 13107)

702 i‡(
	gw16_¶›e
 > 8028)

705 
	gEx∑ndSèã
->
	gw16_muãSl›e
 = 0;

710 
	gw32_tmp
 = 8192 - 
w16_¶›e
;

711 
	gw32_tmp
 = 
WEBRTC_SPL_LSHIFT_W32
(
w32_tmp
, 7);

712 
	gEx∑ndSèã
->
	gw16_muãSl›e
 = (
öt16_t
Ë
WebRtcS∂_DivW32W16
(
w32_tmp
,

713 
w16_Di°Lag
);

715 
	gEx∑ndSèã
->
	gw16_⁄£t
 = 0;

723 
	gw32_tmp
 = 8192 - 
w16_¶›e
;

724 
	gw32_tmp
 = 
WEBRTC_SPL_LSHIFT_W32
(
w32_tmp
, 7);

725 
	gw32_tmp
 = 
WEBRTC_SPL_MAX
(
w32_tmp
, 0);

726 
	gEx∑ndSèã
->
	gw16_muãSl›e
 = (
öt16_t
Ë
WebRtcS∂_DivW32W16
(
w32_tmp
,

727 
w16_Di°Lag
);

728 
	gw16_tmp
 = 
WebRtcNëEQ_k5243div
[
fs_mu…
];

729 
	gEx∑ndSèã
->
	gw16_muãSl›e
 = 
WEBRTC_SPL_MAX
(
w16_tmp
, 
Ex∑ndSèã
->
w16_muãSl›e
);

730 
	gEx∑ndSèã
->
	gw16_⁄£t
 = 0;

738 i‡(
	gBGN⁄ly
)

740 i‡(*
	gpw16_Àn
 > 0)

746 
	gw16_œg
 = 
WEBRTC_SPL_MIN
(*
pw16_Àn
, 
FSMULT
 * 120 + 30);

751 
	gw16_œg
 = 
fsMu…120
;

753 
	gw16_øndLí
 = 
w16_œg
;

757 
	gw16_øndLí
 = 
Ex∑ndSèã
->
w16_maxLag
;

760 i‡(
	gw16_øndLí
 <
RANDVEC_NO_OF_SAMPLES
)

762 
ö°
->
w16_£edInc
 = (ö°->w16_£edIn¯+ 2Ë& (
RANDVEC_NO_OF_SAMPLES
 - 1);

763 
WebRtcNëEQ_R™domVec
(&
ö°
->
uw16_£ed
, 
pw16_øndVec
, 
w16_øndLí
,

764 
ö°
->
w16_£edInc
);

768 #i‡
FSMULT
 >= 2

769 
	gö°
->
	gw16_£edInc
 = (
ö°
->
w16_£edInc
 + 2Ë& (
RANDVEC_NO_OF_SAMPLES
 - 1);

770 
WebRtcNëEQ_R™domVec
(&
ö°
->
uw16_£ed
, 
pw16_øndVec
, 
RANDVEC_NO_OF_SAMPLES
,

771 
ö°
->
w16_£edInc
);

772 
	gö°
->
	gw16_£edInc
 = (
ö°
->
w16_£edInc
 + 2Ë& (
RANDVEC_NO_OF_SAMPLES
 - 1);

773 
as£π
(
w16_øndLí
 <
FSMULT
 * 120 + 30);

774 
WebRtcNëEQ_R™domVec
(&
ö°
->
uw16_£ed
, &
pw16_øndVec
[
RANDVEC_NO_OF_SAMPLES
],

775 (
öt16_t
Ë(
w16_øndLí
 - 
RANDVEC_NO_OF_SAMPLES
), 
ö°
->
w16_£edInc
);

777 
as£π
(0);

782 i‡(!
	gBGN⁄ly
)

794 i‡(
	gEx∑ndSèã
->
	gw16_c⁄£cExp
 == 0)

796 
Ex∑ndSèã
->
w16_cuºítVFø˘i⁄
 = 16384;

799 
	gEx∑ndSèã
->
	gw16_œgsPosôi⁄
 = 
Ex∑ndSèã
->
w16_œgsPosôi⁄


800 + 
Ex∑ndSèã
->
w16_œgsDúe˘i⁄
;

803 i‡(
	gEx∑ndSèã
->
	gw16_œgsPosôi⁄
 == 0)

805 
Ex∑ndSèã
->
w16_œgsDúe˘i⁄
 = 1;

807 i‡(
	gEx∑ndSèã
->
	gw16_œgsPosôi⁄
 == 2)

809 
Ex∑ndSèã
->
w16_œgsDúe˘i⁄
 = -1;

813 
	gw16_expVecsLí
 = 
Ex∑ndSèã
->
w16_maxLag
 + Ex∑ndSèã->
w16_ovîœp
;

814 
	gw16_œg
 = 
Ex∑ndSèã
->
w16_œgs
[Ex∑ndSèã->
w16_œgsPosôi⁄
];

816 
	gw16_expVecPos
 = 
w16_expVecsLí
 - 
w16_œg
 - 
Ex∑ndSèã
->
w16_ovîœp
;

817 
	gw16_tmp
 = 
w16_œg
 + 
Ex∑ndSèã
->
w16_ovîœp
;

818 i‡(
	gEx∑ndSèã
->
	gw16_œgsPosôi⁄
 == 0)

820 
WEBRTC_SPL_MEMCPY_W16
(
pw16_voi˚dVecSt‹age
,

821 &(
Ex∑ndSèã
->
pw16_expVecs
[0][
w16_expVecPos
]), 
w16_tmp
);

823 i‡(
	gEx∑ndSèã
->
	gw16_œgsPosôi⁄
 == 1)

825 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRound
(&
Ex∑ndSèã
->
pw16_expVecs
[0][
w16_expVecPos
], 3,

826 &
Ex∑ndSèã
->
pw16_expVecs
[1][
w16_expVecPos
], 1, 2, 
pw16_voi˚dVecSt‹age
,

827 
w16_tmp
);

830 i‡(
	gEx∑ndSèã
->
	gw16_œgsPosôi⁄
 == 2)

832 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRound
(&
Ex∑ndSèã
->
pw16_expVecs
[0][
w16_expVecPos
], 1,

833 &
Ex∑ndSèã
->
pw16_expVecs
[1][
w16_expVecPos
], 1, 1, 
pw16_voi˚dVecSt‹age
,

834 
w16_tmp
);

837 i‡(
	gö°
->
	gfs
 == 8000)

840 
w16_wöMuã
 = 
NETEQ_OVERLAP_WINMUTE_8KHZ_START
;

841 
	gw16_wöMuãInc
 = 
NETEQ_OVERLAP_WINMUTE_8KHZ_INC
;

842 
	gw16_wöUnMuã
 = 
NETEQ_OVERLAP_WINUNMUTE_8KHZ_START
;

843 
	gw16_wöUnMuãInc
 = 
NETEQ_OVERLAP_WINUNMUTE_8KHZ_INC
;

844 #ifde‡
NETEQ_WIDEBAND


846 i‡(
	gö°
->
	gfs
 == 16000)

849 
w16_wöMuã
 = 
NETEQ_OVERLAP_WINMUTE_16KHZ_START
;

850 
	gw16_wöMuãInc
 = 
NETEQ_OVERLAP_WINMUTE_16KHZ_INC
;

851 
	gw16_wöUnMuã
 = 
NETEQ_OVERLAP_WINUNMUTE_16KHZ_START
;

852 
	gw16_wöUnMuãInc
 = 
NETEQ_OVERLAP_WINUNMUTE_16KHZ_INC
;

854 #ifde‡
NETEQ_32KHZ_WIDEBAND


856 i‡(
	gö°
->
	gfs
 == 32000)

859 
w16_wöMuã
 = 
NETEQ_OVERLAP_WINMUTE_32KHZ_START
;

860 
	gw16_wöMuãInc
 = 
NETEQ_OVERLAP_WINMUTE_32KHZ_INC
;

861 
	gw16_wöUnMuã
 = 
NETEQ_OVERLAP_WINUNMUTE_32KHZ_START
;

862 
	gw16_wöUnMuãInc
 = 
NETEQ_OVERLAP_WINUNMUTE_32KHZ_INC
;

864 #ifde‡
NETEQ_48KHZ_WIDEBAND


869 
	gw16_wöMuã
 = 
NETEQ_OVERLAP_WINMUTE_48KHZ_START
;

870 
	gw16_wöMuãInc
 = 
NETEQ_OVERLAP_WINMUTE_48KHZ_INC
;

871 
	gw16_wöUnMuã
 = 
NETEQ_OVERLAP_WINUNMUTE_48KHZ_START
;

872 
	gw16_wöUnMuãInc
 = 
NETEQ_OVERLAP_WINUNMUTE_48KHZ_INC
;

877 i‡((
	gEx∑ndSèã
->
	gw16_ex∑ndMuãFa˘‹
 > 819Ë&& (Ex∑ndSèã->
	gw16_cuºítVFø˘i⁄


880 
	gi
 = 0; i < 
	gEx∑ndSèã
->
	gw16_ovîœp
; i++)

883 
	gEx∑ndSèã
->
	gpw16_ovîœpVec
[
i
] = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(

884 
WEBRTC_SPL_MUL_16_16
(
Ex∑ndSèã
->
pw16_ovîœpVec
[
i
], 
w16_wöMuã
) +

885 
WEBRTC_SPL_MUL_16_16
(

886 
WEBRTC_SPL_MUL_16_16_RSFT
(
Ex∑ndSèã
->
w16_ex∑ndMuãFa˘‹
,

887 
pw16_voi˚dVecSt‹age
[
i
], 14), 
w16_wöUnMuã
) + 16384, 15);

888 
	gw16_wöMuã
 +
w16_wöMuãInc
;

889 
	gw16_wöUnMuã
 +
w16_wöUnMuãInc
;

892 i‡(
	gEx∑ndSèã
->
	gw16_ex∑ndMuãFa˘‹
 == 0

893 #ifde‡
NETEQ_STEREO


894 && 
msInfo
->
msMode
 =
NETEQ_MONO


900 
w16_tmp
 = 
fsMu…120
;

901 
	gEx∑ndSèã
->
	gw16_maxLag
 = 
w16_tmp
;

902 
	gEx∑ndSèã
->
	gw16_œgs
[0] = 
w16_tmp
;

903 
	gEx∑ndSèã
->
	gw16_œgs
[1] = 
w16_tmp
;

904 
	gEx∑ndSèã
->
	gw16_œgs
[2] = 
w16_tmp
;

911 
WEBRTC_SPL_MEMCPY_W16
(
pw16_unvoi˚dVec
 - 
UNVOICED_LPC_ORDER
,

912 
Ex∑ndSèã
->
pw16_¨Sèã
,

913 
UNVOICED_LPC_ORDER
);

914 i‡(
	gEx∑ndSèã
->
	gw16_¨GaöSˇÀ
 > 0)

916 
	gw32_tmp
 = ((
öt32_t
Ë1Ë<< (
Ex∑ndSèã
->
w16_¨GaöSˇÀ
 - 1);

920 
	gw32_tmp
 = 0;

924 
WebRtcS∂_AfföeTønsf‹mVe˘‹
(
pw16_sˇÀdR™dVec
, 
pw16_øndVec
,

925 
Ex∑ndSèã
->
w16_¨Gaö
, 
w32_tmp
, Ex∑ndSèã->
w16_¨GaöSˇÀ
, 
w16_œg
);

927 
WebRtcS∂_FûãrARFa°Q12
(
pw16_sˇÀdR™dVec
, 
pw16_unvoi˚dVec
,

928 
Ex∑ndSèã
->
pw16_¨Fûãr
, 
UNVOICED_LPC_ORDER
 + 1, 
w16_œg
);

930 
WEBRTC_SPL_MEMCPY_W16
(
Ex∑ndSèã
->
pw16_¨Sèã
,

931 &(
pw16_unvoi˚dVec
[
w16_œg
 - 
UNVOICED_LPC_ORDER
]),

932 
UNVOICED_LPC_ORDER
);

943 
	gw16_tmp
 = (31 - 
WebRtcS∂_N‹mW32
(
Ex∑ndSèã
->
w16_maxLag
)) - 5;

944 
	gw16_v‰a˘i⁄Ch™ge
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(256, 
w16_tmp
);

945 i‡(
	gEx∑ndSèã
->
	gw16_°›Mutög
 == 1)

947 
w16_v‰a˘i⁄Ch™ge
 = 0;

951 
	gw16_tmp
 = 8 - 
w16_tmp
;

952 
	gw16_tmp
 = (
Ex∑ndSèã
->
w16_cuºítVFø˘i⁄
 - Ex∑ndSèã->
w16_vFø˘i⁄
Ë>> 
w16_tmp
;

953 
	gw16_tmp
 = 
WEBRTC_SPL_MIN
(
w16_tmp
, 
w16_œg
);

954 
WebRtcNëEQ_MixVoi˚Unvoi˚
(
pw16_outD©a
, 
pw16_voi˚dVec
, 
pw16_unvoi˚dVec
,

955 &
Ex∑ndSèã
->
w16_cuºítVFø˘i⁄
, 
w16_v‰a˘i⁄Ch™ge
, 
w16_tmp
);

957 i‡(
	gw16_tmp
 < 
	gw16_œg
)

959 i‡(
	gw16_v‰a˘i⁄Ch™ge
 != 0)

961 
Ex∑ndSèã
->
w16_cuºítVFø˘i⁄
 = Ex∑ndSèã->
w16_vFø˘i⁄
;

963 
	gw16_tmp2
 = 16384 - 
Ex∑ndSèã
->
w16_cuºítVFø˘i⁄
;

964 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRound
(
pw16_voi˚dVec
 + 
w16_tmp
,

965 
Ex∑ndSèã
->
w16_cuºítVFø˘i⁄
, 
pw16_unvoi˚dVec
 + 
w16_tmp
, 
w16_tmp2
, 14,

966 
pw16_outD©a
 + 
w16_tmp
, (
öt16_t
Ë(
w16_œg
 - w16_tmp));

970 i‡(
	gEx∑ndSèã
->
	gw16_c⁄£cExp
 == 3)

973 
Ex∑ndSèã
->
w16_muãSl›e
 = 
WEBRTC_SPL_MAX
(ExpandState->w16_muteSlope,

974 
WebRtcNëEQ_k1049div
[
fs_mu…
]);

976 i‡(
	gEx∑ndSèã
->
	gw16_c⁄£cExp
 == 7)

979 
Ex∑ndSèã
->
w16_muãSl›e
 = 
WEBRTC_SPL_MAX
(ExpandState->w16_muteSlope,

980 
WebRtcNëEQ_k2097div
[
fs_mu…
]);

984 i‡((
	gEx∑ndSèã
->
	gw16_c⁄£cExp
 !0Ë|| (
Ex∑ndSèã
->
w16_⁄£t
 != 1))

987 
WebRtcS∂_AfföeTønsf‹mVe˘‹
(
pw16_outD©a
,Öw16_outData,

988 
Ex∑ndSèã
->
w16_ex∑ndMuãFa˘‹
, 8192, 14, 
w16_œg
);

990 i‡((
	gEx∑ndSèã
->
	gw16_°›Mutög
 != 1))

992 
WebRtcNëEQ_MuãSig«l
(
pw16_outD©a
, 
Ex∑ndSèã
->
w16_muãSl›e
, 
w16_œg
);

994 
	gw16_tmp
 = 16384 - (
öt16_t
Ë((
WEBRTC_SPL_MUL_16_16
(
w16_œg
,

995 
Ex∑ndSèã
->
w16_muãSl›e
) + 8192) >> 6);

996 
	gw16_tmp
 = (
öt16_t
Ë((
WEBRTC_SPL_MUL_16_16
(
w16_tmp
,

997 
Ex∑ndSèã
->
w16_ex∑ndMuãFa˘‹
) + 8192) >> 14);

1000 i‡((
	gEx∑ndSèã
->
	gw16_c⁄£cExp
 > 3Ë&& (
	gw16_tmp


1001 >
Ex∑ndSèã
->
w16_ex∑ndMuãFa˘‹
))

1003 
Ex∑ndSèã
->
w16_ex∑ndMuãFa˘‹
 = 0;

1007 
	gEx∑ndSèã
->
	gw16_ex∑ndMuãFa˘‹
 = 
w16_tmp
;

1018 i‡(
	gBGNSèã
->
	gw16_öôülized
 == 1)

1022 
WEBRTC_SPL_MEMCPY_W16
(
pw16_˙gVec
 - 
BGN_LPC_ORDER
,

1023 
BGNSèã
->
pw16_fûãrSèã
,

1024 
BGN_LPC_ORDER
);

1026 i‡(
	gBGNSèã
->
	gw16_sˇÀShi·
 > 1)

1028 
	gw32_tmp
 = ((
öt32_t
Ë1Ë<< (
BGNSèã
->
w16_sˇÀShi·
 - 1);

1032 
	gw32_tmp
 = 0;

1037 
WebRtcS∂_AfföeTønsf‹mVe˘‹
(
pw16_sˇÀdR™dVec
, 
pw16_øndVec
,

1038 
BGNSèã
->
w16_sˇÀ
, 
w32_tmp
, BGNSèã->
w16_sˇÀShi·
, 
w16_œg
);

1040 
WebRtcS∂_FûãrARFa°Q12
(
pw16_sˇÀdR™dVec
, 
pw16_˙gVec
, 
BGNSèã
->
pw16_fûãr
,

1041 
BGN_LPC_ORDER
 + 1, 
w16_œg
);

1043 
WEBRTC_SPL_MEMCPY_W16
(
BGNSèã
->
pw16_fûãrSèã
,

1044 &(
pw16_˙gVec
[
w16_œg
-
BGN_LPC_ORDER
]),

1045 
BGN_LPC_ORDER
);

1049 i‡(
	gbgnMode
 =
BGN_FADE
 && 
Ex∑ndSèã
->
w16_c⁄£cExp
 >
FADE_BGN_TIME


1050 && 
BGNSèã
->
w16_muãÁ˘‹
 > 0)

1054 
öt16_t
 
muãFa˘‹
;

1055 i‡(
	gfs_mu…
 == 1)

1057 
muãFa˘‹
 = -32;

1059 i‡(
	gfs_mu…
 == 2)

1061 
muãFa˘‹
 = -16;

1063 i‡(
	gfs_mu…
 == 4)

1065 
muãFa˘‹
 = -8;

1069 
	gmuãFa˘‹
 = -5;

1072 
WebRtcNëEQ_UnmuãSig«l
(
pw16_˙gVec
, &
BGNSèã
->
w16_muãÁ˘‹
,

1073 
pw16_˙gVec
, 
muãFa˘‹
,

1074 
w16_œg
);

1076 i‡(
	gBGNSèã
->
	gw16_muãÁ˘‹
 < 16384 && !
	gBGN⁄ly
)

1084 i‡(
	gEx∑ndSèã
->
	gw16_°›Mutög
 !1 && 
bgnMode
 !
BGN_OFF
 && !(bgnMode

1085 =
BGN_FADE
 && 
Ex∑ndSèã
->
w16_c⁄£cExp
 >
FADE_BGN_TIME
))

1087 
WebRtcNëEQ_UnmuãSig«l
(
pw16_˙gVec
, &
BGNSèã
->
w16_muãÁ˘‹
,

1088 
pw16_˙gVec
, 
Ex∑ndSèã
->
w16_muãSl›e
,

1089 
w16_œg
);

1096 
WebRtcS∂_AfföeTønsf‹mVe˘‹
(
pw16_˙gVec
,Öw16_cngVec,

1097 
BGNSèã
->
w16_muãÁ˘‹
, 8192, 14, 
w16_œg
);

1104 
WebRtcS∂_MemSëW16
(
pw16_˙gVec
, 0, 
w16_œg
);

1107 i‡(
	gBGN⁄ly
)

1110 
	gi
 = 0; i < 
	gw16_œg
; i++)

1112 
	gpw16_outD©a
[
i
] = 
pw16_˙gVec
[i];

1118 
	gi
 = 0; i < 
	gw16_œg
; i++)

1120 
	gpw16_outD©a
[
i
] = 
pw16_outD©a
[i] + 
pw16_˙gVec
[i];

1124 
	gEx∑ndSèã
->
	gw16_c⁄£cExp
 = 
Ex∑ndSèã
->
w16_c⁄£cExp
 + 1;

1125 i‡(
	gEx∑ndSèã
->
	gw16_c⁄£cExp
 < 0)

1126 
	gEx∑ndSèã
->
	gw16_c⁄£cExp
 = 
FADE_BGN_TIME
;

1129 
	gö°
->
	gw16_mode
 = 
MODE_EXPAND
;

1130 *
	gpw16_Àn
 = 
w16_œg
;

1133 i‡(
	gEx∑ndSèã
->
	gw16_°›Mutög
 !1 || 
BGN⁄ly
)

1139 
ö°
->
°©In°
.
ex∑ndLígth
 +(
uöt32_t
Ë*
pw16_Àn
;

1140 i‡(
	gEx∑ndSèã
->
	gw16_ex∑ndMuãFa˘‹
 =0 || 
BGN⁄ly
)

1143 
ö°
->
°©In°
.
ex∑ndedNoi£Sam∂es
 +*
pw16_Àn
;

1145 
	gö°
->
	ga˘ivôy_°©s
.
	gex∑nd_bgn_ßm∂es
 +*
pw16_Àn
;

1150 
	gö°
->
	g°©In°
.
	gex∑ndedVoi˚Sam∂es
 +*
pw16_Àn
;

1152 
	gö°
->
	ga˘ivôy_°©s
.
	gex∑nd_n‹mÆ_ßm∂es
 +*
pw16_Àn
;

1182 
WebRtcNëEQ_Gíî©eBGN
(
DSPIn°_t
 *
ö°
,

1183 #ifde‡
SCRATCH


1184 
öt16_t
 *
pw16_s¸©chPå
,

1186 
öt16_t
 *
pw16_outD©a
, i¡16_à
Àn
)

1189 
öt16_t
 
	gpos
 = 0;

1190 
öt16_t
 
	gãmpLí
 = 
Àn
;

1192 
	gãmpLí
 > 0)

1195 
WebRtcNëEQ_Ex∑nd
(
ö°
,

1196 #ifde‡
SCRATCH


1197 
pw16_s¸©chPå
,

1199 &
pw16_outD©a
[
pos
], &
ãmpLí
, 1 );

1201 
	gpos
 +
ãmpLí
;

1202 
	gãmpLí
 = 
Àn
 - 
pos
;

1205  
	gpos
;

1208 #unde‡
SCRATCH_PW16_BEST_CORR_INDEX


1209 #unde‡
SCRATCH_PW16_BEST_CORR


1210 #unde‡
SCRATCH_PW16_BEST_DIST_INDEX


1211 #unde‡
SCRATCH_PW16_BEST_DIST


1212 #unde‡
SCRATCH_PW16_CORR_VEC


1213 #unde‡
SCRATCH_PW16_CORR2


1214 #unde‡
SCRATCH_PW32_AUTO_CORR


1215 #unde‡
SCRATCH_PW16_RC


1216 #unde‡
SCRATCH_PW16_RAND_VEC


1217 #unde‡
SCRATCH_NETEQDSP_CORRELATOR


1218 #unde‡
SCRATCH_PW16_SCALED_RAND_VEC


1219 #unde‡
SCRATCH_PW16_UNVOICED_VEC_SPACE


	@filter_ar_fast_q12.c

10 
	~<as£π.h
>

12 
	~"sig«l_¥o˚ssög_libøry.h
"

16 
	$WebRtcS∂_FûãrARFa°Q12
(c⁄° 
öt16_t
* 
d©a_ö
,

17 
öt16_t
* 
d©a_out
,

18 c⁄° 
öt16_t
* 
__ª°ri˘
 
c€fficõ¡s
,

19 
c€fficõ¡s_Àngth
,

20 
d©a_Àngth
) {

21 
i
 = 0;

22 
j
 = 0;

24 
	`as£π
(
d©a_Àngth
 > 0);

25 
	`as£π
(
c€fficõ¡s_Àngth
 > 1);

27 
i
 = 0; i < 
d©a_Àngth
; i++) {

28 
öt32_t
 
ouçut
 = 0;

29 
öt32_t
 
sum
 = 0;

31 
j
 = 
c€fficõ¡s_Àngth
 - 1; j > 0; j--) {

32 
sum
 +
c€fficõ¡s
[
j
] * 
d©a_out
[
i
 - j];

35 
ouçut
 = 
c€fficõ¡s
[0] * 
d©a_ö
[
i
];

36 
ouçut
 -
sum
;

39 
ouçut
 = 
	`WEBRTC_SPL_SAT
(134215679, output, -134217728);

40 
d©a_out
[
i
] = (
öt16_t
)((
ouçut
 + 2048) >> 12);

42 
	}
}

	@filter_ma_fast_q12.c

18 
	~"sig«l_¥o˚ssög_libøry.h
"

20 
	$WebRtcS∂_FûãrMAFa°Q12
(
öt16_t
* 
ö_±r
,

21 
öt16_t
* 
out_±r
,

22 
öt16_t
* 
B
,

23 
öt16_t
 
B_Àngth
,

24 
öt16_t
 
Àngth
)

26 
öt32_t
 
o
;

27 
i
, 
j
;

28 
i
 = 0; i < 
Àngth
; i++)

30 c⁄° 
öt16_t
* 
b_±r
 = &
B
[0];

31 c⁄° 
öt16_t
* 
x_±r
 = &
ö_±r
[
i
];

33 
o
 = (
öt32_t
)0;

35 
j
 = 0; j < 
B_Àngth
; j++)

37 
o
 +
	`WEBRTC_SPL_MUL_16_16
(*
b_±r
++, *
x_±r
--);

44 
o
 = 
	`WEBRTC_SPL_SAT
((
öt32_t
)134215679, o, (int32_t)-134217728);

46 *
out_±r
++ = (
öt16_t
)((
o
 + (
öt32_t
)2048) >> 12);

49 
	}
}

	@g711.h

45 #i‡!
deföed
(
_G711_H_
)

46 
	#_G711_H_


	)

48 #ifde‡
__˝lu•lus


52 
	~"ty≥defs.h
"

54 #i‡
deföed
(
__i386__
)

58 
__ölöe__
 
t›_bô
(
bôs
) {

59 
ªs
;

61 
__asm__
 
__vﬁ©ûe__
(" movl $-1,%%edx;\n"

63 : "=d" (
ªs
)

64 : "a" (
bôs
));

65  
ªs
;

71 
__ölöe__
 
bŸtom_bô
(
bôs
) {

72 
ªs
;

74 
__asm__
 
__vﬁ©ûe__
(" movl $-1,%%edx;\n"

76 : "=d" (
ªs
)

77 : "a" (
bôs
));

78  
ªs
;

80 #ñi‡
deföed
(
__x86_64__
)

81 
__ölöe__
 
t›_bô
(
bôs
) {

82 
ªs
;

84 
__asm__
 
__vﬁ©ûe__
(" movq $-1,%%rdx;\n"

86 : "=d" (
ªs
)

87 : "a" (
bôs
));

88  
ªs
;

91 
__ölöe__
 
bŸtom_bô
(
bôs
) {

92 
ªs
;

94 
__asm__
 
__vﬁ©ûe__
(" movq $-1,%%rdx;\n"

96 : "=d" (
ªs
)

97 : "a" (
bôs
));

98  
ªs
;

101 
__ölöe
 
t›_bô
(
bôs
) {

102 
i
;

104 i‡(
bôs
 == 0) {

107 
i
 = 0;

108 i‡(
bôs
 & 0xFFFF0000) {

109 
bôs
 &= 0xFFFF0000;

110 
i
 += 16;

112 i‡(
bôs
 & 0xFF00FF00) {

113 
bôs
 &= 0xFF00FF00;

114 
i
 += 8;

116 i‡(
bôs
 & 0xF0F0F0F0) {

117 
bôs
 &= 0xF0F0F0F0;

118 
i
 += 4;

120 i‡(
bôs
 & 0xCCCCCCCC) {

121 
bôs
 &= 0xCCCCCCCC;

122 
i
 += 2;

124 i‡(
bôs
 & 0xAAAAAAAA) {

125 
bôs
 &= 0xAAAAAAAA;

126 
i
 += 1;

128  
i
;

131 
__ölöe
 
bŸtom_bô
(
bôs
) {

132 
i
;

134 i‡(
bôs
 == 0) {

137 
i
 = 32;

138 i‡(
bôs
 & 0x0000FFFF) {

139 
bôs
 &= 0x0000FFFF;

140 
i
 -= 16;

142 i‡(
bôs
 & 0x00FF00FF) {

143 
bôs
 &= 0x00FF00FF;

144 
i
 -= 8;

146 i‡(
bôs
 & 0x0F0F0F0F) {

147 
bôs
 &= 0x0F0F0F0F;

148 
i
 -= 4;

150 i‡(
bôs
 & 0x33333333) {

151 
bôs
 &= 0x33333333;

152 
i
 -= 2;

154 i‡(
bôs
 & 0x55555555) {

155 
bôs
 &= 0x55555555;

156 
i
 -= 1;

158  
i
;

200 
	#ULAW_BIAS
 0x84

	)

206 
__ölöe
 
uöt8_t
 
löór_to_uœw
(
löór
) {

207 
uöt8_t
 
u_vÆ
;

208 
mask
;

209 
£g
;

212 i‡(
löór
 < 0) {

214 
löór
 = 
ULAW_BIAS
 -Üinear - 1;

215 
mask
 = 0x7F;

217 
löór
 = 
ULAW_BIAS
 +Üinear;

218 
mask
 = 0xFF;

221 
£g
 = 
t›_bô
(
löór
 | 0xFF) - 7;

227 i‡(
£g
 >= 8)

228 
u_vÆ
 = (
uöt8_t
)(0x7F ^ 
mask
);

230 
u_vÆ
 = (
uöt8_t
)(((
£g
 << 4Ë| ((
löór
 >> (£g + 3)Ë& 0xF)Ë^ 
mask
);

231 #ifde‡
ULAW_ZEROTRAP


233 i‡(
u_vÆ
 == 0)

234 
u_vÆ
 = 0x02;

236  
u_vÆ
;

243 
__ölöe
 
öt16_t
 
uœw_to_löór
(
uöt8_t
 
uœw
) {

244 
t
;

247 
uœw
 = ~ulaw;

252 
t
 = (((
uœw
 & 0x0FË<< 3Ë+ 
ULAW_BIAS
) << ((() ulaw & 0x70) >> 4);

253  (
öt16_t
)((
uœw
 & 0x80Ë? (
ULAW_BIAS
 - 
t
) : (t - ULAW_BIAS));

274 
	#ALAW_AMI_MASK
 0x55

	)

280 
__ölöe
 
uöt8_t
 
löór_to_Æaw
(
löór
) {

281 
mask
;

282 
£g
;

284 i‡(
löór
 >= 0) {

286 
mask
 = 
ALAW_AMI_MASK
 | 0x80;

289 
mask
 = 
ALAW_AMI_MASK
;

292 
löór
 = -linear - 1;

296 
£g
 = 
t›_bô
(
löór
 | 0xFF) - 7;

297 i‡(
£g
 >= 8) {

298 i‡(
löór
 >= 0) {

300  (
uöt8_t
)(0x7F ^ 
mask
);

303  (
uöt8_t
)(0x00 ^ 
mask
);

306  (
uöt8_t
)(((
£g
 << 4Ë| ((
löór
 >> ((seg) ? (seg + 3) : 4)) & 0x0F)) ^

307 
mask
);

314 
__ölöe
 
öt16_t
 
Æaw_to_löór
(
uöt8_t
 
Æaw
) {

315 
i
;

316 
£g
;

318 
Æaw
 ^
ALAW_AMI_MASK
;

319 
i
 = ((
Æaw
 & 0x0F) << 4);

320 
£g
 = (((Ë
Æaw
 & 0x70) >> 4);

321 i‡(
£g
)

322 
i
 = (ò+ 0x108Ë<< (
£g
 - 1);

324 
i
 += 8;

325  (
öt16_t
)((
Æaw
 & 0x80Ë? 
i
 : -i);

332 
uöt8_t
 
Æaw_to_uœw
(uöt8_à
Æaw
);

338 
uöt8_t
 
uœw_to_Æaw
(uöt8_à
uœw
);

340 #ifde‡
__˝lu•lus


	@g711_interface.c

10 
	~<°rög.h
>

11 
	~"g711.h
"

12 
	~"g711_öãrÁ˚.h
"

13 
	~"ty≥defs.h
"

15 
öt16_t
 
	$WebRtcG711_EncodeA
(* 
°©e
,

16 
öt16_t
* 
•ìchIn
,

17 
öt16_t
 
Àn
,

18 
öt16_t
* 
ícoded
) {

19 
n
;

20 
uöt16_t
 
ãmpVÆ
, 
ãmpVÆ2
;

23 ()(
°©e
 = 
NULL
);

26 i‡(
Àn
 < 0) {

31 
n
 = 0;Ç < 
Àn
;Ç++) {

32 
ãmpVÆ
 = (
uöt16_t
Ë
	`löór_to_Æaw
(
•ìchIn
[
n
]);

34 #ifde‡
WEBRTC_BIG_ENDIAN


35 i‡((
n
 & 0x1) == 1) {

36 
ícoded
[
n
 >> 1] |((
uöt16_t
Ë
ãmpVÆ
);

38 
ícoded
[
n
 >> 1] = ((
uöt16_t
Ë
ãmpVÆ
) << 8;

41 i‡((
n
 & 0x1) == 1) {

42 
ãmpVÆ2
 |((
uöt16_t
Ë
ãmpVÆ
) << 8;

43 
ícoded
[
n
 >> 1] |((
uöt16_t
Ë
ãmpVÆ
) << 8;

45 
ãmpVÆ2
 = ((
uöt16_t
Ë
ãmpVÆ
);

46 
ícoded
[
n
 >> 1] = ((
uöt16_t
Ë
ãmpVÆ
);

50  (
Àn
);

51 
	}
}

53 
öt16_t
 
	$WebRtcG711_EncodeU
(* 
°©e
,

54 
öt16_t
* 
•ìchIn
,

55 
öt16_t
 
Àn
,

56 
öt16_t
* 
ícoded
) {

57 
n
;

58 
uöt16_t
 
ãmpVÆ
;

61 ()(
°©e
 = 
NULL
);

64 i‡(
Àn
 < 0) {

69 
n
 = 0;Ç < 
Àn
;Ç++) {

70 
ãmpVÆ
 = (
uöt16_t
Ë
	`löór_to_uœw
(
•ìchIn
[
n
]);

72 #ifde‡
WEBRTC_BIG_ENDIAN


73 i‡((
n
 & 0x1) == 1) {

74 
ícoded
[
n
 >> 1] |((
uöt16_t
Ë
ãmpVÆ
);

76 
ícoded
[
n
 >> 1] = ((
uöt16_t
Ë
ãmpVÆ
) << 8;

79 i‡((
n
 & 0x1) == 1) {

80 
ícoded
[
n
 >> 1] |((
uöt16_t
Ë
ãmpVÆ
) << 8;

82 
ícoded
[
n
 >> 1] = ((
uöt16_t
Ë
ãmpVÆ
);

86  (
Àn
);

87 
	}
}

89 
öt16_t
 
	$WebRtcG711_DecodeA
(* 
°©e
,

90 
öt16_t
* 
ícoded
,

91 
öt16_t
 
Àn
,

92 
öt16_t
* 
decoded
,

93 
öt16_t
* 
•ìchTy≥
) {

94 
n
;

95 
uöt16_t
 
ãmpVÆ
;

98 ()(
°©e
 = 
NULL
);

101 i‡(
Àn
 < 0) {

105 
n
 = 0;Ç < 
Àn
;Ç++) {

106 #ifde‡
WEBRTC_BIG_ENDIAN


107 i‡((
n
 & 0x1) == 1) {

108 
ãmpVÆ
 = ((
uöt16_t
Ë
ícoded
[
n
 >> 1] & 0xFF);

110 
ãmpVÆ
 = ((
uöt16_t
Ë
ícoded
[
n
 >> 1] >> 8);

113 i‡((
n
 & 0x1) == 1) {

114 
ãmpVÆ
 = (
ícoded
[
n
 >> 1] >> 8);

116 
ãmpVÆ
 = (
ícoded
[
n
 >> 1] & 0xFF);

119 
decoded
[
n
] = (
öt16_t
Ë
	`Æaw_to_löór
(
ãmpVÆ
);

122 *
•ìchTy≥
 = 1;

123  (
Àn
);

124 
	}
}

126 
öt16_t
 
	$WebRtcG711_DecodeU
(* 
°©e
,

127 
öt16_t
* 
ícoded
,

128 
öt16_t
 
Àn
,

129 
öt16_t
* 
decoded
,

130 
öt16_t
* 
•ìchTy≥
) {

131 
n
;

132 
uöt16_t
 
ãmpVÆ
;

135 ()(
°©e
 = 
NULL
);

138 i‡(
Àn
 < 0) {

142 
n
 = 0;Ç < 
Àn
;Ç++) {

143 #ifde‡
WEBRTC_BIG_ENDIAN


144 i‡((
n
 & 0x1) == 1) {

145 
ãmpVÆ
 = ((
uöt16_t
Ë
ícoded
[
n
 >> 1] & 0xFF);

147 
ãmpVÆ
 = ((
uöt16_t
Ë
ícoded
[
n
 >> 1] >> 8);

150 i‡((
n
 & 0x1) == 1) {

151 
ãmpVÆ
 = (
ícoded
[
n
 >> 1] >> 8);

153 
ãmpVÆ
 = (
ícoded
[
n
 >> 1] & 0xFF);

156 
decoded
[
n
] = (
öt16_t
Ë
	`uœw_to_löór
(
ãmpVÆ
);

159 *
•ìchTy≥
 = 1;

160  (
Àn
);

161 
	}
}

163 
	$WebRtcG711_Duøti⁄E°
(* 
°©e
,

164 c⁄° 
uöt8_t
* 
∑ylﬂd
,

165 
∑ylﬂd_Àngth_byãs
) {

166 (Ë
°©e
;

167 (Ë
∑ylﬂd
;

169  
∑ylﬂd_Àngth_byãs
;

170 
	}
}

172 
öt16_t
 
	$WebRtcG711_Vîsi⁄
(* 
vîsi⁄
, 
öt16_t
 
ÀnByãs
) {

173 
	`°∫˝y
(
vîsi⁄
, "2.0.0", 
ÀnByãs
);

175 
	}
}

	@g711_interface.h

11 #i‚de‡
MODULES_AUDIO_CODING_CODECS_G711_MAIN_INTERFACE_G711_INTERFACE_H_


12 
	#MODULES_AUDIO_CODING_CODECS_G711_MAIN_INTERFACE_G711_INTERFACE_H_


	)

14 
	~"ty≥defs.h
"

17 
	#G711_WEBRTC_SPEECH
 1

	)

18 
	#G711_WEBRTC_CNG
 2

	)

20 #ifde‡
__˝lu•lus


43 
öt16_t
 
WebRtcG711_EncodeA
(* 
°©e
,

44 
öt16_t
* 
•ìchIn
,

45 
öt16_t
 
Àn
,

46 
öt16_t
* 
ícoded
);

67 
öt16_t
 
WebRtcG711_EncodeU
(* 
°©e
,

68 
öt16_t
* 
•ìchIn
,

69 
öt16_t
 
Àn
,

70 
öt16_t
* 
ícoded
);

93 
öt16_t
 
WebRtcG711_DecodeA
(* 
°©e
,

94 
öt16_t
* 
ícoded
,

95 
öt16_t
 
Àn
,

96 
öt16_t
* 
decoded
,

97 
öt16_t
* 
•ìchTy≥
);

120 
öt16_t
 
WebRtcG711_DecodeU
(* 
°©e
,

121 
öt16_t
* 
ícoded
,

122 
öt16_t
 
Àn
,

123 
öt16_t
* 
decoded
,

124 
öt16_t
* 
•ìchTy≥
);

142 
WebRtcG711_Duøti⁄E°
(* 
°©e
,

143 c⁄° 
uöt8_t
* 
∑ylﬂd
,

144 
∑ylﬂd_Àngth_byãs
);

161 
öt16_t
 
WebRtcG711_Vîsi⁄
(* 
vîsi⁄
, i¡16_à
ÀnByãs
);

163 #ifde‡
__˝lu•lus


	@g722_decode.c

33 #ifde‡
HAVE_CONFIG_H


34 
	~<c⁄fig.h
>

37 
	~<°dio.h
>

38 
	~<mem‹y.h
>

39 
	~<°dlib.h
>

41 
	~"ty≥defs.h
"

42 
	~"g722_íc_dec.h
"

45 #i‡!
deföed
(
FALSE
)

46 
	#FALSE
 0

	)

48 #i‡!
deföed
(
TRUE
)

49 
	#TRUE
 (!
FALSE
)

	)

52 
__ölöe
 
öt16_t
 
	$ßtuøã
(
öt32_t
 
amp
)

54 
öt16_t
 
amp16
;

57 
amp16
 = (
öt16_t
Ë
amp
;

58 i‡(
amp
 =
amp16
)

59  
amp16
;

60 i‡(
amp
 > 
WEBRTC_INT16_MAX
)

61  
WEBRTC_INT16_MAX
;

62  
WEBRTC_INT16_MIN
;

63 
	}
}

66 
block4
(
g722_decode_°©e_t
 *
s
, 
b™d
, 
d
);

68 
	$block4
(
g722_decode_°©e_t
 *
s
, 
b™d
, 
d
)

70 
wd1
;

71 
wd2
;

72 
wd3
;

73 
i
;

76 
s
->
b™d
[b™d].
d
[0] = d;

77 
s
->
b™d
[b™d].
r
[0] = 
	`ßtuøã
(s->b™d[b™d].†+ 
d
);

80 
s
->
b™d
[b™d].
p
[0] = 
	`ßtuøã
(s->b™d[b™d].
sz
 + 
d
);

83 
i
 = 0; i < 3; i++)

84 
s
->
b™d
[b™d].
sg
[
i
] = s->b™d[b™d].
p
[i] >> 15;

85 
wd1
 = 
	`ßtuøã
(
s
->
b™d
[b™d].
a
[1] << 2);

87 
wd2
 = (
s
->
b™d
[b™d].
sg
[0] =s->b™d[b™d].sg[1]Ë? -
wd1
 : wd1;

88 i‡(
wd2
 > 32767)

89 
wd2
 = 32767;

90 
wd3
 = (
s
->
b™d
[b™d].
sg
[0] == s->band[band].sg[2]) ? 128 : -128;

91 
wd3
 +(
wd2
 >> 7);

92 
wd3
 +(
s
->
b™d
[b™d].
a
[2]*32512) >> 15;

93 i‡(
wd3
 > 12288)

94 
wd3
 = 12288;

95 i‡(
wd3
 < -12288)

96 
wd3
 = -12288;

97 
s
->
b™d
[b™d].
≠
[2] = 
wd3
;

100 
s
->
b™d
[b™d].
sg
[0] = s->b™d[b™d].
p
[0] >> 15;

101 
s
->
b™d
[b™d].
sg
[1] = s->b™d[b™d].
p
[1] >> 15;

102 
wd1
 = (
s
->
b™d
[b™d].
sg
[0] == s->band[band].sg[1]) ? 192 : -192;

103 
wd2
 = (
s
->
b™d
[b™d].
a
[1]*32640) >> 15;

105 
s
->
b™d
[b™d].
≠
[1] = 
	`ßtuøã
(
wd1
 + 
wd2
);

106 
wd3
 = 
	`ßtuøã
(15360 - 
s
->
b™d
[b™d].
≠
[2]);

107 i‡(
s
->
b™d
[b™d].
≠
[1] > 
wd3
)

108 
s
->
b™d
[b™d].
≠
[1] = 
wd3
;

109 i‡(
s
->
b™d
[b™d].
≠
[1] < -
wd3
)

110 
s
->
b™d
[b™d].
≠
[1] = -
wd3
;

113 
wd1
 = (
d
 == 0) ? 0 : 128;

114 
s
->
b™d
[b™d].
sg
[0] = 
d
 >> 15;

115 
i
 = 1; i < 7; i++)

117 
s
->
b™d
[b™d].
sg
[
i
] = s->b™d[b™d].
d
[i] >> 15;

118 
wd2
 = (
s
->
b™d
[b™d].
sg
[
i
] =s->b™d[b™d].sg[0]Ë? 
wd1
 : -wd1;

119 
wd3
 = (
s
->
b™d
[b™d].
b
[
i
]*32640) >> 15;

120 
s
->
b™d
[b™d].
bp
[
i
] = 
	`ßtuøã
(
wd2
 + 
wd3
);

124 
i
 = 6; i > 0; i--)

126 
s
->
b™d
[b™d].
d
[
i
] = s->band[band].d[i - 1];

127 
s
->
b™d
[b™d].
b
[
i
] = s->b™d[b™d].
bp
[i];

130 
i
 = 2; i > 0; i--)

132 
s
->
b™d
[b™d].
r
[
i
] = s->band[band].r[i - 1];

133 
s
->
b™d
[b™d].
p
[
i
] = s->band[band].p[i - 1];

134 
s
->
b™d
[b™d].
a
[
i
] = s->b™d[b™d].
≠
[i];

138 
wd1
 = 
	`ßtuøã
(
s
->
b™d
[b™d].
r
[1] + s->band[band].r[1]);

139 
wd1
 = (
s
->
b™d
[b™d].
a
[1]*wd1) >> 15;

140 
wd2
 = 
	`ßtuøã
(
s
->
b™d
[b™d].
r
[2] + s->band[band].r[2]);

141 
wd2
 = (
s
->
b™d
[b™d].
a
[2]*wd2) >> 15;

142 
s
->
b™d
[b™d].
•
 = 
	`ßtuøã
(
wd1
 + 
wd2
);

145 
s
->
b™d
[b™d].
sz
 = 0;

146 
i
 = 6; i > 0; i--)

148 
wd1
 = 
	`ßtuøã
(
s
->
b™d
[b™d].
d
[
i
] + s->band[band].d[i]);

149 
s
->
b™d
[b™d].
sz
 +(s->b™d[b™d].
b
[
i
]*
wd1
) >> 15;

151 
s
->
b™d
[b™d].
sz
 = 
	`ßtuøã
(s->band[band].sz);

154 
s
->
b™d
[b™d].†
	`ßtuøã
(s->b™d[b™d].
•
 + s->b™d[b™d].
sz
);

155 
	}
}

158 
g722_decode_°©e_t
 *
	$WebRtc_g722_decode_öô
(
g722_decode_°©e_t
 *
s
,

159 
øã
,

160 
›ti⁄s
)

162 i‡(
s
 =
NULL
)

164 i‡((
s
 = (
g722_decode_°©e_t
 *Ë
	`mÆloc
((*s))Ë=
NULL
)

165  
NULL
;

167 
	`mem£t
(
s
, 0, (*s));

168 i‡(
øã
 == 48000)

169 
s
->
bôs_≥r_ßm∂e
 = 6;

170 i‡(
øã
 == 56000)

171 
s
->
bôs_≥r_ßm∂e
 = 7;

173 
s
->
bôs_≥r_ßm∂e
 = 8;

174 i‡((
›ti⁄s
 & 
G722_SAMPLE_RATE_8000
))

175 
s
->
eight_k
 = 
TRUE
;

176 i‡((
›ti⁄s
 & 
G722_PACKED
Ë&& 
s
->
bôs_≥r_ßm∂e
 != 8)

177 
s
->
∑cked
 = 
TRUE
;

179 
s
->
∑cked
 = 
FALSE
;

180 
s
->
b™d
[0].
dë
 = 32;

181 
s
->
b™d
[1].
dë
 = 8;

182  
s
;

183 
	}
}

186 
	$WebRtc_g722_decode_ªÀa£
(
g722_decode_°©e_t
 *
s
)

188 
	`‰ì
(
s
);

190 
	}
}

193 
	$WebRtc_g722_decode
(
g722_decode_°©e_t
 *
s
, 
öt16_t
 
amp
[],

194 c⁄° 
uöt8_t
 
g722_d©a
[], 
Àn
)

196 c⁄° 
wl
[8] = {-60, -30, 58, 172, 334, 538, 1198, 3042 };

197 c⁄° 
æ42
[16] = {0, 7, 6, 5, 4, 3, 2, 1,

199 c⁄° 
ûb
[32] =

207 c⁄° 
wh
[3] = {0, -214, 798};

208 c⁄° 
rh2
[4] = {2, 1, 2, 1};

209 c⁄° 
qm2
[4] = {-7408, -1616, 7408, 1616};

210 c⁄° 
qm4
[16] =

217 c⁄° 
qm5
[32] =

228 c⁄° 
qm6
[64] =

247 c⁄° 
qmf_c€ffs
[12] =

252 
dlowt
;

253 
æow
;

254 
ihigh
;

255 
dhigh
;

256 
rhigh
;

257 
xout1
;

258 
xout2
;

259 
wd1
;

260 
wd2
;

261 
wd3
;

262 
code
;

263 
ouéí
;

264 
i
;

265 
j
;

267 
ouéí
 = 0;

268 
rhigh
 = 0;

269 
j
 = 0; j < 
Àn
; )

271 i‡(
s
->
∑cked
)

274 i‡(
s
->
ö_bôs
 < s->
bôs_≥r_ßm∂e
)

276 
s
->
ö_buf„r
 |(
g722_d©a
[
j
++] << s->
ö_bôs
);

277 
s
->
ö_bôs
 += 8;

279 
code
 = 
s
->
ö_buf„r
 & ((1 << s->
bôs_≥r_ßm∂e
) - 1);

280 
s
->
ö_buf„r
 >>s->
bôs_≥r_ßm∂e
;

281 
s
->
ö_bôs
 -s->
bôs_≥r_ßm∂e
;

285 
code
 = 
g722_d©a
[
j
++];

288 
s
->
bôs_≥r_ßm∂e
)

292 
wd1
 = 
code
 & 0x3F;

293 
ihigh
 = (
code
 >> 6) & 0x03;

294 
wd2
 = 
qm6
[
wd1
];

295 
wd1
 >>= 2;

298 
wd1
 = 
code
 & 0x1F;

299 
ihigh
 = (
code
 >> 5) & 0x03;

300 
wd2
 = 
qm5
[
wd1
];

301 
wd1
 >>= 1;

304 
wd1
 = 
code
 & 0x0F;

305 
ihigh
 = (
code
 >> 4) & 0x03;

306 
wd2
 = 
qm4
[
wd1
];

310 
wd2
 = (
s
->
b™d
[0].
dë
*wd2) >> 15;

312 
æow
 = 
s
->
b™d
[0].†+ 
wd2
;

314 i‡(
æow
 > 16383)

315 
æow
 = 16383;

316 i‡(
æow
 < -16384)

317 
æow
 = -16384;

320 
wd2
 = 
qm4
[
wd1
];

321 
dlowt
 = (
s
->
b™d
[0].
dë
*
wd2
) >> 15;

324 
wd2
 = 
æ42
[
wd1
];

325 
wd1
 = (
s
->
b™d
[0].
nb
*127) >> 7;

326 
wd1
 +
wl
[
wd2
];

327 i‡(
wd1
 < 0)

328 
wd1
 = 0;

329 i‡(
wd1
 > 18432)

330 
wd1
 = 18432;

331 
s
->
b™d
[0].
nb
 = 
wd1
;

334 
wd1
 = (
s
->
b™d
[0].
nb
 >> 6) & 31;

335 
wd2
 = 8 - (
s
->
b™d
[0].
nb
 >> 11);

336 
wd3
 = (
wd2
 < 0Ë? (
ûb
[
wd1
] << -wd2) : (ilb[wd1] >> wd2);

337 
s
->
b™d
[0].
dë
 = 
wd3
 << 2;

339 
	`block4
(
s
, 0, 
dlowt
);

341 i‡(!
s
->
eight_k
)

344 
wd2
 = 
qm2
[
ihigh
];

345 
dhigh
 = (
s
->
b™d
[1].
dë
*
wd2
) >> 15;

347 
rhigh
 = 
dhigh
 + 
s
->
b™d
[1].s;

349 i‡(
rhigh
 > 16383)

350 
rhigh
 = 16383;

351 i‡(
rhigh
 < -16384)

352 
rhigh
 = -16384;

355 
wd2
 = 
rh2
[
ihigh
];

356 
wd1
 = (
s
->
b™d
[1].
nb
*127) >> 7;

357 
wd1
 +
wh
[
wd2
];

358 i‡(
wd1
 < 0)

359 
wd1
 = 0;

360 i‡(
wd1
 > 22528)

361 
wd1
 = 22528;

362 
s
->
b™d
[1].
nb
 = 
wd1
;

365 
wd1
 = (
s
->
b™d
[1].
nb
 >> 6) & 31;

366 
wd2
 = 10 - (
s
->
b™d
[1].
nb
 >> 11);

367 
wd3
 = (
wd2
 < 0Ë? (
ûb
[
wd1
] << -wd2) : (ilb[wd1] >> wd2);

368 
s
->
b™d
[1].
dë
 = 
wd3
 << 2;

370 
	`block4
(
s
, 1, 
dhigh
);

373 i‡(
s
->
ôu_ã°_mode
)

375 
amp
[
ouéí
++] = (
öt16_t
Ë(
æow
 << 1);

376 
amp
[
ouéí
++] = (
öt16_t
Ë(
rhigh
 << 1);

380 i‡(
s
->
eight_k
)

382 
amp
[
ouéí
++] = (
öt16_t
Ë(
æow
 << 1);

387 
i
 = 0; i < 22; i++)

388 
s
->
x
[
i
] = s->x[i + 2];

389 
s
->
x
[22] = 
æow
 + 
rhigh
;

390 
s
->
x
[23] = 
æow
 - 
rhigh
;

392 
xout1
 = 0;

393 
xout2
 = 0;

394 
i
 = 0; i < 12; i++)

396 
xout2
 +
s
->
x
[2*
i
]*
qmf_c€ffs
[i];

397 
xout1
 +
s
->
x
[2*
i
 + 1]*
qmf_c€ffs
[11 - i];

402 
amp
[
ouéí
++] = 
	`ßtuøã
(
xout1
 >> 11);

403 
amp
[
ouéí
++] = 
	`ßtuøã
(
xout2
 >> 11);

408  
ouéí
;

409 
	}
}

	@g722_enc_dec.h

31 #i‡!
deföed
(
_G722_ENC_DEC_H_
)

32 
	#_G722_ENC_DEC_H_


	)

47 
	#WEBRTC_INT16_MAX
 32767

	)

48 
	#WEBRTC_INT16_MIN
 -32768

	)

52 
	mG722_SAMPLE_RATE_8000
 = 0x0001,

53 
	mG722_PACKED
 = 0x0002

60 
	môu_ã°_mode
;

62 
	m∑cked
;

64 
	meight_k
;

66 
	mbôs_≥r_ßm∂e
;

69 
	mx
[24];

73 
	ms
;

74 
	m•
;

75 
	msz
;

76 
	mr
[3];

77 
	ma
[3];

78 
	m≠
[3];

79 
	mp
[3];

80 
	md
[7];

81 
	mb
[7];

82 
	mbp
[7];

83 
	msg
[7];

84 
	mnb
;

85 
	mdë
;

86 } 
	mb™d
[2];

88 
	mö_buf„r
;

89 
	mö_bôs
;

90 
	mout_buf„r
;

91 
	mout_bôs
;

92 } 
	tg722_ícode_°©e_t
;

98 
	môu_ã°_mode
;

100 
	m∑cked
;

102 
	meight_k
;

104 
	mbôs_≥r_ßm∂e
;

107 
	mx
[24];

111 
	ms
;

112 
	m•
;

113 
	msz
;

114 
	mr
[3];

115 
	ma
[3];

116 
	m≠
[3];

117 
	mp
[3];

118 
	md
[7];

119 
	mb
[7];

120 
	mbp
[7];

121 
	msg
[7];

122 
	mnb
;

123 
	mdë
;

124 } 
	mb™d
[2];

126 
	mö_buf„r
;

127 
	mö_bôs
;

128 
	mout_buf„r
;

129 
	mout_bôs
;

130 } 
	tg722_decode_°©e_t
;

132 #ifde‡
__˝lu•lus


136 
g722_ícode_°©e_t
 *
WebRtc_g722_ícode_öô
(g722_ícode_°©e_à*
s
,

137 
øã
,

138 
›ti⁄s
);

139 
WebRtc_g722_ícode_ªÀa£
(
g722_ícode_°©e_t
 *
s
);

140 
WebRtc_g722_ícode
(
g722_ícode_°©e_t
 *
s
,

141 
uöt8_t
 
g722_d©a
[],

142 c⁄° 
öt16_t
 
amp
[],

143 
Àn
);

145 
g722_decode_°©e_t
 *
WebRtc_g722_decode_öô
(g722_decode_°©e_à*
s
,

146 
øã
,

147 
›ti⁄s
);

148 
WebRtc_g722_decode_ªÀa£
(
g722_decode_°©e_t
 *
s
);

149 
WebRtc_g722_decode
(
g722_decode_°©e_t
 *
s
,

150 
öt16_t
 
amp
[],

151 c⁄° 
uöt8_t
 
g722_d©a
[],

152 
Àn
);

154 #ifde‡
__˝lu•lus


	@g722_interface.c

13 
	~<°dlib.h
>

14 
	~<°rög.h
>

15 
	~"g722_öãrÁ˚.h
"

16 
	~"ty≥defs.h
"

18 #i‚de‡
_USE_FS_CODECS_


19 
	~"g722_íc_dec.h
"

22 
öt16_t
 
	$WebRtcG722_Cª©eEncodî
(
G722EncIn°
 **
G722íc_ö°
)

25 
	}
}

27 
öt16_t
 
	$WebRtcG722_EncodîInô
(
G722EncIn°
 *
G722íc_ö°
)

30 
	}
}

32 
öt16_t
 
	$WebRtcG722_FªeEncodî
(
G722EncIn°
 *
G722íc_ö°
)

36 
	}
}

38 
öt16_t
 
	$WebRtcG722_Encode
(
G722EncIn°
 *
G722íc_ö°
,

39 
öt16_t
 *
•ìchIn
,

40 
öt16_t
 
Àn
,

41 
öt16_t
 *
ícoded
)

44 
	}
}

46 
öt16_t
 
	$WebRtcG722_Cª©eDecodî
(
G722DecIn°
 **
G722dec_ö°
)

48 #ifde‡
_USE_FS_CODECS_


52 *
G722dec_ö°
=(
G722DecIn°
*)
	`mÆloc
((
g722_decode_°©e_t
));

53 i‡(*
G722dec_ö°
!=
NULL
) {

59 
	}
}

61 #ifde‡
_USE_FS_CODECS_


62 
öt16_t
 
	$WebRtcG722_AssignDecodî
(
G722DecIn°
 **
G722dec_ö°
, 
g722_decode_°©e_t
 *
decodî
)

64 *
G722dec_ö°
 = (
G722DecIn°
 *)
decodî
;

66 
	}
}

69 
öt16_t
 
	$WebRtcG722_DecodîInô
(
G722DecIn°
 *
G722dec_ö°
)

73 #ifde‡
_USE_FS_CODECS_


74 
G722dec_ö°
 = (
G722DecIn°
 *Ë
	`g722_decode_öô
(

75 (
g722_decode_°©e_t
*Ë
G722dec_ö°
, 64000, 2);

77 
G722dec_ö°
 = (
G722DecIn°
 *Ë
	`WebRtc_g722_decode_öô
(

78 (
g722_decode_°©e_t
*Ë
G722dec_ö°
, 64000, 2);

80 i‡(
G722dec_ö°
 =
NULL
) {

85 
	}
}

87 
öt16_t
 
	$WebRtcG722_FªeDecodî
(
G722DecIn°
 *
G722dec_ö°
)

90 
	}
}

92 
öt16_t
 
	$WebRtcG722_Decode
(
G722DecIn°
 *
G722dec_ö°
,

93 
öt16_t
 *
ícoded
,

94 
öt16_t
 
Àn
,

95 
öt16_t
 *
decoded
,

96 
öt16_t
 *
•ìchTy≥
)

99 *
•ìchTy≥
=
G722_WEBRTC_SPEECH
;

100 #ifde‡
_USE_FS_CODECS_


101  
	`g722_decode
((
g722_decode_°©e_t
*Ë
G722dec_ö°
,

102 
decoded
, (
uöt8_t
*Ë
ícoded
, 
Àn
);

104  
	`WebRtc_g722_decode
((
g722_decode_°©e_t
*Ë
G722dec_ö°
,

105 
decoded
, (
uöt8_t
*Ë
ícoded
, 
Àn
);

107 
	}
}

109 
öt16_t
 
	$WebRtcG722_Vîsi⁄
(*
vîsi⁄Så
, 
Àn
)

112 
vîsi⁄
[30] = "2.0.0\n";

113 i‡(
	`°æí
(
vîsi⁄
Ë< ()
Àn
)

115 
	`°r˝y
(
vîsi⁄Så
, 
vîsi⁄
);

122 
	}
}

	@g722_interface.h

11 #i‚de‡
MODULES_AUDIO_CODING_CODECS_G722_MAIN_INTERFACE_G722_INTERFACE_H_


12 
	#MODULES_AUDIO_CODING_CODECS_G722_MAIN_INTERFACE_G722_INTERFACE_H_


	)

14 
	~"ty≥defs.h
"

15 #ifde‡
_USE_FS_CODECS_


16 
	~"•™d•/ãÀph⁄y.h
"

17 
	~"•™d•/g722.h
"

24 
WebRtcG722EncIn°
 
	tG722EncIn°
;

25 
WebRtcG722DecIn°
 
	tG722DecIn°
;

31 
	#G722_WEBRTC_SPEECH
 1

	)

32 
	#G722_WEBRTC_CNG
 2

	)

34 #ifde‡
__˝lu•lus


50 
öt16_t
 
WebRtcG722_Cª©eEncodî
(
G722EncIn°
 **
G722íc_ö°
);

66 
öt16_t
 
WebRtcG722_EncodîInô
(
G722EncIn°
 *
G722íc_ö°
);

80 
öt16_t
 
WebRtcG722_FªeEncodî
(
G722EncIn°
 *
G722íc_ö°
);

102 
öt16_t
 
WebRtcG722_Encode
(
G722EncIn°
 *
G722íc_ö°
,

103 
öt16_t
 *
•ìchIn
,

104 
öt16_t
 
Àn
,

105 
öt16_t
 *
ícoded
);

119 
öt16_t
 
WebRtcG722_Cª©eDecodî
(
G722DecIn°
 **
G722dec_ö°
);

121 #ifde‡
_USE_FS_CODECS_


134 
öt16_t
 
WebRtcG722_AssignDecodî
(
G722DecIn°
 **
G722dec_ö°
, 
g722_decode_°©e_t
 *
decodî
);

150 
öt16_t
 
WebRtcG722_DecodîInô
(
G722DecIn°
 *
G722dec_ö°
);

165 
öt16_t
 
WebRtcG722_FªeDecodî
(
G722DecIn°
 *
G722dec_ö°
);

189 
öt16_t
 
WebRtcG722_Decode
(
G722DecIn°
 *
G722dec_ö°
,

190 
öt16_t
 *
ícoded
,

191 
öt16_t
 
Àn
,

192 
öt16_t
 *
decoded
,

193 
öt16_t
 *
•ìchTy≥
);

201 
öt16_t
 
WebRtcG722_Vîsi⁄
(*
vîsi⁄Så
, 
Àn
);

204 #ifde‡
__˝lu•lus


	@ilbc_specific_functions.c

22 
	~"sig«l_¥o˚ssög_libøry.h
"

24 
	$WebRtcS∂_Revî£OrdîMu…AºayEÀmíts
(
öt16_t
 *
out
, c⁄° i¡16_à*
ö
,

25 c⁄° 
öt16_t
 *
wö
,

26 
öt16_t
 
ve˘‹_Àngth
,

27 
öt16_t
 
right_shi·s
)

29 
i
;

30 
öt16_t
 *
ouçå
 = 
out
;

31 c⁄° 
öt16_t
 *
ö±r
 = 
ö
;

32 c⁄° 
öt16_t
 *
wö±r
 = 
wö
;

33 
i
 = 0; i < 
ve˘‹_Àngth
; i++)

35 (*
ouçå
++Ë(
öt16_t
)
	`WEBRTC_SPL_MUL_16_16_RSFT
(*
ö±r
++,

36 *
wö±r
--, 
right_shi·s
);

38 
	}
}

40 
	$WebRtcS∂_EÀmítwi£Ve˘‹Mu…
(
öt16_t
 *
out
, c⁄° i¡16_à*
ö
,

41 c⁄° 
öt16_t
 *
wö
, i¡16_à
ve˘‹_Àngth
,

42 
öt16_t
 
right_shi·s
)

44 
i
;

45 
öt16_t
 *
ouçå
 = 
out
;

46 c⁄° 
öt16_t
 *
ö±r
 = 
ö
;

47 c⁄° 
öt16_t
 *
wö±r
 = 
wö
;

48 
i
 = 0; i < 
ve˘‹_Àngth
; i++)

50 (*
ouçå
++Ë(
öt16_t
)
	`WEBRTC_SPL_MUL_16_16_RSFT
(*
ö±r
++,

51 *
wö±r
++, 
right_shi·s
);

53 
	}
}

55 
	$WebRtcS∂_AddVe˘‹sAndShi·
(
öt16_t
 *
out
, c⁄° i¡16_à*
ö1
,

56 c⁄° 
öt16_t
 *
ö2
, i¡16_à
ve˘‹_Àngth
,

57 
öt16_t
 
right_shi·s
)

59 
i
;

60 
öt16_t
 *
ouçå
 = 
out
;

61 c⁄° 
öt16_t
 *
ö1±r
 = 
ö1
;

62 c⁄° 
öt16_t
 *
ö2±r
 = 
ö2
;

63 
i
 = 
ve˘‹_Àngth
; i > 0; i--)

65 (*
ouçå
++Ë(
öt16_t
)(((*
ö1±r
++Ë+ (*
ö2±r
++)Ë>> 
right_shi·s
);

67 
	}
}

69 
	$WebRtcS∂_AddAfföeVe˘‹ToVe˘‹
(
öt16_t
 *
out
, i¡16_à*
ö
,

70 
öt16_t
 
gaö
, 
öt32_t
 
add_c⁄°™t
,

71 
öt16_t
 
right_shi·s
, 
ve˘‹_Àngth
)

73 
öt16_t
 *
öPå
;

74 
öt16_t
 *
outPå
;

75 
i
;

77 
öPå
 = 
ö
;

78 
outPå
 = 
out
;

79 
i
 = 0; i < 
ve˘‹_Àngth
; i++)

81 (*
outPå
++Ë+(
öt16_t
)((
	`WEBRTC_SPL_MUL_16_16
((*
öPå
++), 
gaö
)

82 + (
öt32_t
)
add_c⁄°™t
Ë>> 
right_shi·s
);

84 
	}
}

86 
	$WebRtcS∂_AfföeTønsf‹mVe˘‹
(
öt16_t
 *
out
, i¡16_à*
ö
,

87 
öt16_t
 
gaö
, 
öt32_t
 
add_c⁄°™t
,

88 
öt16_t
 
right_shi·s
, 
ve˘‹_Àngth
)

90 
öt16_t
 *
öPå
;

91 
öt16_t
 *
outPå
;

92 
i
;

94 
öPå
 = 
ö
;

95 
outPå
 = 
out
;

96 
i
 = 0; i < 
ve˘‹_Àngth
; i++)

98 (*
outPå
++Ë(
öt16_t
)((
	`WEBRTC_SPL_MUL_16_16
((*
öPå
++), 
gaö
)

99 + (
öt32_t
)
add_c⁄°™t
Ë>> 
right_shi·s
);

101 
	}
}

	@interface/neteq_statistics.h

15 
	~"ty≥defs.h
"

17 #i‚de‡
NETEQ_STATISTICS_H


18 
	#NETEQ_STATISTICS_H


	)

27 
uöt32_t
 
	mex∑ndLígth
;

28 
uöt32_t
 
	m¥ìm±iveLígth
;

30 
uöt32_t
 
	mac˚ÀøãLígth
;

31 
	maddedSam∂es
;

34 
uöt32_t
 
	mex∑ndedVoi˚Sam∂es
;

35 
uöt32_t
 
	mex∑ndedNoi£Sam∂es
;

38 } 
	tDSPSèts_t
;

41 
	m¥ìm±ive_ex∑nd_bgn_ßm∂es
;

42 
	m¥ìm±ive_ex∑nd_n‹mÆ_ßm∂es
;

44 
	mex∑nd_bgn_ßm∂es
;

45 
	mex∑nd_n‹mÆ_ßm∂es
;

47 
	mmîge_ex∑nd_bgn_ßm∂es
;

48 
	mmîge_ex∑nd_n‹mÆ_ßm∂es
;

50 
	mac˚Àøã_bgn_ßm∂es
;

51 
	mac˚œøã_n‹mÆ_ßm∂es
;

52 } 
	tA˘ivôySèts
;

	@interface/webrtc_neteq.h

16 
	~"ty≥defs.h
"

18 #i‚de‡
WEBRTC_NETEQ_H


19 
	#WEBRTC_NETEQ_H


	)

21 #ifde‡
__˝lu•lus


30 
	eWebRtcNëEQDecodî


32 
kDecodîRe£rvedSèπ
,

33 
kDecodîPCMu
,

34 
kDecodîPCMa
,

35 
kDecodîPCMu_2ch
,

36 
kDecodîPCMa_2ch
,

37 
kDecodîILBC
,

38 
kDecodîISAC
,

39 
kDecodîISACswb
,

40 
kDecodîISACfb
,

41 
kDecodîPCM16B
,

42 
kDecodîPCM16Bwb
,

43 
kDecodîPCM16Bswb32kHz
,

44 
kDecodîPCM16Bswb48kHz
,

45 
kDecodîPCM16B_2ch
,

46 
kDecodîPCM16Bwb_2ch
,

47 
kDecodîPCM16Bswb32kHz_2ch
,

48 
kDecodîG722
,

49 
kDecodîG722_2ch
,

50 
kDecodîRED
,

51 
kDecodîAVT
,

52 
kDecodîCNG
,

53 
kDecodîArbôøry
,

54 
kDecodîG729
,

55 
kDecodîG729_1
,

56 
kDecodîG726_16
,

57 
kDecodîG726_24
,

58 
kDecodîG726_32
,

59 
kDecodîG726_40
,

60 
kDecodîG722_1_16
,

61 
kDecodîG722_1_24
,

62 
kDecodîG722_1_32
,

63 
kDecodîG722_1C_24
,

64 
kDecodîG722_1C_32
,

65 
kDecodîG722_1C_48
,

66 
kDecodîOpus
,

67 
kDecodîSPEEX_8
,

68 
kDecodîSPEEX_16
,

69 
kDecodîCELT_32
,

70 
kDecodîCELT_32_2ch
,

71 
kDecodîGSMFR
,

72 
kDecodîAMR
,

73 
kDecodîAMRWB
,

74 
kDecodîRe£rvedEnd


77 
	eWebRtcNëEQNëw‹kTy≥


79 
kUDPN‹mÆ
,

80 
kUDPVideoSync
,

81 
kTCPN‹mÆ
,

82 
kTCPL¨geJôãr
,

83 
kTCPXL¨geJôãr


86 
	eWebRtcNëEQOuçutTy≥


88 
kOuçutN‹mÆ
,

89 
kOuçutPLC
,

90 
kOuçutCNG
,

91 
kOuçutPLCtoCNG
,

92 
kOuçutVADPassive


95 
	eWebRtcNëEQPœyoutMode


97 
kPœyoutOn
, 
kPœyoutOff
, 
kPœyoutFax
, 
kPœyoutSåómög


101 
	eWebRtcNëEQBGNMode


103 
kBGNOn
,

104 
kBGNFade
,

105 
kBGNOff


114 
öt16_t
 (*
	tWebRtcNëEQ_FuncDecode
)(* 
	t°©e
, 
	töt16_t
* 
	tícoded
,

115 
	töt16_t
 
	tÀn
, i¡16_t* 
	tdecoded
,

116 
	töt16_t
* 
	t•ìchTy≥
);

117 
öt16_t
 (*
	tWebRtcNëEQ_FuncDecodePLC
)(* 
	t°©e
, 
	töt16_t
* 
	tdecoded
,

118 
	töt16_t
 
	t‰ames
);

119 
öt16_t
 (*
	tWebRtcNëEQ_FuncDecodeInô
)(* 
	t°©e
);

120 
öt16_t
 (*
	tWebRtcNëEQ_FuncAddL©ePkt
)(* 
	t°©e
, 
	töt16_t
* 
	tícoded
,

121 
	töt16_t
 
	tÀn
);

122 
öt16_t
 (*
	tWebRtcNëEQ_FuncGëMDöfo
)(* 
	t°©e
);

123 
öt16_t
 (*
	tWebRtcNëEQ_FuncGëPôchInfo
)(* 
	t°©e
, 
	töt16_t
* 
	tícoded
,

124 
	töt16_t
* 
	tÀngth
);

125 
öt16_t
 (*
	tWebRtcNëEQ_FuncUpdBWE°
)(* 
	t°©e
, c⁄° 
	tuöt16_t
 *
	tícoded
,

126 
	töt32_t
 
	t∑ckë_size
,

127 
	tuöt16_t
 
	tπp_£q_numbî
,

128 
	tuöt32_t
 
	t£nd_ts
,

129 
	tuöt32_t
 
	t¨r_ts
);

130 (*
WebRtcNëEQ_FuncDuøti⁄E°
)(* 
	t°©e
, c⁄° 
	tuöt8_t
* 
	t∑ylﬂd
,

131 
	t∑ylﬂd_Àngth_byãs
);

132 
öt16_t
 (*
	tWebRtcNëEQ_FuncGëEº‹Code
)(* 
	t°©e
);

140 
WebRtcNëEQDecodî
 
codec
;

141 
öt16_t
 
∑ylﬂdTy≥
;

142 
WebRtcNëEQ_FuncDecode
 
funcDecode
;

143 
WebRtcNëEQ_FuncDecode
 
funcDecodeRCU
;

144 
WebRtcNëEQ_FuncDecodePLC
 
funcDecodePLC
;

145 
WebRtcNëEQ_FuncDecodeInô
 
funcDecodeInô
;

146 
WebRtcNëEQ_FuncAddL©ePkt
 
funcAddL©ePkt
;

147 
WebRtcNëEQ_FuncGëMDöfo
 
funcGëMDöfo
;

148 
WebRtcNëEQ_FuncGëPôchInfo
 
funcGëPôch
;

149 
WebRtcNëEQ_FuncUpdBWE°
 
funcUpdBWE°
;

150 
WebRtcNëEQ_FuncDuøti⁄E°
 
funcDuøti⁄E°
;

151 
WebRtcNëEQ_FuncGëEº‹Code
 
funcGëEº‹Code
;

152 * 
codec_°©e
;

153 
uöt16_t
 
codec_fs
;

154 } 
	tWebRtcNëEQ_CodecDef
;

158 
uöt16_t
 
‰a˘i⁄_lo°
;

159 
uöt32_t
 
cum_lo°
;

160 
uöt32_t
 
ext_max
;

161 
uöt32_t
 
jôãr
;

162 } 
	tWebRtcNëEQ_RTCPSèt
;

170 
	#WEBRTC_NETEQ_MAX_ERROR_NAME
 40

	)

171 
WebRtcNëEQ_GëEº‹Code
(*
ö°
);

172 
WebRtcNëEQ_GëEº‹Name
(
îr‹Code
, *
îr‹Name
, 
maxSåLí
);

176 
WebRtcNëEQ_AssignSize
(*
sizeöbyãs
);

177 
WebRtcNëEQ_Assign
(**
ö°
, *
NETEQ_ö°_Addr
);

178 
WebRtcNëEQ_GëRecommídedBuf„rSize
(*
ö°
, c⁄° 
WebRtcNëEQDecodî
 *
codec
,

179 
noOfCodecs
, 
WebRtcNëEQNëw‹kTy≥
 
nwTy≥
,

180 *
MaxNoOfPackës
, *
sizeöbyãs
,

181 * 
≥r_∑ckë_ovîhód_byãs
);

182 
WebRtcNëEQ_AssignBuf„r
(*
ö°
, 
MaxNoOfPackës
, *
NETEQ_Buf„r_Addr
,

183 
sizeöbyãs
);

187 
WebRtcNëEQ_Inô
(*
ö°
, 
uöt16_t
 
fs
, uöt16_à
∑ckë_ms
);

188 
WebRtcNëEQ_SëAVTPœyout
(*
ö°
, 
PœyoutAVT⁄
);

189 
WebRtcNëEQ_SëExåaDñay
(*
ö°
, 
DñayInMs
);

190 
WebRtcNëEQ_SëPœyoutMode
(*
ö°
, 
WebRtcNëEQPœyoutMode
 
∂ayoutMode
);

191 
WebRtcNëEQ_SëBGNMode
(*
ö°
, 
WebRtcNëEQBGNMode
 
bgnMode
);

192 
WebRtcNëEQ_GëBGNMode
(c⁄° *
ö°
, 
WebRtcNëEQBGNMode
 *
bgnMode
);

196 
WebRtcNëEQ_CodecDbRe£t
(*
ö°
);

197 
WebRtcNëEQ_CodecDbAdd
(*
ö°
, 
WebRtcNëEQ_CodecDef
 *
codecIn°
);

198 
WebRtcNëEQ_CodecDbRemove
(*
ö°
, 
WebRtcNëEQDecodî
 
codec
);

199 
WebRtcNëEQ_CodecDbGëSizeInfo
(*
ö°
, 
öt16_t
 *
U£dE¡rõs
,

200 
öt16_t
 *
MaxE¡rõs
);

201 
WebRtcNëEQ_CodecDbGëCodecInfo
(*
ö°
, 
öt16_t
 
E¡ry
,

202 
WebRtcNëEQDecodî
 *
codec
);

206 
WebRtcNëEQ_RecIn
(*
ö°
, 
öt16_t
 *
p_w16d©agøm°¨t
, i¡16_à
w16_RTPÀn
,

207 
uöt32_t
 
uw32_timeRec
);

208 
WebRtcNëEQ_RecOut
(*
ö°
, 
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_Àn
);

209 
WebRtcNëEQ_GëRTCPSèts
(*
ö°
, 
WebRtcNëEQ_RTCPSèt
 *
RTCP_ö°
);

210 
WebRtcNëEQ_GëRTCPSètsNoRe£t
(*
ö°
, 
WebRtcNëEQ_RTCPSèt
 *
RTCP_ö°
);

211 
WebRtcNëEQ_GëS≥echTimeSèmp
(*
ö°
, 
uöt32_t
 *
time°amp
);

212 
WebRtcNëEQ_DecodedRçInfo
(c⁄° * 
ö°
,

213 * 
£quí˚_numbî
,

214 
uöt32_t
* 
time°amp
);

215 
WebRtcNëEQ_GëS≥echOuçutTy≥
(*
ö°
, 
WebRtcNëEQOuçutTy≥
 *
ouçutTy≥
);

218 
WebRtcNëEQ_VQm⁄RecOutSèti°ics
(*
ö°
, 
uöt16_t
 *
vÆidVoi˚Duøti⁄Ms
,

219 
uöt16_t
 *
c⁄˚ÆedVoi˚Duøti⁄Ms
,

220 
uöt8_t
 *
c⁄˚ÆedVoi˚Fœgs
);

221 
WebRtcNëEQ_VQm⁄GëC⁄figuøti⁄
(*
ö°
, 
uöt16_t
 *
absMaxDñayMs
,

222 
uöt8_t
 *
ad≠èti⁄R©e
);

223 
WebRtcNëEQ_VQm⁄GëRxSèti°ics
(*
ö°
, 
uöt16_t
 *
avgDñayMs
,

224 
uöt16_t
 *
maxDñayMs
);

226 #ifde‡
__˝lu•lus


	@interface/webrtc_neteq_help_macros.h

16 #i‚de‡
WEBRTC_NETEQ_HELP_MACROS_H


17 
	#WEBRTC_NETEQ_HELP_MACROS_H


	)

19 #i‚de‡
NULL


20 
	#NULL
 0

	)

27 
	#SET_CODEC_PAR
(
ö°
,
decodî
,
±
,
°©e
,
fs
) \

28 
ö°
.
codec
=
decodî
; \

29 
ö°
.
∑ylﬂdTy≥
=
±
; \

30 
ö°
.
codec_°©e
=
°©e
; \

31 
ö°
.
codec_fs
=
fs
;

	)

33 
	#SET_PCMU_FUNCTIONS
(
ö°
) \

34 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG711_DecodeU
; \

35 
ö°
.
funcDecodeRCU
=
NULL
; \

36 
ö°
.
funcDecodePLC
=
NULL
; \

37 
ö°
.
funcDecodeInô
=
NULL
; \

38 
ö°
.
funcAddL©ePkt
=
NULL
; \

39 
ö°
.
funcGëMDöfo
=
NULL
; \

40 
ö°
.
funcGëPôch
=
NULL
; \

41 
ö°
.
funcUpdBWE°
=
NULL
; \

42 
ö°
.
funcDuøti⁄E°
=
WebRtcG711_Duøti⁄E°
; \

43 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

45 
	#SET_PCMA_FUNCTIONS
(
ö°
) \

46 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG711_DecodeA
; \

47 
ö°
.
funcDecodeRCU
=
NULL
; \

48 
ö°
.
funcDecodePLC
=
NULL
; \

49 
ö°
.
funcDecodeInô
=
NULL
; \

50 
ö°
.
funcAddL©ePkt
=
NULL
; \

51 
ö°
.
funcGëMDöfo
=
NULL
; \

52 
ö°
.
funcGëPôch
=
NULL
; \

53 
ö°
.
funcUpdBWE°
=
NULL
; \

54 
ö°
.
funcDuøti⁄E°
=
WebRtcG711_Duøti⁄E°
; \

55 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

57 
	#SET_ILBC_FUNCTIONS
(
ö°
) \

58 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcIlbcfix_Decode
; \

59 
ö°
.
funcDecodeRCU
=
NULL
; \

60 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcIlbcfix_NëEqPlc
; \

61 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcIlbcfix_Decodîöô30Ms
; \

62 
ö°
.
funcAddL©ePkt
=
NULL
; \

63 
ö°
.
funcGëMDöfo
=
NULL
; \

64 
ö°
.
funcGëPôch
=
NULL
; \

65 
ö°
.
funcUpdBWE°
=
NULL
; \

66 
ö°
.
funcDuøti⁄E°
=
NULL
; \

67 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

69 
	#SET_ISAC_FUNCTIONS
(
ö°
) \

70 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcIßc_Decode
; \

71 
ö°
.
funcDecodeRCU
=(
WebRtcNëEQ_FuncDecode
)
WebRtcIßc_DecodeRcu
; \

72 
ö°
.
funcDecodePLC
=
NULL
; \

73 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcIßc_DecodîInô
; \

74 
ö°
.
funcAddL©ePkt
=
NULL
; \

75 
ö°
.
funcGëMDöfo
=
NULL
; \

76 
ö°
.
funcGëPôch
=
NULL
; \

77 
ö°
.
funcUpdBWE°
=(
WebRtcNëEQ_FuncUpdBWE°
)
WebRtcIßc_Upd©eBwE°im©e
; \

78 
ö°
.
funcDuøti⁄E°
=
NULL
; \

79 
ö°
.
funcGëEº‹Code
=(
WebRtcNëEQ_FuncGëEº‹Code
)
WebRtcIßc_GëEº‹Code
;

	)

81 
	#SET_ISACfix_FUNCTIONS
(
ö°
) \

82 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcIßcfix_Decode
; \

83 
ö°
.
funcDecodeRCU
=
NULL
; \

84 
ö°
.
funcDecodePLC
=
NULL
; \

85 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcIßcfix_DecodîInô
; \

86 
ö°
.
funcAddL©ePkt
=
NULL
; \

87 
ö°
.
funcGëMDöfo
=
NULL
; \

88 
ö°
.
funcGëPôch
=
NULL
; \

89 
ö°
.
funcUpdBWE°
=(
WebRtcNëEQ_FuncUpdBWE°
)
WebRtcIßcfix_Upd©eBwE°im©e
; \

90 
ö°
.
funcDuøti⁄E°
=
NULL
; \

91 
ö°
.
funcGëEº‹Code
=(
WebRtcNëEQ_FuncGëEº‹Code
)
WebRtcIßcfix_GëEº‹Code
;

	)

93 
	#SET_ISACSWB_FUNCTIONS
(
ö°
) \

94 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcIßc_Decode
; \

95 
ö°
.
funcDecodeRCU
=(
WebRtcNëEQ_FuncDecode
)
WebRtcIßc_DecodeRcu
; \

96 
ö°
.
funcDecodePLC
=
NULL
; \

97 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcIßc_DecodîInô
; \

98 
ö°
.
funcAddL©ePkt
=
NULL
; \

99 
ö°
.
funcGëMDöfo
=
NULL
; \

100 
ö°
.
funcGëPôch
=
NULL
; \

101 
ö°
.
funcUpdBWE°
=(
WebRtcNëEQ_FuncUpdBWE°
)
WebRtcIßc_Upd©eBwE°im©e
; \

102 
ö°
.
funcDuøti⁄E°
=
NULL
; \

103 
ö°
.
funcGëEº‹Code
=(
WebRtcNëEQ_FuncGëEº‹Code
)
WebRtcIßc_GëEº‹Code
;

	)

105 
	#SET_ISACFB_FUNCTIONS
(
ö°
) \

106 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcIßc_Decode
; \

107 
ö°
.
funcDecodeRCU
=(
WebRtcNëEQ_FuncDecode
)
WebRtcIßc_DecodeRcu
; \

108 
ö°
.
funcDecodePLC
=
NULL
; \

109 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcIßc_DecodîInô
; \

110 
ö°
.
funcAddL©ePkt
=
NULL
; \

111 
ö°
.
funcGëMDöfo
=
NULL
; \

112 
ö°
.
funcGëPôch
=
NULL
; \

113 
ö°
.
funcUpdBWE°
=(
WebRtcNëEQ_FuncUpdBWE°
)
WebRtcIßc_Upd©eBwE°im©e
; \

114 
ö°
.
funcDuøti⁄E°
=
NULL
; \

115 
ö°
.
funcGëEº‹Code
=(
WebRtcNëEQ_FuncGëEº‹Code
)
WebRtcIßc_GëEº‹Code
;

	)

117 
	#SET_G729_FUNCTIONS
(
ö°
) \

118 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG729_Decode
; \

119 
ö°
.
funcDecodeRCU
=
NULL
; \

120 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcG729_DecodePlc
; \

121 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG729_DecodîInô
; \

122 
ö°
.
funcAddL©ePkt
=
NULL
; \

123 
ö°
.
funcGëMDöfo
=
NULL
; \

124 
ö°
.
funcGëPôch
=
NULL
; \

125 
ö°
.
funcUpdBWE°
=
NULL
; \

126 
ö°
.
funcDuøti⁄E°
=
NULL
; \

127 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

129 
	#SET_G729_1_FUNCTIONS
(
ö°
) \

130 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG7291_Decode
; \

131 
ö°
.
funcDecodeRCU
=
NULL
; \

132 
ö°
.
funcDecodePLC
=
NULL
; \

133 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG7291_DecodîInô
; \

134 
ö°
.
funcAddL©ePkt
=
NULL
; \

135 
ö°
.
funcGëMDöfo
=
NULL
; \

136 
ö°
.
funcGëPôch
=
NULL
; \

137 
ö°
.
funcUpdBWE°
=(
WebRtcNëEQ_FuncUpdBWE°
)
WebRtcG7291_DecodeBwe
; \

138 
ö°
.
funcDuøti⁄E°
=
NULL
; \

139 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

141 
	#SET_PCM16B_FUNCTIONS
(
ö°
) \

142 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcPcm16b_DecodeW16
; \

143 
ö°
.
funcDecodeRCU
=
NULL
; \

144 
ö°
.
funcDecodePLC
=
NULL
; \

145 
ö°
.
funcDecodeInô
=
NULL
; \

146 
ö°
.
funcAddL©ePkt
=
NULL
; \

147 
ö°
.
funcGëMDöfo
=
NULL
; \

148 
ö°
.
funcGëPôch
=
NULL
; \

149 
ö°
.
funcUpdBWE°
=
NULL
; \

150 
ö°
.
funcDuøti⁄E°
=
NULL
; \

151 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

153 
	#SET_PCM16B_WB_FUNCTIONS
(
ö°
) \

154 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcPcm16b_DecodeW16
; \

155 
ö°
.
funcDecodeRCU
=
NULL
; \

156 
ö°
.
funcDecodePLC
=
NULL
; \

157 
ö°
.
funcDecodeInô
=
NULL
; \

158 
ö°
.
funcAddL©ePkt
=
NULL
; \

159 
ö°
.
funcGëMDöfo
=
NULL
; \

160 
ö°
.
funcGëPôch
=
NULL
; \

161 
ö°
.
funcUpdBWE°
=
NULL
; \

162 
ö°
.
funcDuøti⁄E°
=
NULL
; \

163 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

165 
	#SET_PCM16B_SWB32_FUNCTIONS
(
ö°
) \

166 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcPcm16b_DecodeW16
; \

167 
ö°
.
funcDecodeRCU
=
NULL
; \

168 
ö°
.
funcDecodePLC
=
NULL
; \

169 
ö°
.
funcDecodeInô
=
NULL
; \

170 
ö°
.
funcAddL©ePkt
=
NULL
; \

171 
ö°
.
funcGëMDöfo
=
NULL
; \

172 
ö°
.
funcGëPôch
=
NULL
; \

173 
ö°
.
funcUpdBWE°
=
NULL
; \

174 
ö°
.
funcDuøti⁄E°
=
NULL
; \

175 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

177 
	#SET_PCM16B_SWB48_FUNCTIONS
(
ö°
) \

178 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcPcm16b_DecodeW16
; \

179 
ö°
.
funcDecodeRCU
=
NULL
; \

180 
ö°
.
funcDecodePLC
=
NULL
; \

181 
ö°
.
funcDecodeInô
=
NULL
; \

182 
ö°
.
funcAddL©ePkt
=
NULL
; \

183 
ö°
.
funcGëMDöfo
=
NULL
; \

184 
ö°
.
funcGëPôch
=
NULL
; \

185 
ö°
.
funcUpdBWE°
=
NULL
; \

186 
ö°
.
funcDuøti⁄E°
=
NULL
; \

187 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

189 
	#SET_G722_FUNCTIONS
(
ö°
) \

190 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG722_Decode
; \

191 
ö°
.
funcDecodeRCU
=
NULL
; \

192 
ö°
.
funcDecodePLC
=
NULL
; \

193 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG722_DecodîInô
;\

194 
ö°
.
funcAddL©ePkt
=
NULL
; \

195 
ö°
.
funcGëMDöfo
=
NULL
; \

196 
ö°
.
funcGëPôch
=
NULL
; \

197 
ö°
.
funcUpdBWE°
=
NULL
; \

198 
ö°
.
funcDuøti⁄E°
=
NULL
; \

199 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

201 
	#SET_G722_1_16_FUNCTIONS
(
ö°
) \

202 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG7221_Decode16
; \

203 
ö°
.
funcDecodeRCU
=
NULL
; \

204 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcG7221_DecodePlc16
; \

205 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG7221_DecodîInô16
; \

206 
ö°
.
funcAddL©ePkt
=
NULL
; \

207 
ö°
.
funcGëMDöfo
=
NULL
; \

208 
ö°
.
funcGëPôch
=
NULL
; \

209 
ö°
.
funcUpdBWE°
=
NULL
; \

210 
ö°
.
funcDuøti⁄E°
=
NULL
; \

211 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

213 
	#SET_G722_1_24_FUNCTIONS
(
ö°
) \

214 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG7221_Decode24
; \

215 
ö°
.
funcDecodeRCU
=
NULL
; \

216 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcG7221_DecodePlc24
; \

217 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG7221_DecodîInô24
; \

218 
ö°
.
funcAddL©ePkt
=
NULL
; \

219 
ö°
.
funcGëMDöfo
=
NULL
; \

220 
ö°
.
funcGëPôch
=
NULL
; \

221 
ö°
.
funcUpdBWE°
=
NULL
; \

222 
ö°
.
funcDuøti⁄E°
=
NULL
; \

223 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

225 
	#SET_G722_1_32_FUNCTIONS
(
ö°
) \

226 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG7221_Decode32
; \

227 
ö°
.
funcDecodeRCU
=
NULL
; \

228 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcG7221_DecodePlc32
; \

229 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG7221_DecodîInô32
; \

230 
ö°
.
funcAddL©ePkt
=
NULL
; \

231 
ö°
.
funcGëMDöfo
=
NULL
; \

232 
ö°
.
funcGëPôch
=
NULL
; \

233 
ö°
.
funcUpdBWE°
=
NULL
; \

234 
ö°
.
funcDuøti⁄E°
=
NULL
; \

235 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

237 
	#SET_G722_1C_24_FUNCTIONS
(
ö°
) \

238 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG7221C_Decode24
; \

239 
ö°
.
funcDecodeRCU
=
NULL
; \

240 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcG7221C_DecodePlc24
; \

241 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG7221C_DecodîInô24
; \

242 
ö°
.
funcAddL©ePkt
=
NULL
; \

243 
ö°
.
funcGëMDöfo
=
NULL
; \

244 
ö°
.
funcGëPôch
=
NULL
; \

245 
ö°
.
funcUpdBWE°
=
NULL
; \

246 
ö°
.
funcDuøti⁄E°
=
NULL
; \

247 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

249 
	#SET_G722_1C_32_FUNCTIONS
(
ö°
) \

250 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG7221C_Decode32
; \

251 
ö°
.
funcDecodeRCU
=
NULL
; \

252 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcG7221C_DecodePlc32
; \

253 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG7221C_DecodîInô32
; \

254 
ö°
.
funcAddL©ePkt
=
NULL
; \

255 
ö°
.
funcGëMDöfo
=
NULL
; \

256 
ö°
.
funcGëPôch
=
NULL
; \

257 
ö°
.
funcUpdBWE°
=
NULL
; \

258 
ö°
.
funcDuøti⁄E°
=
NULL
; \

259 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

261 
	#SET_G722_1C_48_FUNCTIONS
(
ö°
) \

262 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG7221C_Decode48
; \

263 
ö°
.
funcDecodeRCU
=
NULL
; \

264 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcG7221C_DecodePlc48
; \

265 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG7221C_DecodîInô48
; \

266 
ö°
.
funcAddL©ePkt
=
NULL
; \

267 
ö°
.
funcGëMDöfo
=
NULL
; \

268 
ö°
.
funcGëPôch
=
NULL
; \

269 
ö°
.
funcUpdBWE°
=
NULL
; \

270 
ö°
.
funcDuøti⁄E°
=
NULL
; \

271 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

273 
	#SET_AMR_FUNCTIONS
(
ö°
) \

274 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcAmr_Decode
; \

275 
ö°
.
funcDecodeRCU
=
NULL
; \

276 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcAmr_DecodePlc
; \

277 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcAmr_DecodîInô
; \

278 
ö°
.
funcAddL©ePkt
=
NULL
; \

279 
ö°
.
funcGëMDöfo
=
NULL
; \

280 
ö°
.
funcGëPôch
=
NULL
; \

281 
ö°
.
funcUpdBWE°
=
NULL
; \

282 
ö°
.
funcDuøti⁄E°
=
NULL
; \

283 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

285 
	#SET_AMRWB_FUNCTIONS
(
ö°
) \

286 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcAmrWb_Decode
; \

287 
ö°
.
funcDecodeRCU
=
NULL
; \

288 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcAmrWb_DecodePlc
; \

289 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcAmrWb_DecodîInô
; \

290 
ö°
.
funcAddL©ePkt
=
NULL
; \

291 
ö°
.
funcGëMDöfo
=
NULL
; \

292 
ö°
.
funcGëPôch
=
NULL
; \

293 
ö°
.
funcUpdBWE°
=
NULL
; \

294 
ö°
.
funcDuøti⁄E°
=
NULL
; \

295 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

297 
	#SET_GSMFR_FUNCTIONS
(
ö°
) \

298 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcGSMFR_Decode
; \

299 
ö°
.
funcDecodeRCU
=
NULL
; \

300 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcGSMFR_DecodePlc
; \

301 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcGSMFR_DecodîInô
; \

302 
ö°
.
funcAddL©ePkt
=
NULL
; \

303 
ö°
.
funcGëMDöfo
=
NULL
; \

304 
ö°
.
funcGëPôch
=
NULL
; \

305 
ö°
.
funcUpdBWE°
=
NULL
; \

306 
ö°
.
funcDuøti⁄E°
=
NULL
; \

307 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

309 
	#SET_G726_16_FUNCTIONS
(
ö°
) \

310 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG726_decode16
; \

311 
ö°
.
funcDecodeRCU
=
NULL
; \

312 
ö°
.
funcDecodePLC
=
NULL
; \

313 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG726_decodîöô16
; \

314 
ö°
.
funcAddL©ePkt
=
NULL
; \

315 
ö°
.
funcGëMDöfo
=
NULL
; \

316 
ö°
.
funcGëPôch
=
NULL
; \

317 
ö°
.
funcUpdBWE°
=
NULL
; \

318 
ö°
.
funcDuøti⁄E°
=
NULL
; \

319 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

321 
	#SET_G726_24_FUNCTIONS
(
ö°
) \

322 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG726_decode24
; \

323 
ö°
.
funcDecodeRCU
=
NULL
; \

324 
ö°
.
funcDecodePLC
=
NULL
; \

325 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG726_decodîöô24
; \

326 
ö°
.
funcAddL©ePkt
=
NULL
; \

327 
ö°
.
funcGëMDöfo
=
NULL
; \

328 
ö°
.
funcGëPôch
=
NULL
; \

329 
ö°
.
funcUpdBWE°
=
NULL
; \

330 
ö°
.
funcDuøti⁄E°
=
NULL
; \

331 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

333 
	#SET_G726_32_FUNCTIONS
(
ö°
) \

334 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG726_decode32
; \

335 
ö°
.
funcDecodeRCU
=
NULL
; \

336 
ö°
.
funcDecodePLC
=
NULL
; \

337 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG726_decodîöô32
; \

338 
ö°
.
funcAddL©ePkt
=
NULL
; \

339 
ö°
.
funcGëMDöfo
=
NULL
; \

340 
ö°
.
funcGëPôch
=
NULL
; \

341 
ö°
.
funcUpdBWE°
=
NULL
; \

342 
ö°
.
funcDuøti⁄E°
=
NULL
; \

343 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

345 
	#SET_G726_40_FUNCTIONS
(
ö°
) \

346 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcG726_decode40
; \

347 
ö°
.
funcDecodeRCU
=
NULL
; \

348 
ö°
.
funcDecodePLC
=
NULL
; \

349 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcG726_decodîöô40
; \

350 
ö°
.
funcAddL©ePkt
=
NULL
; \

351 
ö°
.
funcGëMDöfo
=
NULL
; \

352 
ö°
.
funcGëPôch
=
NULL
; \

353 
ö°
.
funcUpdBWE°
=
NULL
; \

354 
ö°
.
funcDuøti⁄E°
=
NULL
; \

355 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

357 
	#SET_OPUS_FUNCTIONS
(
ö°
) \

358 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcOpus_Decode
; \

359 
ö°
.
funcDecodeRCU
=
NULL
; \

360 
ö°
.
funcDecodePLC
=
NULL
; \

361 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcOpus_DecodîInô
; \

362 
ö°
.
funcAddL©ePkt
=
NULL
; \

363 
ö°
.
funcGëMDöfo
=
NULL
; \

364 
ö°
.
funcGëPôch
=
NULL
; \

365 
ö°
.
funcUpdBWE°
=
NULL
; \

366 
ö°
.
funcDuøti⁄E°
=(
WebRtcNëEQ_FuncDuøti⁄E°
)
WebRtcOpus_Duøti⁄E°
; \

367 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

369 
	#SET_OPUSSLAVE_FUNCTIONS
(
ö°
) \

370 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcOpus_DecodeSœve
; \

371 
ö°
.
funcDecodeRCU
=
NULL
; \

372 
ö°
.
funcDecodePLC
=
NULL
; \

373 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcOpus_DecodîInôSœve
; \

374 
ö°
.
funcAddL©ePkt
=
NULL
; \

375 
ö°
.
funcGëMDöfo
=
NULL
; \

376 
ö°
.
funcGëPôch
=
NULL
; \

377 
ö°
.
funcUpdBWE°
=
NULL
; \

378 
ö°
.
funcDuøti⁄E°
=(
WebRtcNëEQ_FuncDuøti⁄E°
)
WebRtcOpus_Duøti⁄E°
; \

379 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

381 
	#SET_SPEEX_FUNCTIONS
(
ö°
) \

382 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcS≥ex_Decode
; \

383 
ö°
.
funcDecodeRCU
=
NULL
; \

384 
ö°
.
funcDecodePLC
=(
WebRtcNëEQ_FuncDecodePLC
)
WebRtcS≥ex_DecodePlc
; \

385 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcS≥ex_DecodîInô
; \

386 
ö°
.
funcAddL©ePkt
=
NULL
; \

387 
ö°
.
funcGëMDöfo
=
NULL
; \

388 
ö°
.
funcGëPôch
=
NULL
; \

389 
ö°
.
funcUpdBWE°
=
NULL
; \

390 
ö°
.
funcDuøti⁄E°
=
NULL
; \

391 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

393 
	#SET_CELT_FUNCTIONS
(
ö°
) \

394 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcCñt_Decode
; \

395 
ö°
.
funcDecodeRCU
=
NULL
; \

396 
ö°
.
funcDecodePLC
=
NULL
; \

397 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcCñt_DecodîInô
; \

398 
ö°
.
funcAddL©ePkt
=
NULL
; \

399 
ö°
.
funcGëMDöfo
=
NULL
; \

400 
ö°
.
funcGëPôch
=
NULL
; \

401 
ö°
.
funcUpdBWE°
=
NULL
; \

402 
ö°
.
funcDuøti⁄E°
=
NULL
; \

403 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

405 
	#SET_CELTSLAVE_FUNCTIONS
(
ö°
) \

406 
ö°
.
funcDecode
=(
WebRtcNëEQ_FuncDecode
)
WebRtcCñt_DecodeSœve
; \

407 
ö°
.
funcDecodeRCU
=
NULL
; \

408 
ö°
.
funcDecodePLC
=
NULL
; \

409 
ö°
.
funcDecodeInô
=(
WebRtcNëEQ_FuncDecodeInô
)
WebRtcCñt_DecodîInôSœve
; \

410 
ö°
.
funcAddL©ePkt
=
NULL
; \

411 
ö°
.
funcGëMDöfo
=
NULL
; \

412 
ö°
.
funcGëPôch
=
NULL
; \

413 
ö°
.
funcUpdBWE°
=
NULL
; \

414 
ö°
.
funcDuøti⁄E°
=
NULL
; \

415 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

417 
	#SET_RED_FUNCTIONS
(
ö°
) \

418 
ö°
.
funcDecode
=
NULL
; \

419 
ö°
.
funcDecodeRCU
=
NULL
; \

420 
ö°
.
funcDecodePLC
=
NULL
; \

421 
ö°
.
funcDecodeInô
=
NULL
; \

422 
ö°
.
funcAddL©ePkt
=
NULL
; \

423 
ö°
.
funcGëMDöfo
=
NULL
; \

424 
ö°
.
funcGëPôch
=
NULL
; \

425 
ö°
.
funcUpdBWE°
=
NULL
; \

426 
ö°
.
funcDuøti⁄E°
=
NULL
; \

427 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

429 
	#SET_AVT_FUNCTIONS
(
ö°
) \

430 
ö°
.
funcDecode
=
NULL
; \

431 
ö°
.
funcDecodeRCU
=
NULL
; \

432 
ö°
.
funcDecodePLC
=
NULL
; \

433 
ö°
.
funcDecodeInô
=
NULL
; \

434 
ö°
.
funcAddL©ePkt
=
NULL
; \

435 
ö°
.
funcGëMDöfo
=
NULL
; \

436 
ö°
.
funcGëPôch
=
NULL
; \

437 
ö°
.
funcUpdBWE°
=
NULL
; \

438 
ö°
.
funcDuøti⁄E°
=
NULL
; \

439 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

441 
	#SET_CNG_FUNCTIONS
(
ö°
) \

442 
ö°
.
funcDecode
=
NULL
; \

443 
ö°
.
funcDecodeRCU
=
NULL
; \

444 
ö°
.
funcDecodePLC
=
NULL
; \

445 
ö°
.
funcDecodeInô
=
NULL
; \

446 
ö°
.
funcAddL©ePkt
=
NULL
; \

447 
ö°
.
funcGëMDöfo
=
NULL
; \

448 
ö°
.
funcGëPôch
=
NULL
; \

449 
ö°
.
funcUpdBWE°
=
NULL
; \

450 
ö°
.
funcDuøti⁄E°
=
NULL
; \

451 
ö°
.
funcGëEº‹Code
=
NULL
;

	)

	@interface/webrtc_neteq_if.h

1 #i‚de‡
__WEBRTC_NETEQ_H__


2 
	#__WEBRTC_NETEQ_H__


	)

4 * (*
	t≠p_mem‹y_Æloc_t
Ë(*
	tpoﬁ
, 
	tuöt32_t
 
	tsize
);

6 
WebRtcNëEQ_Inô_ö°
(**
ö°
, 
≠p_mem‹y_Æloc_t
 
Æloc_cb
, *
mempoﬁ
,

7 #ifde‡
_USE_FS_CODECS_


8 *
decodî
,

10 
uöt32_t
 
øã
, uöt32_à
∑ylﬂd
, c⁄° *
code˙ame
, 
uöt16_t
 
∑ckë_ms
);

12 
WebRtcNëEQ_In£π
(*
ö°
, 
öt8_t
 *
∑ylﬂd
, 
uöt32_t
 
∑ylﬂd_Àn
,

13 
uöt8_t
 
∑ylﬂd_ty≥
, 
uöt16_t
 
£qno
,

14 
uöt32_t
 
ts
, uöt32_à
s§c
, 
uöt8_t
 
m¨kî
);

16 
WebRtcNëEQ_Exåa˘
(*
ö°
, 
öt8_t
 *
pcm_d©a
, 
uöt32_t
 *
ouéí
);

	@interface/webrtc_neteq_internal.h

15 
	~"ty≥defs.h
"

17 #i‚de‡
WEBRTC_NETEQ_INTERNAL_H


18 
	#WEBRTC_NETEQ_INTERNAL_H


	)

20 #ifde‡
__˝lu•lus


27 
uöt8_t
 
∑ylﬂdTy≥
;

28 
uöt16_t
 
£quí˚Numbî
;

29 
uöt32_t
 
timeSèmp
;

30 
uöt32_t
 
SSRC
;

31 
uöt8_t
 
m¨kîBô
;

32 } 
	tWebRtcNëEQ_RTPInfo
;

50 
WebRtcNëEQ_RecInRTPSåu˘
(*
ö°
, 
WebRtcNëEQ_RTPInfo
 *
πpInfo
,

51 c⁄° 
uöt8_t
 *
∑ylﬂdPå
, 
öt16_t
 
∑ylﬂdLíByãs
,

52 
uöt32_t
 
timeRec
);

64 
WebRtcNëEQ_GëMa°îSœveInfoSize
();

89 
WebRtcNëEQ_RecOutMa°îSœve
(*
ö°
, 
öt16_t
 *
pw16_outD©a
,

90 
öt16_t
 *
pw16_Àn
, *
msInfo
,

91 
öt16_t
 
isMa°î
);

95 
uöt16_t
 
cuºítBuf„rSize
;

96 
uöt16_t
 
¥e„ºedBuf„rSize
;

97 
uöt16_t
 
jôãrPóksFound
;

99 
uöt16_t
 
cuºítPackëLossR©e
;

100 
uöt16_t
 
cuºítDisˇrdR©e
;

101 
uöt16_t
 
cuºítEx∑ndR©e
;

104 
uöt16_t
 
cuºítPªem±iveR©e
;

106 
uöt16_t
 
cuºítAc˚ÀøãR©e
;

108 
öt32_t
 
˛ockDri·PPM
;

110 
addedSam∂es
;

112 } 
	tWebRtcNëEQ_Nëw‹kSèti°ics
;

118 
WebRtcNëEQ_GëNëw‹kSèti°ics
(*
ö°
, 
WebRtcNëEQ_Nëw‹kSèti°ics
 *
°©s
);

123 
ac˚Àøã_bgn_ßm∂es
;

126 
ac˚Àøã_n‹mÆ_ßm∂es
;

129 
ex∑nd_bgn_ßm≥ls
;

132 
ex∑nd_n‹mÆ_ßm∂es
;

136 
¥ìm±ive_ex∑nd_bgn_ßm∂es
;

140 
¥ìm±ive_ex∑nd_n‹mÆ_ßm∂es
;

144 
mîge_ex∑nd_bgn_ßm∂es
;

148 
mîge_ex∑nd_n‹mÆ_ßm∂es
;

149 } 
	tWebRtcNëEQ_Pro˚ssögA˘ivôy
;

157 
WebRtcNëEQ_GëPro˚ssögA˘ivôy
(* 
ö°
,

158 
WebRtcNëEQ_Pro˚ssögA˘ivôy
* 
°©
);

167 
WebRtcNëEQ_GëRawFømeWaôögTimes
(*
ö°
,

168 
max_Àngth
,

169 * 
waôög_times_ms
);

183 (*
WebRtcNëEQ_VADInôFun˘i⁄
)(*
	tVAD_ö°
);

184 (*
WebRtcNëEQ_VADSëmodeFun˘i⁄
)(*
	tVAD_ö°
, 
	tmode
);

185 (*
WebRtcNëEQ_VADFun˘i⁄
)(*
	tVAD_ö°
, 
	tfs
,

186 
	töt16_t
 *
	t‰ame
, 
	t‰ameLí
);

212 
WebRtcNëEQ_SëVADIn°™˚
(*
NëEQ_ö°
, *
VAD_ö°
,

213 
WebRtcNëEQ_VADInôFun˘i⁄
 
öôFun˘i⁄
,

214 
WebRtcNëEQ_VADSëmodeFun˘i⁄
 
£tmodeFun˘i⁄
,

215 
WebRtcNëEQ_VADFun˘i⁄
 
VADFun˘i⁄
);

234 
WebRtcNëEQ_SëVADMode
(*
NëEQ_ö°
, 
mode
);

253 
WebRtcNëEQ_RecOutNoDecode
(*
ö°
, 
öt16_t
 *
pw16_outD©a
,

254 
öt16_t
 *
pw16_Àn
);

272 
WebRtcNëEQ_FlushBuf„rs
(*
ö°
);

289 
WebRtcNëEQ_E«bÀAVSync
(* 
ö°
, 
íabÀ
);

308 
WebRtcNëEQ_RecInSyncRTP
(* 
ö°
,

309 
WebRtcNëEQ_RTPInfo
* 
πp_öfo
,

310 
uöt32_t
 
ª˚ive_time°amp
);

317 
WebRtcNëEQ_SëMöimumDñay
(*
ö°
, 
möimum_dñay_ms
);

323 
WebRtcNëEQ_GëRequúedDñayMs
(c⁄° * 
ö°
);

325 #ifde‡
__˝lu•lus


	@levinson_durbin.c

18 
	~"sig«l_¥o˚ssög_libøry.h
"

20 
	#SPL_LEVINSON_MAXORDER
 20

	)

22 
öt16_t
 
	$WebRtcS∂_Levös⁄Durbö
(
öt32_t
 *
R
, 
öt16_t
 *
A
, i¡16_à*
K
,

23 
öt16_t
 
‹dî
)

25 
öt16_t
 
i
, 
j
;

27 
öt16_t
 
R_hi
[
SPL_LEVINSON_MAXORDER
 + 1], 
R_low
[SPL_LEVINSON_MAXORDER + 1];

29 
öt16_t
 
A_hi
[
SPL_LEVINSON_MAXORDER
 + 1], 
A_low
[SPL_LEVINSON_MAXORDER + 1];

31 
öt16_t
 
A_upd_hi
[
SPL_LEVINSON_MAXORDER
 + 1], 
A_upd_low
[SPL_LEVINSON_MAXORDER + 1];

33 
öt16_t
 
K_hi
, 
K_low
;

35 
öt16_t
 
AÕha_hi
, 
AÕha_low
, 
AÕha_exp
;

36 
öt16_t
 
tmp_hi
, 
tmp_low
;

37 
öt32_t
 
ãmp1W32
, 
ãmp2W32
, 
ãmp3W32
;

38 
öt16_t
 
n‹m
;

42 
n‹m
 = 
	`WebRtcS∂_N‹mW32
(
R
[0]);

44 
i
 = 
‹dî
; i >= 0; i--)

46 
ãmp1W32
 = 
	`WEBRTC_SPL_LSHIFT_W32
(
R
[
i
], 
n‹m
);

48 
R_hi
[
i
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
ãmp1W32
, 16);

49 
R_low
[
i
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
ãmp1W32


50 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
R_hi
[
i
], 16)), 1);

55 
ãmp2W32
 = 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
R_hi
[1],16)

56 + 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
R_low
[1],1);

57 
ãmp3W32
 = 
	`WEBRTC_SPL_ABS_W32
(
ãmp2W32
);

58 
ãmp1W32
 = 
	`WebRtcS∂_DivW32HiLow
(
ãmp3W32
, 
R_hi
[0], 
R_low
[0]);

60 i‡(
ãmp2W32
 > 0)

62 
ãmp1W32
 = -temp1W32;

66 
K_hi
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
ãmp1W32
, 16);

67 
K_low
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
ãmp1W32


68 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
K_hi
, 16)), 1);

71 
K
[0] = 
K_hi
;

73 
ãmp1W32
 = 
	`WEBRTC_SPL_RSHIFT_W32
(temp1W32, 4);

76 
A_hi
[1] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
ãmp1W32
, 16);

77 
A_low
[1] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
ãmp1W32


78 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
A_hi
[1], 16)), 1);

82 
ãmp1W32
 = (((
	`WEBRTC_SPL_MUL_16_16
(
K_hi
, 
K_low
) >> 14) + WEBRTC_SPL_MUL_16_16(K_hi, K_hi))

85 
ãmp1W32
 = 
	`WEBRTC_SPL_ABS_W32
(temp1W32);

86 
ãmp1W32
 = (
öt32_t
)0x7fffffffL -Åemp1W32;

89 
tmp_hi
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
ãmp1W32
, 16);

90 
tmp_low
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
ãmp1W32


91 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
tmp_hi
, 16)), 1);

94 
ãmp1W32
 = ((
	`WEBRTC_SPL_MUL_16_16
(
R_hi
[0], 
tmp_hi
)

95 + (
	`WEBRTC_SPL_MUL_16_16
(
R_hi
[0], 
tmp_low
) >> 15)

96 + (
	`WEBRTC_SPL_MUL_16_16
(
R_low
[0], 
tmp_hi
) >> 15)) << 1);

100 
AÕha_exp
 = 
	`WebRtcS∂_N‹mW32
(
ãmp1W32
);

101 
ãmp1W32
 = 
	`WEBRTC_SPL_LSHIFT_W32
—emp1W32, 
AÕha_exp
);

102 
AÕha_hi
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
ãmp1W32
, 16);

103 
AÕha_low
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
ãmp1W32


104 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
AÕha_hi
, 16)), 1);

108 
i
 = 2; i <
‹dî
; i++)

117 
ãmp1W32
 = 0;

119 
j
 = 1; j < 
i
; j++)

122 
ãmp1W32
 +((
	`WEBRTC_SPL_MUL_16_16
(
R_hi
[
j
], 
A_hi
[
i
-j]) << 1)

123 + (((
	`WEBRTC_SPL_MUL_16_16
(
R_hi
[
j
], 
A_low
[
i
-j]) >> 15)

124 + (
	`WEBRTC_SPL_MUL_16_16
(
R_low
[
j
], 
A_hi
[
i
-j]) >> 15)) << 1));

127 
ãmp1W32
 = 
	`WEBRTC_SPL_LSHIFT_W32
(temp1W32, 4);

128 
ãmp1W32
 +(
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
R_hi
[
i
], 16)

129 + 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
R_low
[
i
], 1));

132 
ãmp2W32
 = 
	`WEBRTC_SPL_ABS_W32
(
ãmp1W32
);

133 
ãmp3W32
 = 
	`WebRtcS∂_DivW32HiLow
(
ãmp2W32
, 
AÕha_hi
, 
AÕha_low
);

136 i‡(
ãmp1W32
 > 0)

138 
ãmp3W32
 = -temp3W32;

142 
n‹m
 = 
	`WebRtcS∂_N‹mW32
(
ãmp3W32
);

143 i‡((
AÕha_exp
 <
n‹m
Ë|| (
ãmp3W32
 == 0))

145 
ãmp3W32
 = 
	`WEBRTC_SPL_LSHIFT_W32
—emp3W32, 
AÕha_exp
);

148 i‡(
ãmp3W32
 > 0)

150 
ãmp3W32
 = (
öt32_t
)0x7fffffffL;

153 
ãmp3W32
 = (
öt32_t
)0x80000000L;

158 
K_hi
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
ãmp3W32
, 16);

159 
K_low
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
ãmp3W32


160 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
K_hi
, 16)), 1);

163 
K
[
i
 - 1] = 
K_hi
;

168 i‡((
öt32_t
)
	`WEBRTC_SPL_ABS_W16
(
K_hi
) > (int32_t)32750)

179 
j
 = 1; j < 
i
; j++)

182 
ãmp1W32
 = 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
A_hi
[
j
],16)

183 + 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
A_low
[
j
],1);

186 
ãmp1W32
 +((
	`WEBRTC_SPL_MUL_16_16
(
K_hi
, 
A_hi
[
i
-
j
])

187 + (
	`WEBRTC_SPL_MUL_16_16
(
K_hi
, 
A_low
[
i
-
j
]) >> 15)

188 + (
	`WEBRTC_SPL_MUL_16_16
(
K_low
, 
A_hi
[
i
-
j
]) >> 15)) << 1);

191 
A_upd_hi
[
j
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
ãmp1W32
, 16);

192 
A_upd_low
[
j
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
ãmp1W32


193 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
A_upd_hi
[
j
], 16)), 1);

197 
ãmp3W32
 = 
	`WEBRTC_SPL_RSHIFT_W32
(temp3W32, 4);

200 
A_upd_hi
[
i
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
ãmp3W32
, 16);

201 
A_upd_low
[
i
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
ãmp3W32


202 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
A_upd_hi
[
i
], 16)), 1);

206 
ãmp1W32
 = (((
	`WEBRTC_SPL_MUL_16_16
(
K_hi
, 
K_low
) >> 14)

207 + 
	`WEBRTC_SPL_MUL_16_16
(
K_hi
, K_hi)) << 1);

209 
ãmp1W32
 = 
	`WEBRTC_SPL_ABS_W32
(temp1W32);

210 
ãmp1W32
 = (
öt32_t
)0x7fffffffL -Åemp1W32;

213 
tmp_hi
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
ãmp1W32
, 16);

214 
tmp_low
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
ãmp1W32


215 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
tmp_hi
, 16)), 1);

218 
ãmp1W32
 = ((
	`WEBRTC_SPL_MUL_16_16
(
AÕha_hi
, 
tmp_hi
)

219 + (
	`WEBRTC_SPL_MUL_16_16
(
AÕha_hi
, 
tmp_low
) >> 15)

220 + (
	`WEBRTC_SPL_MUL_16_16
(
AÕha_low
, 
tmp_hi
) >> 15)) << 1);

224 
n‹m
 = 
	`WebRtcS∂_N‹mW32
(
ãmp1W32
);

225 
ãmp1W32
 = 
	`WEBRTC_SPL_LSHIFT_W32
—emp1W32, 
n‹m
);

227 
AÕha_hi
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
(
ãmp1W32
, 16);

228 
AÕha_low
 = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
ãmp1W32


229 - 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
AÕha_hi
, 16)), 1);

232 
AÕha_exp
 = AÕha_ex∞+ 
n‹m
;

236 
j
 = 1; j <
i
; j++)

238 
A_hi
[
j
] = 
A_upd_hi
[j];

239 
A_low
[
j
] = 
A_upd_low
[j];

248 
A
[0] = 4096;

250 
i
 = 1; i <
‹dî
; i++)

253 
ãmp1W32
 = 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
A_hi
[
i
], 16)

254 + 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
A_low
[
i
], 1);

256 
A
[
i
] = (
öt16_t
)
	`WEBRTC_SPL_RSHIFT_W32
((
ãmp1W32
<<1)+(
öt32_t
)32768, 16);

259 
	}
}

	@mcu.h

15 #i‚de‡
MCU_H


16 
	#MCU_H


	)

18 
	~"ty≥defs.h
"

20 
	~"codec_db.h
"

21 
	~"π˝.h
"

22 
	~"∑ckë_buf„r.h
"

23 
	~"buf„r_°©s.h
"

24 
	~"öãrÁ˚/√ãq_°©i°ics.h
"

26 #ifde‡
NETEQ_ATEVENT_DECODE


27 
	~"dtmf_buf„r.h
"

30 
	#MAX_ONE_DESC
 5

	)

31 
	#MAX_LOSS_REPORT_PERIOD
 60

	)

33 
	eTsSˇlög


35 
	mkTSnoSˇlög
 = 0,

36 
	mkTSsˇlögTwo
,

37 
	mkTSsˇlögTwoThúds
,

38 
	mkTSsˇlögFourThúds


41 íum { 
	mkLíWaôögTimes
 = 100 };

46 
öt16_t
 
	mcuºít_Codec
;

47 
öt16_t
 
	mcuºít_Paylﬂd
;

48 
uöt32_t
 
	mtimeSèmp
;

49 
öt16_t
 
	mmûli£c⁄dsPîCÆl
;

50 
uöt16_t
 
	mtime°ampsPîCÆl
;

51 
uöt16_t
 
	mfs
;

52 
uöt32_t
 
	ms§c
;

53 
öt16_t
 
	m√w_codec
;

54 
öt16_t
 
	mfú°_∑ckë
;

57 
öt16_t
 *
	mpw16_ªadAddªss
;

58 
öt16_t
 *
	mpw16_wrôeAddªss
;

59 *
	mmaö_ö°
;

61 
CodecDbIn°_t
 
	mcodec_DB_ö°
;

64 
S∂ôInfo_t
 
	mPaylﬂdS∂ô_ö°
;

66 
WebRtcNëEQ_RTCP_t
 
	mRTCP_ö°
;

67 
PackëBuf_t
 
	mPackëBuf„r_ö°
;

68 
Buf°©sIn°_t
 
	mBuf„rSèt_ö°
;

70 #ifde‡
NETEQ_ATEVENT_DECODE


71 
dtmf_ö°_t
 
	mDTMF_ö°
;

73 
	mNoOfEx∑ndCÆls
;

74 
öt16_t
 
	mAVT_PœyoutOn
;

75 
WebRtcNëEQPœyoutMode
 
	mNëEqPœyoutMode
;

77 
öt16_t
 
	m⁄e_desc
;

79 
uöt32_t
 
	mlo°TS
;

80 
uöt32_t
 
	mœ°Rï‹tTS
;

82 
	mwaôög_times
[
kLíWaôögTimes
];

83 
	mÀn_waôög_times
;

84 
	m√xt_waôög_time_ödex
;

86 
uöt32_t
 
	mexã∫ÆTS
;

87 
uöt32_t
 
	möã∫ÆTS
;

88 
öt16_t
 
	mTSsˇlögInôülized
;

89 
TsSˇlög
 
	msˇlögFa˘‹
;

96 
	mav_sync
;

98 #ifde‡
NETEQ_STEREO


99 
	musögSãªo
;

103 
	mdecoded_∑ckë_£quí˚_numbî
;

104 
uöt32_t
 
	mdecoded_∑ckë_time°amp
;

105 } 
	tMCUIn°_t
;

118 
WebRtcNëEQ_McuRe£t
(
MCUIn°_t
 *
ö°
);

131 
WebRtcNëEQ_Re£tMcuInCÆlSèts
(
MCUIn°_t
 *
ö°
);

143 
WebRtcNëEQ_Re£tWaôögTimeSèts
(
MCUIn°_t
 *
ö°
);

156 
WebRtcNëEQ_St‹eWaôögTime
(
MCUIn°_t
 *
ö°
, 
waôög_time
);

169 
WebRtcNëEQ_Re£tMcuJôãrSèt
(
MCUIn°_t
 *
ö°
);

185 
WebRtcNëEQ_McuAddªssInô
(
MCUIn°_t
 *
ö°
, * 
D©a2McuAddªss
,

186 * 
D©a2D•Addªss
, *
maö_ö°
);

200 
WebRtcNëEQ_McuSëFs
(
MCUIn°_t
 *
ö°
, 
uöt16_t
 
fs_hz
);

214 
WebRtcNëEQ_Sig«lMcu
(
MCUIn°_t
 *
ö°
);

230 
WebRtcNëEQ_RecInI¡î«l
(
MCUIn°_t
 *
MCU_ö°
, 
RTPPackë_t
 *
RTP∑ckë
,

231 
uöt32_t
 
uw32_timeRec
);

249 
WebRtcNëEQ_S∂ôAndIn£πPaylﬂd
(
RTPPackë_t
* 
∑ckë
,

250 
PackëBuf_t
* 
Buf„r_ö°
,

251 
S∂ôInfo_t
* 
•lô_ö°
,

252 
öt16_t
* 
Êushed
,

253 
av_sync
);

269 
WebRtcNëEQ_GëTime°ampSˇlög
(
MCUIn°_t
 *
MCU_ö°
, 
πpPaylﬂdTy≥
);

283 
uöt32_t
 
WebRtcNëEQ_SˇÀTime°ampExã∫ÆToI¡î«l
(c⁄° 
MCUIn°_t
 *
MCU_ö°
,

284 
uöt32_t
 
exã∫ÆTS
);

298 
uöt32_t
 
WebRtcNëEQ_SˇÀTime°ampI¡î«lToExã∫Æ
(c⁄° 
MCUIn°_t
 *
MCU_ö°
,

299 
uöt32_t
 
öã∫ÆTS
);

	@mcu_address_init.c

11 
	~"mcu.h
"

13 
	~<°rög.h
>

18 
	$WebRtcNëEQ_McuAddªssInô
(
MCUIn°_t
 *
ö°
, * 
D©a2McuAddªss
,

19 * 
D©a2D•Addªss
, *
maö_ö°
)

22 
ö°
->
pw16_ªadAddªss
 = (
öt16_t
*Ë
D©a2McuAddªss
;

23 
ö°
->
pw16_wrôeAddªss
 = (
öt16_t
*Ë
D©a2D•Addªss
;

24 
ö°
->
maö_ö°
 = main_inst;

26 
ö°
->
mûli£c⁄dsPîCÆl
 = 10;

29 i‡(
ö°
->
pw16_wrôeAddªss
 !
NULL
Ëö°->pw16_wrôeAddªss[0] = 
DSP_INSTR_EXPAND
;

32 
	}
}

	@mcu_dsp_common.c

15 
	~"mcu_d•_comm⁄.h
"

17 
	~<°rög.h
>

20 
	$WebRtcNëEQ_DSPöô
(
MaöIn°_t
 *
ö°
)

22 
ªs
 = 0;

24 
ªs
 |
	`WebRtcNëEQ_AddªssInô
(&
ö°
->
DSPö°
, 
NULL
, NULL, inst);

25 
ªs
 |
	`WebRtcNëEQ_McuAddªssInô
(&
ö°
->
MCUö°
, 
NULL
, NULL, inst);

27  
ªs
;

29 
	}
}

32 
	$WebRtcNëEQ_DSP2MCUöãºu±
(
MaöIn°_t
 *
ö°
, 
öt16_t
 *
pw16_sh¨ed_mem
)

34 
ö°
->
MCUö°
.
pw16_ªadAddªss
 = 
pw16_sh¨ed_mem
;

35 
ö°
->
MCUö°
.
pw16_wrôeAddªss
 = 
pw16_sh¨ed_mem
;

36  
	`WebRtcNëEQ_Sig«lMcu
(&
ö°
->
MCUö°
);

37 
	}
}

39 
	$WebRtcNëEQ_IsSyncPaylﬂd
(c⁄° * 
∑ylﬂd
, 
∑ylﬂd_Àn_byãs
) {

40 i‡(
∑ylﬂd_Àn_byãs
 !
SYNC_PAYLOAD_LEN_BYTES
 ||

41 
	`memcmp
(
∑ylﬂd
, 
kSyncPaylﬂd
, 
SYNC_PAYLOAD_LEN_BYTES
) != 0) {

45 
	}
}

47 
	$WebRtcNëEQ_SëPackëSize
(
MaöIn°_t
 *
ö°
, 
uöt16_t
 *
∑ckë_ms
)

49 
ö°
->
DSPö°
.
mûli£c⁄dsPîCÆl
 = 
∑ckë_ms
;

50 
ö°
->
MCUö°
.
mûli£c⁄dsPîCÆl
 = 
∑ckë_ms
;

53 
	}
}

	@mcu_dsp_common.h

15 #i‚de‡
MCU_DSP_COMMON_H


16 
	#MCU_DSP_COMMON_H


	)

18 
	~"ty≥defs.h
"

20 
	~"d•.h
"

21 
	~"mcu.h
"

24 #i‡
deföed
(
NETEQ_48KHZ_WIDEBAND
)

25 
	#SHARED_MEM_SIZE
 (6*640)

	)

26 #ñi‡
deföed
(
NETEQ_32KHZ_WIDEBAND
)

27 
	#SHARED_MEM_SIZE
 (4*640)

	)

28 #ñi‡
deföed
(
NETEQ_WIDEBAND
)

29 
	#SHARED_MEM_SIZE
 (2*640)

	)

31 
	#SHARED_MEM_SIZE
 640

	)

34 
	#SYNC_PAYLOAD_LEN_BYTES
 7

	)

35 c⁄° 
uöt8_t
 
	gkSyncPaylﬂd
[
SYNC_PAYLOAD_LEN_BYTES
] = {

41 
DSPIn°_t
 
	mDSPö°
;

42 
MCUIn°_t
 
	mMCUö°
;

43 
öt16_t
 
	mEº‹Code
;

44 #ifde‡
NETEQ_STEREO


45 
öt16_t
 
	mma°îSœve
;

47 
öt8_t
 
	m£íRecIn
;

48 } 
	tMaöIn°_t
;

53 
uöt32_t
 
	m∂ayedOutTS
;

54 
uöt16_t
 
	mßm∂esLe·
;

55 
öt16_t
 
	mMD
;

56 
öt16_t
 
	mœ°Mode
;

57 
öt16_t
 
	m‰ameLí
;

58 } 
	tDSP2MCU_öfo_t
;

61 
WebRtcNëEQ_DSPöô
(
MaöIn°_t
 *
ö°
);

64 
WebRtcNëEQ_DSP2MCUöãºu±
(
MaöIn°_t
 *
ö°
, 
öt16_t
 *
pw16_sh¨ed_mem
);

68 
WebRtcNëEQ_IsSyncPaylﬂd
(c⁄° * 
∑ylﬂd
, 
∑ylﬂd_Àn_byãs
);

73 
WebRtcNëEQ_SëPackëSize
(
MaöIn°_t
 *
ö°
, 
uöt16_t
 *
∑ckë_ms
);

	@mcu_reset.c

15 
	~"mcu.h
"

17 
	~<as£π.h
>

18 
	~<°rög.h
>

20 
	~"automode.h
"

22 
	$WebRtcNëEQ_McuRe£t
(
MCUIn°_t
 *
ö°
)

25 #ifde‡
NETEQ_ATEVENT_DECODE


26 
ok
;

30 
ö°
->
pw16_ªadAddªss
 = 
NULL
;

31 
ö°
->
pw16_wrôeAddªss
 = 
NULL
;

32 
ö°
->
maö_ö°
 = 
NULL
;

33 
ö°
->
⁄e_desc
 = 0;

34 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
exåaDñayMs
 = 0;

35 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
möimum_dñay_ms
 = 0;

36 
ö°
->
NëEqPœyoutMode
 = 
kPœyoutOn
;

37 
ö°
->
av_sync
 = 0;

39 
	`WebRtcNëEQ_DbRe£t
(&
ö°
->
codec_DB_ö°
);

40 
	`mem£t
(&
ö°
->
PaylﬂdS∂ô_ö°
, 0, (
S∂ôInfo_t
));

43 
	`WebRtcNëEQ_PackëBuf„rFlush
(&
ö°
->
PackëBuf„r_ö°
);

44 
ö°
->
PackëBuf„r_ö°
.
mem‹ySizeW16
 = 0;

45 
ö°
->
PackëBuf„r_ö°
.
maxIn£πPosôi⁄s
 = 0;

48 
	`mem£t
(&
ö°
->
Buf„rSèt_ö°
, 0, (
Buf°©sIn°_t
));

49 #ifde‡
NETEQ_ATEVENT_DECODE


50 
ok
 = 
	`WebRtcNëEQ_DtmfDecodîInô
(&
ö°
->
DTMF_ö°
, 8000, 560);

51 i‡(
ok
 != 0)

53  
ok
;

56 
ö°
->
NoOfEx∑ndCÆls
 = 0;

57 
ö°
->
cuºít_Codec
 = -1;

58 
ö°
->
cuºít_Paylﬂd
 = -1;

60 
ö°
->
mûli£c⁄dsPîCÆl
 = 10;

61 
ö°
->
time°ampsPîCÆl
 = in°->
mûli£c⁄dsPîCÆl
 * 8;

62 
ö°
->
fs
 = 8000;

63 
ö°
->
fú°_∑ckë
 = 1;

65 
	`WebRtcNëEQ_Re£tMcuInCÆlSèts
(
ö°
);

67 
	`WebRtcNëEQ_Re£tWaôögTimeSèts
(
ö°
);

69 
	`WebRtcNëEQ_Re£tMcuJôãrSèt
(
ö°
);

71 
	`WebRtcNëEQ_Re£tAutomode
(&(
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
),

72 
ö°
->
PackëBuf„r_ö°
.
maxIn£πPosôi⁄s
);

75 
	}
}

81 
	$WebRtcNëEQ_Re£tMcuInCÆlSèts
(
MCUIn°_t
 *
ö°
)

83 
ö°
->
lo°TS
 = 0;

84 
ö°
->
œ°Rï‹tTS
 = 0;

85 
ö°
->
PackëBuf„r_ö°
.
disˇrdedPackës
 = 0;

88 
	}
}

94 
	$WebRtcNëEQ_Re£tWaôögTimeSèts
(
MCUIn°_t
 *
ö°
) {

95 
	`mem£t
(
ö°
->
waôög_times
, 0,

96 
kLíWaôögTimes
 * (
ö°
->
waôög_times
[0]));

97 
ö°
->
Àn_waôög_times
 = 0;

98 
ö°
->
√xt_waôög_time_ödex
 = 0;

99 
	}
}

105 
	$WebRtcNëEQ_St‹eWaôögTime
(
MCUIn°_t
 *
ö°
, 
waôög_time
) {

106 
	`as£π
(
ö°
->
√xt_waôög_time_ödex
 < 
kLíWaôögTimes
);

107 
ö°
->
waôög_times
[ö°->
√xt_waôög_time_ödex
] = 
waôög_time
;

108 
ö°
->
√xt_waôög_time_ödex
++;

109 i‡(
ö°
->
√xt_waôög_time_ödex
 >
kLíWaôögTimes
) {

110 
ö°
->
√xt_waôög_time_ödex
 = 0;

112 i‡(
ö°
->
Àn_waôög_times
 < 
kLíWaôögTimes
) {

113 
ö°
->
Àn_waôög_times
++;

115 
	}
}

121 
	$WebRtcNëEQ_Re£tMcuJôãrSèt
(
MCUIn°_t
 *
ö°
)

123 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
cou¡IAT500ms
 = 0;

124 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
cou¡IAT1000ms
 = 0;

125 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
cou¡IAT2000ms
 = 0;

126 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
l⁄ge°IATms
 = 0;

129 
	}
}

	@merge.c

15 
	~"d•.h
"

17 
	~"sig«l_¥o˚ssög_libøry.h
"

19 
	~"d•_hñpfun˘i⁄s.h
"

20 
	~"√ãq_îr‹_codes.h
"

60 
	#SCRATCH_pw16_ex∑nded
 0

	)

61 #i‡(
deföed
(
NETEQ_48KHZ_WIDEBAND
))

62 
	#SCRATCH_pw16_ex∑ndedLB
 1260

	)

63 
	#SCRATCH_pw16_decodedLB
 1360

	)

64 
	#SCRATCH_pw32_c‹r
 1400

	)

65 
	#SCRATCH_pw16_c‹rVec
 1260

	)

66 
	#SCRATCH_NETEQ_EXPAND
 756

	)

67 #ñi‡(
deföed
(
NETEQ_32KHZ_WIDEBAND
))

68 
	#SCRATCH_pw16_ex∑ndedLB
 840

	)

69 
	#SCRATCH_pw16_decodedLB
 940

	)

70 
	#SCRATCH_pw32_c‹r
 980

	)

71 
	#SCRATCH_pw16_c‹rVec
 840

	)

72 
	#SCRATCH_NETEQ_EXPAND
 504

	)

73 #ñi‡(
deföed
(
NETEQ_WIDEBAND
))

74 
	#SCRATCH_pw16_ex∑ndedLB
 420

	)

75 
	#SCRATCH_pw16_decodedLB
 520

	)

76 
	#SCRATCH_pw32_c‹r
 560

	)

77 
	#SCRATCH_pw16_c‹rVec
 420

	)

78 
	#SCRATCH_NETEQ_EXPAND
 252

	)

80 
	#SCRATCH_pw16_ex∑ndedLB
 210

	)

81 
	#SCRATCH_pw16_decodedLB
 310

	)

82 
	#SCRATCH_pw32_c‹r
 350

	)

83 
	#SCRATCH_pw16_c‹rVec
 210

	)

84 
	#SCRATCH_NETEQ_EXPAND
 126

	)

87 
WebRtcNëEQ_Mîge
(
DSPIn°_t
 *
ö°
,

88 #ifde‡
SCRATCH


89 
öt16_t
 *
pw16_s¸©chPå
,

91 
öt16_t
 *
pw16_decoded
, 
Àn
, i¡16_à*
pw16_outD©a
,

92 
öt16_t
 *
pw16_Àn
)

95 
öt16_t
 
	gfs_mu…
;

96 
öt16_t
 
	gfs_shi·
;

97 
öt32_t
 
	gw32_En_√w_‰ame
, 
	gw32_En_ﬁd_‰ame
;

98 
öt16_t
 
	gw16_expmax
, 
	gw16_√wmax
;

99 
öt16_t
 
	gw16_tmp
, 
	gw16_tmp2
;

100 
öt32_t
 
	gw32_tmp
;

101 #ifde‡
SCRATCH


102 
öt16_t
 *
	gpw16_ex∑nded
 = 
pw16_s¸©chPå
 + 
SCRATCH_pw16_ex∑nded
;

103 
öt16_t
 *
	gpw16_ex∑ndedLB
 = 
pw16_s¸©chPå
 + 
SCRATCH_pw16_ex∑ndedLB
;

104 
öt16_t
 *
	gpw16_decodedLB
 = 
pw16_s¸©chPå
 + 
SCRATCH_pw16_decodedLB
;

105 
öt32_t
 *
	gpw32_c‹r
 = (öt32_t*Ë(
pw16_s¸©chPå
 + 
SCRATCH_pw32_c‹r
);

106 
öt16_t
 *
	gpw16_c‹rVec
 = 
pw16_s¸©chPå
 + 
SCRATCH_pw16_c‹rVec
;

108 
öt16_t
 
	gpw16_ex∑nded
[(125+80+5)*
FSMULT
];

109 
öt16_t
 
	gpw16_ex∑ndedLB
[100];

110 
öt16_t
 
	gpw16_decodedLB
[40];

111 
öt32_t
 
	gpw32_c‹r
[60];

112 
öt16_t
 
	gpw16_c‹rVec
[4+60+4];

114 
öt16_t
 *
	gpw16_c‹r
 = &
pw16_c‹rVec
[4];

115 
öt16_t
 
	gw16_°›Pos
 = 0, 
	gw16_be°Index
, 
	gw16_öãΩLí
;

116 
öt16_t
 
	gw16_be°VÆ
;

117 
öt16_t
 
	gw16_°¨tÁ˘
, 
	gw16_öc
;

118 
öt16_t
 
	gw16_ex∑ndedLí
;

119 
öt16_t
 
	gw16_°¨tPos
;

120 
öt16_t
 
	gw16_expLí
, 
	gw16_√wLí
 = 0;

121 
öt16_t
 *
	gpw16_decodedOut
;

122 
öt16_t
 
	gw16_muãd
;

124 
	gw16_decodedLí
 = 
Àn
;

126 #ifde‡
NETEQ_STEREO


127 
Ma°îSœveInfo
 *
	gmsInfo
 = 
ö°
->
msInfo
;

130 
	gfs_mu…
 = 
WebRtcS∂_DivW32W16ResW16
(
ö°
->
fs
, 8000);

131 
	gfs_shi·
 = 30 - 
WebRtcS∂_N‹mW32
(
fs_mu…
);

140 
	gw16_°¨tPos
 = 
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
;

142 
	gö°
->
	gEx∑ndIn°
.
	gw16_°›Mutög
 = 1;

143 
	gö°
->
	gEx∑ndIn°
.
	gw16_œgsDúe˘i⁄
 = 1;

144 
	gö°
->
	gEx∑ndIn°
.
	gw16_œgsPosôi⁄
 = -1;

145 
	gw16_ex∑ndedLí
 = 0;

147 i‡(
	gw16_°¨tPos
 >210 * 
FSMULT
)

156 
w16_tmp
 = 
w16_°¨tPos
 - 210 * 
FSMULT
;

158 
WEBRTC_SPL_MEMMOVE_W16
(&
ö°
->
•ìchBuf„r
[ö°->
curPosôi⁄
+
w16_tmp
] ,

159 &
ö°
->
•ìchBuf„r
[ö°->
curPosôi⁄
], 210*
FSMULT
);

161 
	gö°
->
	gcurPosôi⁄
 +
w16_tmp
;

162 
	gw16_°¨tPos
 = 210 * 
FSMULT
;

165 
WebRtcNëEQ_Ex∑nd
(
ö°
,

166 #ifde‡
SCRATCH


167 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_EXPAND
,

169 
pw16_ex∑nded
,

170 &
w16_√wLí
, 0);

177 
WEBRTC_SPL_MEMMOVE_W16
(&
pw16_ex∑nded
[
w16_°¨tPos
],Öw16_expanded,

178 
WEBRTC_SPL_MIN
(
w16_√wLí
,

179 
WEBRTC_SPL_MAX
(210*
FSMULT
 - 
w16_°¨tPos
, 0) ) );

181 
	gö°
->
	gEx∑ndIn°
.
	gw16_°›Mutög
 = 0;

185 
WEBRTC_SPL_MEMCPY_W16
(
pw16_ex∑nded
, &
ö°
->
•ìchBuf„r
[ö°->
curPosôi⁄
], 
w16_°¨tPos
);

191 
	gw16_ex∑ndedLí
 = (120 + 80 + 2Ë* 
fs_mu…
;

192 
	gw16_expLí
 = 
w16_°¨tPos
 + 
w16_√wLí
;

194 i‡(
	gw16_expLí
 < 
	gw16_ex∑ndedLí
)

196 (
	gw16_expLí
 + 
	gw16_√wLí
Ë< 
	gw16_ex∑ndedLí
)

198 
WEBRTC_SPL_MEMCPY_W16
(&
pw16_ex∑nded
[
w16_expLí
], &pw16_ex∑nded[
w16_°¨tPos
],

199 
w16_√wLí
);

200 
	gw16_expLí
 +
w16_√wLí
;

205 
WEBRTC_SPL_MEMCPY_W16
(&
pw16_ex∑nded
[
w16_expLí
], &pw16_ex∑nded[
w16_°¨tPos
],

206 (
w16_ex∑ndedLí
-
w16_expLí
));

208 
	gw16_expLí
 = 
w16_ex∑ndedLí
;

211 
	gö°
->
	gw16_muãFa˘‹


212 (
öt16_t
Ë
WEBRTC_SPL_MUL_16_16_RSFT
(
ö°
->
w16_muãFa˘‹
,

213 
ö°
->
Ex∑ndIn°
.
w16_ex∑ndMuãFa˘‹
, 14);

216 
	gÀn
 = 
WEBRTC_SPL_MIN
(64*
fs_mu…
, 
w16_decodedLí
);

217 
	gw16_expmax
 = 
WebRtcS∂_MaxAbsVÆueW16
(
pw16_ex∑nded
, (
öt16_t
Ë
Àn
);

218 
	gw16_√wmax
 = 
WebRtcS∂_MaxAbsVÆueW16
(
pw16_decoded
, (
öt16_t
Ë
Àn
);

221 
	gw16_tmp
 = 6 + 
fs_shi·
 - 
WebRtcS∂_N‹mW32
(
WEBRTC_SPL_MUL_16_16
(
w16_expmax
, w16_expmax));

222 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(
w16_tmp
,0);

223 
	gw32_En_ﬁd_‰ame
 = 
WebRtcNëEQ_DŸW16W16
(
pw16_ex∑nded
,Öw16_ex∑nded, 
Àn
, 
w16_tmp
);

226 
	gw16_tmp2
 = 6 + 
fs_shi·
 - 
WebRtcS∂_N‹mW32
(
WEBRTC_SPL_MUL_16_16
(
w16_√wmax
, w16_newmax));

227 
	gw16_tmp2
 = 
WEBRTC_SPL_MAX
(
w16_tmp2
,0);

228 
	gw32_En_√w_‰ame
 = 
WebRtcNëEQ_DŸW16W16
(
pw16_decoded
,Öw16_decoded, 
Àn
, 
w16_tmp2
);

231 i‡(
	gw16_tmp2
 > 
	gw16_tmp
)

233 
	gw32_En_ﬁd_‰ame
 = 
WEBRTC_SPL_RSHIFT_W32
(
w32_En_ﬁd_‰ame
, (
w16_tmp2
-
w16_tmp
));

237 
	gw32_En_√w_‰ame
 = 
WEBRTC_SPL_RSHIFT_W32
(
w32_En_√w_‰ame
, (
w16_tmp
-
w16_tmp2
));

241 i‡(
	gw32_En_√w_‰ame
 > 
	gw32_En_ﬁd_‰ame
)

244 
	gw16_tmp
 = 
WebRtcS∂_N‹mW32
(
w32_En_√w_‰ame
) - 17;

245 
	gw32_En_√w_‰ame
 = 
WEBRTC_SPL_SHIFT_W32
(
w32_En_√w_‰ame
, 
w16_tmp
);

251 
	gw16_tmp
 = 
w16_tmp
 + 14;

252 
	gw32_En_ﬁd_‰ame
 = 
WEBRTC_SPL_SHIFT_W32
(
w32_En_ﬁd_‰ame
, 
w16_tmp
);

253 
	gw16_tmp


254 
WebRtcS∂_DivW32W16ResW16
(
w32_En_ﬁd_‰ame
, (
öt16_t
Ë
w32_En_√w_‰ame
);

256 
	gw16_muãd
 = (
öt16_t
Ë
WebRtcS∂_SqπFlo‹
(

257 
WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
w16_tmp
,14));

261 
	gw16_muãd
 = 16384;

265 i‡(
	gw16_muãd
 > 
	gö°
->
	gw16_muãFa˘‹
)

267 
	gö°
->
	gw16_muãFa˘‹
 = 
WEBRTC_SPL_MIN
(
w16_muãd
, 16384);

270 #ifde‡
NETEQ_STEREO


273 i‡(
	gmsInfo
 =
NULL
)

276  
MASTER_SLAVE_ERROR
;

280 i‡((
	gmsInfo
->
	gmsMode
 =
NETEQ_MASTER
Ë|| (
msInfo
->
msMode
 =
NETEQ_MONO
))

289 i‡(
ö°
->
fs
 == 8000)

291 
WebRtcS∂_Downßm∂eFa°
(&
pw16_ex∑nded
[2], (
öt16_t
Ë(
w16_ex∑ndedLí
 - 2),

292 
pw16_ex∑ndedLB
, (
öt16_t
) (100),

293 (
öt16_t
*Ë
WebRtcNëEQ_kDownßm∂e8kHzTbl
, (int16_t) 3,

294 (
öt16_t
) 2, (int16_t) 0);

295 i‡(
	gw16_decodedLí
 <= 80)

298 
öt16_t
 
ãmp_Àn
 = 
w16_decodedLí
 - 2;

299 
	gw16_tmp
 = 
ãmp_Àn
 / 2;

300 
WebRtcS∂_Downßm∂eFa°
(&
pw16_decoded
[2], 
ãmp_Àn
,

301 
pw16_decodedLB
, 
w16_tmp
,

302 (
öt16_t
*Ë
WebRtcNëEQ_kDownßm∂e8kHzTbl
,

303 (
öt16_t
) 3, (int16_t) 2, (int16_t) 0);

304 
WebRtcS∂_MemSëW16
(&
pw16_decodedLB
[
w16_tmp
], 0, (40 - w16_tmp));

308 
WebRtcS∂_Downßm∂eFa°
(&
pw16_decoded
[2],

309 (
öt16_t
Ë(
w16_decodedLí
 - 2), 
pw16_decodedLB
,

310 (
öt16_t
Ë(40), (öt16_t*Ë
WebRtcNëEQ_kDownßm∂e8kHzTbl
,

311 (
öt16_t
) 3, (int16_t) 2, (int16_t) 0);

313 #ifde‡
NETEQ_WIDEBAND


315 i‡(
	gö°
->
	gfs
==16000)

317 
WebRtcS∂_Downßm∂eFa°
(

318 &
pw16_ex∑nded
[4], (
öt16_t
)(
w16_ex∑ndedLí
-4),

319 
pw16_ex∑ndedLB
, (
öt16_t
)(100),

320 (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e16kHzTbl
, (int16_t)5,

321 (
öt16_t
)4, (int16_t)0);

322 i‡(
	gw16_decodedLí
<=160)

325 
öt16_t
 
ãmp_Àn
 = 
w16_decodedLí
 - 4;

326 
	gw16_tmp
 = 
ãmp_Àn
 / 4;

327 
WebRtcS∂_Downßm∂eFa°
(

328 &
pw16_decoded
[4], 
ãmp_Àn
,

329 
pw16_decodedLB
, 
w16_tmp
,

330 (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e16kHzTbl
, (int16_t)5,

331 (
öt16_t
)4, (int16_t)0);

332 
WebRtcS∂_MemSëW16
(&
pw16_decodedLB
[
w16_tmp
], 0, (40-w16_tmp));

336 
WebRtcS∂_Downßm∂eFa°
(

337 &
pw16_decoded
[4], (
öt16_t
)(
w16_decodedLí
-4),

338 
pw16_decodedLB
, (
öt16_t
)(40),

339 (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e16kHzTbl
, (int16_t)5,

340 (
öt16_t
)4, (int16_t)0);

343 #ifde‡
NETEQ_32KHZ_WIDEBAND


345 i‡(
	gö°
->
	gfs
==32000)

350 
WebRtcS∂_Downßm∂eFa°
(

351 &
pw16_ex∑nded
[6], (
öt16_t
)(
w16_ex∑ndedLí
-6),

352 
pw16_ex∑ndedLB
, (
öt16_t
)(100),

353 (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e32kHzTbl
, (int16_t)7,

354 (
öt16_t
)8, (int16_t)0);

355 i‡(
	gw16_decodedLí
<=320)

358 
öt16_t
 
ãmp_Àn
 = 
w16_decodedLí
 - 6;

359 
	gw16_tmp
 = 
ãmp_Àn
 / 8;

360 
WebRtcS∂_Downßm∂eFa°
(

361 &
pw16_decoded
[6], 
ãmp_Àn
,

362 
pw16_decodedLB
, 
w16_tmp
,

363 (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e32kHzTbl
, (int16_t)7,

364 (
öt16_t
)8, (int16_t)0);

365 
WebRtcS∂_MemSëW16
(&
pw16_decodedLB
[
w16_tmp
], 0, (40-w16_tmp));

369 
WebRtcS∂_Downßm∂eFa°
(

370 &
pw16_decoded
[6], (
öt16_t
)(
w16_decodedLí
-6),

371 
pw16_decodedLB
, (
öt16_t
)(40),

372 (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e32kHzTbl
, (int16_t)7,

373 (
öt16_t
)8, (int16_t)0);

376 #ifde‡
NETEQ_48KHZ_WIDEBAND


383 
WebRtcS∂_Downßm∂eFa°
(

384 &
pw16_ex∑nded
[6], (
öt16_t
)(
w16_ex∑ndedLí
-6),

385 
pw16_ex∑ndedLB
, (
öt16_t
)(100),

386 (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e48kHzTbl
, (int16_t)7,

387 (
öt16_t
)12, (int16_t)0);

388 i‡(
	gw16_decodedLí
<=320)

396 
öt16_t
 
ãmp_Àn
 = 
w16_decodedLí
 - 6;

397 
	gw16_tmp
 = 
ãmp_Àn
 / 8;

398 
WebRtcS∂_Downßm∂eFa°
(

399 &
pw16_decoded
[6], 
ãmp_Àn
,

400 
pw16_decodedLB
, 
w16_tmp
,

401 (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e48kHzTbl
, (int16_t)7,

402 (
öt16_t
)12, (int16_t)0);

403 
WebRtcS∂_MemSëW16
(&
pw16_decodedLB
[
w16_tmp
], 0, (40-w16_tmp));

407 
WebRtcS∂_Downßm∂eFa°
(

408 &
pw16_decoded
[6], (
öt16_t
)(
w16_decodedLí
-6),

409 
pw16_decodedLB
, (
öt16_t
)(40),

410 (
öt16_t
*)
WebRtcNëEQ_kDownßm∂e48kHzTbl
, (int16_t)7,

411 (
öt16_t
)12, (int16_t)0);

417 
	gw16_tmp
 = 
WebRtcS∂_DivW32W16ResW16
((
öt32_t
Ë
ö°
->
Ex∑ndIn°
.
w16_maxLag
,

418 (
öt16_t
Ë(
fs_mu…
 * 2)) + 1;

419 
	gw16_°›Pos
 = 
WEBRTC_SPL_MIN
(60, 
w16_tmp
);

420 
	gw32_tmp
 = 
WEBRTC_SPL_MUL_16_16
(
w16_expmax
, 
w16_√wmax
);

421 i‡(
	gw32_tmp
 > 26843546)

423 
	gw16_tmp
 = 3;

427 
	gw16_tmp
 = 0;

430 
WebRtcNëEQ_CrossC‹r
(
pw32_c‹r
, 
pw16_decodedLB
, 
pw16_ex∑ndedLB
, 40,

431 (
öt16_t
Ë
w16_°›Pos
, 
w16_tmp
, 1);

434 
WebRtcS∂_MemSëW16
(
pw16_c‹rVec
, 0, (4 + 60 + 4));

435 
	gw32_tmp
 = 
WebRtcS∂_MaxAbsVÆueW32
(
pw32_c‹r
, 
w16_°›Pos
);

436 
	gw16_tmp
 = 17 - 
WebRtcS∂_N‹mW32
(
w32_tmp
);

437 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(0, 
w16_tmp
);

439 
WebRtcS∂_Ve˘‹BôShi·W32ToW16
(
pw16_c‹r
, 
w16_°›Pos
, 
pw32_c‹r
, 
w16_tmp
);

445 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(0, WEBRTC_SPL_MAX(
w16_°¨tPos
,

446 
ö°
->
time°ampsPîCÆl
+ö°->
Ex∑ndIn°
.
w16_ovîœp
Ë- 
w16_decodedLí
);

448 
	gw16_tmp2
 = 
WebRtcS∂_DivW32W16ResW16
((
öt32_t
Ë
w16_tmp
,

449 (
öt16_t
Ë(
fs_mu…
 << 1));

451 #ifde‡
NETEQ_STEREO


454 i‡((
	gmsInfo
->
	gmsMode
 =
NETEQ_MASTER
Ë|| (
msInfo
->
msMode
 =
NETEQ_MONO
))

457 
WebRtcNëEQ_PókDëe˘i⁄
(&
pw16_c‹r
[
w16_tmp2
], 
w16_°›Pos
, 1, 
fs_mu…
, &
w16_be°Index
,

458 &
w16_be°VÆ
);

459 
	gw16_be°Index
 +
w16_tmp
;

460 
	gmsInfo
->
	gbe°Index
 = 
w16_be°Index
;

462 i‡(
	gmsInfo
->
	gmsMode
 =
NETEQ_SLAVE
)

465 
w16_be°Index
 = 
msInfo
->
be°Index
;

470  
	gMASTER_SLAVE_ERROR
;

476 
WebRtcNëEQ_PókDëe˘i⁄
(&
pw16_c‹r
[
w16_tmp2
], 
w16_°›Pos
, 1, 
fs_mu…
, &
w16_be°Index
,

477 &
w16_be°VÆ
);

478 
	gw16_be°Index
 +
w16_tmp
;

487 (
	gw16_be°Index
 + 
	gw16_decodedLí
Ë< (
	gö°
->
	gtime°ampsPîCÆl


488 + 
	gö°
->
	gEx∑ndIn°
.
	gw16_ovîœp
Ë|| 
	gw16_be°Index
 + 
	gw16_decodedLí
 < 
	gw16_°¨tPos
)

490 
	gw16_be°Index
 +
w16_√wLí
;

492 
	gpw16_decodedOut
 = 
pw16_outD©a
 + 
w16_be°Index
;

495 
	gw16_öãΩLí
 = 
WEBRTC_SPL_MIN
(60*
fs_mu…
,

496 
w16_ex∑ndedLí
-
w16_be°Index
);

497 
	gw16_öãΩLí
 = 
WEBRTC_SPL_MIN
(
w16_öãΩLí
, 
w16_decodedLí
);

498 
	gw16_öc
 = 
WebRtcS∂_DivW32W16ResW16
(4194,

499 
fs_mu…
);

500 i‡(
	gö°
->
	gw16_muãFa˘‹
 < 16384)

502 
WebRtcNëEQ_UnmuãSig«l
(
pw16_decoded
, &
ö°
->
w16_muãFa˘‹
,Öw16_decoded, 
w16_öc
,

503 (
öt16_t
Ë
w16_öãΩLí
);

504 
WebRtcNëEQ_UnmuãSig«l
(&
pw16_decoded
[
w16_öãΩLí
], &
ö°
->
w16_muãFa˘‹
,

505 &
pw16_decodedOut
[
w16_öãΩLí
], 
w16_öc
,

506 (
öt16_t
Ë(
w16_decodedLí
 - 
w16_öãΩLí
));

512 
WEBRTC_SPL_MEMMOVE_W16
(&
pw16_decodedOut
[
w16_öãΩLí
], &
pw16_decoded
[w16_interpLen],

513 (
w16_decodedLí
-
w16_öãΩLí
));

517 
	gw16_öc
 = 
WebRtcS∂_DivW32W16ResW16
(16384, (
öt16_t
Ë(
w16_öãΩLí
 + 1));

518 
	gw16_°¨tÁ˘
 = (16384 - 
w16_öc
);

519 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_ex∑nded
, 
w16_be°Index
);

520 
WebRtcNëEQ_MixVoi˚Unvoi˚
(
pw16_decodedOut
, &
pw16_ex∑nded
[
w16_be°Index
], 
pw16_decoded
,

521 &
w16_°¨tÁ˘
, 
w16_öc
, 
w16_öãΩLí
);

523 
	gö°
->
	gw16_mode
 = 
MODE_MERGE
;

524 
	gö°
->
	gEx∑ndIn°
.
	gw16_c⁄£cExp
 = 0;

527 *
	gpw16_Àn
 = 
w16_be°Index
 + 
w16_decodedLí
 - 
w16_°¨tPos
;

530 
	gö°
->
	gw16_c⁄˚ÆedTS
 +(*
pw16_Àn
 - 
w16_decodedLí
);

531 
	gö°
->
	gw16_c⁄˚ÆedTS
 = 
WEBRTC_SPL_MAX
(0, 
ö°
->
w16_c⁄˚ÆedTS
);

534 i‡(
	gö°
->
	gEx∑ndIn°
.
	gw16_ex∑ndMuãFa˘‹
 == 0)

537 
ö°
->
°©In°
.
ex∑ndedNoi£Sam∂es
 +(*
pw16_Àn
 - 
w16_decodedLí
);

539 
	gö°
->
	ga˘ivôy_°©s
.
	gmîge_ex∑nd_bgn_ßm∂es
 +=

540 (*
pw16_Àn
 - 
w16_decodedLí
);

545 
	gö°
->
	g°©In°
.
	gex∑ndedVoi˚Sam∂es
 +(*
pw16_Àn
 - 
w16_decodedLí
);

547 
	gö°
->
	ga˘ivôy_°©s
.
	gmîge_ex∑nd_n‹mÆ_ßm∂es
 +=

548 (*
pw16_Àn
 - 
w16_decodedLí
);

550 
	gö°
->
	g°©In°
.
	gex∑ndLígth
 +(*
pw16_Àn
 - 
w16_decodedLí
);

555 
WEBRTC_SPL_MEMCPY_W16
(&
ö°
->
•ìchBuf„r
[ö°->
curPosôi⁄
], 
pw16_outD©a
, 
w16_°¨tPos
);

560 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, &pw16_outD©a[
w16_°¨tPos
], (*
pw16_Àn
));

565 #unde‡
SCRATCH_pw16_ex∑nded


566 #unde‡
SCRATCH_pw16_ex∑ndedLB


567 #unde‡
SCRATCH_pw16_decodedLB


568 #unde‡
SCRATCH_pw32_c‹r


569 #unde‡
SCRATCH_pw16_c‹rVec


570 #unde‡
SCRATCH_NETEQ_EXPAND


	@min_distortion.c

15 
	~"d•_hñpfun˘i⁄s.h
"

17 
	~"sig«l_¥o˚ssög_libøry.h
"

19 
öt16_t
 
	$WebRtcNëEQ_MöDi°‹ti⁄
(c⁄° 
öt16_t
 *
pw16_d©a
,

20 
öt16_t
 
w16_möLag
, i¡16_à
w16_maxLag
,

21 
öt16_t
 
Àn
, 
öt32_t
 *
pw16_di°
)

23 
i
, 
j
;

24 c⁄° 
öt16_t
 *
pw16_d©a1
;

25 c⁄° 
öt16_t
 *
pw16_d©a2
;

26 
öt32_t
 
w32_diff
;

27 
öt32_t
 
w32_sumdiff
;

28 
öt16_t
 
be°Index
 = -1;

29 
öt32_t
 
möDi°
 = 
WEBRTC_SPL_WORD32_MAX
;

31 
i
 = 
w16_möLag
; i <
w16_maxLag
; i++)

33 
w32_sumdiff
 = 0;

34 
pw16_d©a1
 = 
pw16_d©a
;

35 
pw16_d©a2
 = 
pw16_d©a
 - 
i
;

37 
j
 = 0; j < 
Àn
; j++)

39 
w32_diff
 = 
pw16_d©a1
[
j
] - 
pw16_d©a2
[j];

40 
w32_sumdiff
 +
	`WEBRTC_SPL_ABS_W32
(
w32_diff
);

44 i‡(
w32_sumdiff
 < 
möDi°
)

46 
möDi°
 = 
w32_sumdiff
;

47 
be°Index
 = 
i
;

51 *
pw16_di°
 = 
möDi°
;

53  
be°Index
;

54 
	}
}

	@min_max_operations.c

27 
	~"sig«l_¥o˚ssög_libøry.h
"

29 
	~<°dlib.h
>

36 
öt16_t
 
	$WebRtcS∂_MaxAbsVÆueW16C
(c⁄° 
öt16_t
* 
ve˘‹
, 
Àngth
) {

37 
i
 = 0, 
absﬁuã
 = 0, 
maximum
 = 0;

39 i‡(
ve˘‹
 =
NULL
 || 
Àngth
 <= 0) {

43 
i
 = 0; i < 
Àngth
; i++) {

44 
absﬁuã
 = 
	`abs
(()
ve˘‹
[
i
]);

46 i‡(
absﬁuã
 > 
maximum
) {

47 
maximum
 = 
absﬁuã
;

52 i‡(
maximum
 > 
WEBRTC_SPL_WORD16_MAX
) {

53 
maximum
 = 
WEBRTC_SPL_WORD16_MAX
;

56  (
öt16_t
)
maximum
;

57 
	}
}

60 
öt32_t
 
	$WebRtcS∂_MaxAbsVÆueW32C
(c⁄° 
öt32_t
* 
ve˘‹
, 
Àngth
) {

64 
uöt32_t
 
absﬁuã
 = 0, 
maximum
 = 0;

65 
i
 = 0;

67 i‡(
ve˘‹
 =
NULL
 || 
Àngth
 <= 0) {

71 
i
 = 0; i < 
Àngth
; i++) {

72 
absﬁuã
 = 
	`abs
(()
ve˘‹
[
i
]);

73 i‡(
absﬁuã
 > 
maximum
) {

74 
maximum
 = 
absﬁuã
;

78 
maximum
 = 
	`WEBRTC_SPL_MIN
(maximum, 
WEBRTC_SPL_WORD32_MAX
);

80  (
öt32_t
)
maximum
;

81 
	}
}

84 
öt16_t
 
	$WebRtcS∂_MaxVÆueW16C
(c⁄° 
öt16_t
* 
ve˘‹
, 
Àngth
) {

85 
öt16_t
 
maximum
 = 
WEBRTC_SPL_WORD16_MIN
;

86 
i
 = 0;

88 i‡(
ve˘‹
 =
NULL
 || 
Àngth
 <= 0) {

89  
maximum
;

92 
i
 = 0; i < 
Àngth
; i++) {

93 i‡(
ve˘‹
[
i
] > 
maximum
)

94 
maximum
 = 
ve˘‹
[
i
];

96  
maximum
;

97 
	}
}

100 
öt32_t
 
	$WebRtcS∂_MaxVÆueW32C
(c⁄° 
öt32_t
* 
ve˘‹
, 
Àngth
) {

101 
öt32_t
 
maximum
 = 
WEBRTC_SPL_WORD32_MIN
;

102 
i
 = 0;

104 i‡(
ve˘‹
 =
NULL
 || 
Àngth
 <= 0) {

105  
maximum
;

108 
i
 = 0; i < 
Àngth
; i++) {

109 i‡(
ve˘‹
[
i
] > 
maximum
)

110 
maximum
 = 
ve˘‹
[
i
];

112  
maximum
;

113 
	}
}

116 
öt16_t
 
	$WebRtcS∂_MöVÆueW16C
(c⁄° 
öt16_t
* 
ve˘‹
, 
Àngth
) {

117 
öt16_t
 
möimum
 = 
WEBRTC_SPL_WORD16_MAX
;

118 
i
 = 0;

120 i‡(
ve˘‹
 =
NULL
 || 
Àngth
 <= 0) {

121  
möimum
;

124 
i
 = 0; i < 
Àngth
; i++) {

125 i‡(
ve˘‹
[
i
] < 
möimum
)

126 
möimum
 = 
ve˘‹
[
i
];

128  
möimum
;

129 
	}
}

132 
öt32_t
 
	$WebRtcS∂_MöVÆueW32C
(c⁄° 
öt32_t
* 
ve˘‹
, 
Àngth
) {

133 
öt32_t
 
möimum
 = 
WEBRTC_SPL_WORD32_MAX
;

134 
i
 = 0;

136 i‡(
ve˘‹
 =
NULL
 || 
Àngth
 <= 0) {

137  
möimum
;

140 
i
 = 0; i < 
Àngth
; i++) {

141 i‡(
ve˘‹
[
i
] < 
möimum
)

142 
möimum
 = 
ve˘‹
[
i
];

144  
möimum
;

145 
	}
}

148 
	$WebRtcS∂_MaxAbsIndexW16
(c⁄° 
öt16_t
* 
ve˘‹
, 
Àngth
) {

151 
i
 = 0, 
absﬁuã
 = 0, 
maximum
 = 0, 
ödex
 = 0;

153 i‡(
ve˘‹
 =
NULL
 || 
Àngth
 <= 0) {

157 
i
 = 0; i < 
Àngth
; i++) {

158 
absﬁuã
 = 
	`abs
(()
ve˘‹
[
i
]);

160 i‡(
absﬁuã
 > 
maximum
) {

161 
maximum
 = 
absﬁuã
;

162 
ödex
 = 
i
;

166  
ödex
;

167 
	}
}

170 
	$WebRtcS∂_MaxIndexW16
(c⁄° 
öt16_t
* 
ve˘‹
, 
Àngth
) {

171 
i
 = 0, 
ödex
 = 0;

172 
öt16_t
 
maximum
 = 
WEBRTC_SPL_WORD16_MIN
;

174 i‡(
ve˘‹
 =
NULL
 || 
Àngth
 <= 0) {

178 
i
 = 0; i < 
Àngth
; i++) {

179 i‡(
ve˘‹
[
i
] > 
maximum
) {

180 
maximum
 = 
ve˘‹
[
i
];

181 
ödex
 = 
i
;

185  
ödex
;

186 
	}
}

189 
	$WebRtcS∂_MaxIndexW32
(c⁄° 
öt32_t
* 
ve˘‹
, 
Àngth
) {

190 
i
 = 0, 
ödex
 = 0;

191 
öt32_t
 
maximum
 = 
WEBRTC_SPL_WORD32_MIN
;

193 i‡(
ve˘‹
 =
NULL
 || 
Àngth
 <= 0) {

197 
i
 = 0; i < 
Àngth
; i++) {

198 i‡(
ve˘‹
[
i
] > 
maximum
) {

199 
maximum
 = 
ve˘‹
[
i
];

200 
ödex
 = 
i
;

204  
ödex
;

205 
	}
}

208 
	$WebRtcS∂_MöIndexW16
(c⁄° 
öt16_t
* 
ve˘‹
, 
Àngth
) {

209 
i
 = 0, 
ödex
 = 0;

210 
öt16_t
 
möimum
 = 
WEBRTC_SPL_WORD16_MAX
;

212 i‡(
ve˘‹
 =
NULL
 || 
Àngth
 <= 0) {

216 
i
 = 0; i < 
Àngth
; i++) {

217 i‡(
ve˘‹
[
i
] < 
möimum
) {

218 
möimum
 = 
ve˘‹
[
i
];

219 
ödex
 = 
i
;

223  
ödex
;

224 
	}
}

227 
	$WebRtcS∂_MöIndexW32
(c⁄° 
öt32_t
* 
ve˘‹
, 
Àngth
) {

228 
i
 = 0, 
ödex
 = 0;

229 
öt32_t
 
möimum
 = 
WEBRTC_SPL_WORD32_MAX
;

231 i‡(
ve˘‹
 =
NULL
 || 
Àngth
 <= 0) {

235 
i
 = 0; i < 
Àngth
; i++) {

236 i‡(
ve˘‹
[
i
] < 
möimum
) {

237 
möimum
 = 
ve˘‹
[
i
];

238 
ödex
 = 
i
;

242  
ödex
;

243 
	}
}

	@mix_voice_unvoice.c

16 
	~"d•_hñpfun˘i⁄s.h
"

18 
	~"sig«l_¥o˚ssög_libøry.h
"

20 
	$WebRtcNëEQ_MixVoi˚Unvoi˚
(
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_voi˚dVec
,

21 
öt16_t
 *
pw16_unvoi˚dVec
,

22 
öt16_t
 *
w16_cuºít_v‰a˘i⁄
,

23 
öt16_t
 
w16_v‰a˘i⁄_ch™ge
, i¡16_à
N
)

25 
i
;

26 
öt16_t
 
w16_tmp2
;

27 
öt16_t
 
v‰a˘i⁄
 = *
w16_cuºít_v‰a˘i⁄
;

29 
w16_tmp2
 = 16384 - 
v‰a˘i⁄
;

30 
i
 = 0; i < 
N
; i++)

32 
pw16_outD©a
[
i
] = (
öt16_t
Ë
	`WEBRTC_SPL_RSHIFT_W32
(

33 
	`WEBRTC_SPL_MUL_16_16
(
v‰a˘i⁄
, 
pw16_voi˚dVec
[
i
]) +

34 
	`WEBRTC_SPL_MUL_16_16
(
w16_tmp2
, 
pw16_unvoi˚dVec
[
i
]) + 8192,

36 
v‰a˘i⁄
 -
w16_v‰a˘i⁄_ch™ge
;

37 
w16_tmp2
 +
w16_v‰a˘i⁄_ch™ge
;

39 *
w16_cuºít_v‰a˘i⁄
 = 
v‰a˘i⁄
;

40 
	}
}

	@mute_signal.c

15 
	~"d•_hñpfun˘i⁄s.h
"

17 
	~"sig«l_¥o˚ssög_libøry.h
"

19 
	$WebRtcNëEQ_MuãSig«l
(
öt16_t
 *
pw16_öout
, i¡16_à
muãSl›e
,

20 
öt16_t
 
N
)

22 
i
;

23 
öt32_t
 
w32_tmp
 = 1048608;

25 
i
 = 0; i < 
N
; i++)

27 
pw16_öout
[
i
]

28 (
öt16_t
Ë((
	`WEBRTC_SPL_MUL_16_16
((öt16_t)(
w32_tmp
>>6), 
pw16_öout
[
i
])

30 
w32_tmp
 -
muãSl›e
;

32 
	}
}

	@neteq_defines.h

109 #i‡!
deföed
 
NETEQ_DEFINES_H


110 
	#NETEQ_DEFINES_H


	)

129 
	#DSP_INSTR_NORMAL
 0x1000

	)

132 
	#DSP_INSTR_MERGE
 0x2000

	)

136 
	#DSP_INSTR_EXPAND
 0x3000

	)

139 
	#DSP_INSTR_ACCELERATE
 0x4000

	)

142 
	#DSP_INSTR_DO_RFC3389CNG
 0x5000

	)

145 
	#DSP_INSTR_DTMF_GENERATE
 0x6000

	)

149 
	#DSP_INSTR_NORMAL_ONE_DESC
 0x7000

	)

152 
	#DSP_INSTR_DO_CODEC_INTERNAL_CNG
 0x8000

	)

155 
	#DSP_INSTR_PREEMPTIVE_EXPAND
 0x9000

	)

158 
	#DSP_INSTR_DO_ALTERNATIVE_PLC
 0xB000

	)

161 
	#DSP_INSTR_DO_ALTERNATIVE_PLC_INC_TS
 0xC000

	)

164 
	#DSP_INSTR_DO_AUDIO_REPETITION
 0xD000

	)

167 
	#DSP_INSTR_DO_AUDIO_REPETITION_INC_TS
 0xE000

	)

170 
	#DSP_INSTR_FADE_TO_BGN
 0xF000

	)

177 
	#DSP_CODEC_NO_CHANGE
 0x0100

	)

178 
	#DSP_CODEC_NEW_CODEC
 0x0200

	)

179 
	#DSP_CODEC_ADD_LATE_PKT
 0x0300

	)

180 
	#DSP_CODEC_RESET
 0x0400

	)

181 
	#DSP_DTMF_PAYLOAD
 0x0010

	)

192 
	#DSP_CODEC_MASK_RED_FLAG
 0x7FFF

	)

193 
	#DSP_CODEC_RED_FLAG
 0x8000

	)

207 
	#MODE_NORMAL
 0x0000

	)

208 
	#MODE_EXPAND
 0x0001

	)

209 
	#MODE_MERGE
 0x0002

	)

210 
	#MODE_SUCCESS_ACCELERATE
 0x0003

	)

211 
	#MODE_UNSUCCESS_ACCELERATE
 0x0004

	)

212 
	#MODE_RFC3389CNG
 0x0005

	)

213 
	#MODE_LOWEN_ACCELERATE
 0x0006

	)

214 
	#MODE_DTMF
 0x0007

	)

215 
	#MODE_ONE_DESCRIPTOR
 0x0008

	)

216 
	#MODE_CODEC_INTERNAL_CNG
 0x0009

	)

217 
	#MODE_SUCCESS_PREEMPTIVE
 0x000A

	)

218 
	#MODE_UNSUCCESS_PREEMPTIVE
 0x000B

	)

219 
	#MODE_LOWEN_PREEMPTIVE
 0x000C

	)

220 
	#MODE_FADE_TO_BGN
 0x000D

	)

222 
	#MODE_ERROR
 0x0010

	)

224 
	#MODE_AWAITING_CODEC_PTR
 0x0100

	)

226 
	#MODE_BGN_ONLY
 0x0200

	)

228 
	#MODE_MASTER_DTMF_SIGNAL
 0x0400

	)

230 
	#MODE_USING_STEREO
 0x0800

	)

238 #i‡(
deföed
(
NETEQ_ALL_SPECIAL_CODECS
))

239 
	#NETEQ_CNG_CODEC


	)

240 
	#NETEQ_ATEVENT_DECODE


	)

241 
	#NETEQ_RED_CODEC


	)

242 
	#NETEQ_VAD


	)

243 
	#NETEQ_ARBITRARY_CODEC


	)

246 #i‡(
deföed
(
NETEQ_ALL_NB_CODECS
))

247 
	#NETEQ_PCM16B_CODEC


	)

248 
	#NETEQ_G711_CODEC


	)

249 
	#NETEQ_ILBC_CODEC


	)

250 
	#NETEQ_G729_CODEC


	)

251 
	#NETEQ_G726_CODEC


	)

252 
	#NETEQ_GSMFR_CODEC


	)

253 
	#NETEQ_OPUS_CODEC


	)

254 
	#NETEQ_AMR_CODEC


	)

257 #i‡(
deföed
(
NETEQ_ALL_WB_CODECS
))

258 
	#NETEQ_ISAC_CODEC


	)

259 
	#NETEQ_G722_CODEC


	)

260 
	#NETEQ_G722_1_CODEC


	)

261 
	#NETEQ_G729_1_CODEC


	)

262 
	#NETEQ_OPUS_CODEC


	)

263 
	#NETEQ_SPEEX_CODEC


	)

264 
	#NETEQ_AMRWB_CODEC


	)

265 
	#NETEQ_WIDEBAND


	)

268 #i‡(
deföed
(
NETEQ_ALL_WB32_CODECS
))

269 
	#NETEQ_ISAC_SWB_CODEC


	)

270 
	#NETEQ_32KHZ_WIDEBAND


	)

271 
	#NETEQ_G722_1C_CODEC


	)

272 
	#NETEQ_CELT_CODEC


	)

273 
	#NETEQ_OPUS_CODEC


	)

276 #i‡(
deföed
(
NETEQ_VOICEENGINE_CODECS
))

278 
	#NETEQ_CNG_CODEC


	)

279 
	#NETEQ_ATEVENT_DECODE


	)

280 
	#NETEQ_RED_CODEC


	)

281 
	#NETEQ_VAD


	)

282 
	#NETEQ_ARBITRARY_CODEC


	)

285 
	#NETEQ_PCM16B_CODEC


	)

286 
	#NETEQ_G711_CODEC


	)

287 
	#NETEQ_ILBC_CODEC


	)

288 
	#NETEQ_AMR_CODEC


	)

289 
	#NETEQ_G729_CODEC


	)

290 
	#NETEQ_GSMFR_CODEC


	)

293 
	#NETEQ_WIDEBAND


	)

294 
	#NETEQ_ISAC_CODEC


	)

295 
	#NETEQ_G722_CODEC


	)

296 
	#NETEQ_G722_1_CODEC


	)

297 
	#NETEQ_G729_1_CODEC


	)

298 
	#NETEQ_AMRWB_CODEC


	)

299 
	#NETEQ_SPEEX_CODEC


	)

302 
	#NETEQ_ISAC_SWB_CODEC


	)

303 
	#NETEQ_32KHZ_WIDEBAND


	)

304 
	#NETEQ_G722_1C_CODEC


	)

305 
	#NETEQ_CELT_CODEC


	)

308 
	#NETEQ_OPUS_CODEC


	)

309 
	#NETEQ_ISAC_FB_CODEC


	)

312 #i‡(
deföed
(
NETEQ_ALL_CODECS
))

314 
	#NETEQ_CNG_CODEC


	)

315 
	#NETEQ_ATEVENT_DECODE


	)

316 
	#NETEQ_RED_CODEC


	)

317 
	#NETEQ_VAD


	)

318 
	#NETEQ_ARBITRARY_CODEC


	)

321 
	#NETEQ_PCM16B_CODEC


	)

322 
	#NETEQ_G711_CODEC


	)

323 
	#NETEQ_ILBC_CODEC


	)

324 
	#NETEQ_G729_CODEC


	)

325 
	#NETEQ_G726_CODEC


	)

326 
	#NETEQ_GSMFR_CODEC


	)

327 
	#NETEQ_AMR_CODEC


	)

330 
	#NETEQ_WIDEBAND


	)

331 
	#NETEQ_ISAC_CODEC


	)

332 
	#NETEQ_G722_CODEC


	)

333 
	#NETEQ_G722_1_CODEC


	)

334 
	#NETEQ_G729_1_CODEC


	)

335 
	#NETEQ_SPEEX_CODEC


	)

336 
	#NETEQ_AMRWB_CODEC


	)

339 
	#NETEQ_ISAC_SWB_CODEC


	)

340 
	#NETEQ_32KHZ_WIDEBAND


	)

341 
	#NETEQ_G722_1C_CODEC


	)

342 
	#NETEQ_CELT_CODEC


	)

345 
	#NETEQ_48KHZ_WIDEBAND


	)

346 
	#NETEQ_OPUS_CODEC


	)

347 
	#NETEQ_ISAC_FB


	)

351 #i‡
deföed
(
NETEQ_48KHZ_WIDEBAND
)

352 
	#NETEQ_MAX_FRAME_SIZE
 5760

	)

353 
	#NETEQ_MAX_OUTPUT_SIZE
 6480

	)

355 #ñi‡
deföed
(
NETEQ_32KHZ_WIDEBAND
)

356 
	#NETEQ_MAX_FRAME_SIZE
 3840

	)

357 
	#NETEQ_MAX_OUTPUT_SIZE
 4320

	)

359 #ñi‡
deföed
(
NETEQ_WIDEBAND
)

360 
	#NETEQ_MAX_FRAME_SIZE
 1920

	)

361 
	#NETEQ_MAX_OUTPUT_SIZE
 2160

	)

364 
	#NETEQ_MAX_FRAME_SIZE
 960

	)

365 
	#NETEQ_MAX_OUTPUT_SIZE
 1080

	)

371 
	#NETEQ_STEREO


	)

	@neteq_error_codes.h

18 #i‡!
deföed
 
NETEQ_ERROR_CODES_H


19 
	#NETEQ_ERROR_CODES_H


	)

22 
	#NETEQ_OTHER_ERROR
 -1000

	)

25 
	#FAULTY_INSTRUCTION
 -1001

	)

26 
	#FAULTY_NETWORK_TYPE
 -1002

	)

27 
	#FAULTY_DELAYVALUE
 -1003

	)

28 
	#FAULTY_PLAYOUTMODE
 -1004

	)

29 
	#CORRUPT_INSTANCE
 -1005

	)

30 
	#ILLEGAL_MASTER_SLAVE_SWITCH
 -1006

	)

31 
	#MASTER_SLAVE_ERROR
 -1007

	)

34 
	#UNKNOWN_BUFSTAT_DECISION
 -2001

	)

35 
	#RECOUT_ERROR_DECODING
 -2002

	)

36 
	#RECOUT_ERROR_SAMPLEUNDERRUN
 -2003

	)

37 
	#RECOUT_ERROR_DECODED_TOO_MUCH
 -2004

	)

40 
	#RECIN_CNG_ERROR
 -3001

	)

41 
	#RECIN_UNKNOWNPAYLOAD
 -3002

	)

42 
	#RECIN_BUFFERINSERT_ERROR
 -3003

	)

43 
	#RECIN_SYNC_RTP_CHANGED_CODEC
 -3004

	)

44 
	#RECIN_SYNC_RTP_NOT_ACCEPTABLE
 -3005

	)

47 
	#PBUFFER_INIT_ERROR
 -4001

	)

48 
	#PBUFFER_INSERT_ERROR1
 -4002

	)

49 
	#PBUFFER_INSERT_ERROR2
 -4003

	)

50 
	#PBUFFER_INSERT_ERROR3
 -4004

	)

51 
	#PBUFFER_INSERT_ERROR4
 -4005

	)

52 
	#PBUFFER_INSERT_ERROR5
 -4006

	)

53 
	#UNKNOWN_G723_HEADER
 -4007

	)

54 
	#PBUFFER_NONEXISTING_PACKET
 -4008

	)

55 
	#PBUFFER_NOT_INITIALIZED
 -4009

	)

56 
	#AMBIGUOUS_ILBC_FRAME_SIZE
 -4010

	)

59 
	#CODEC_DB_FULL
 -5001

	)

60 
	#CODEC_DB_NOT_EXIST1
 -5002

	)

61 
	#CODEC_DB_NOT_EXIST2
 -5003

	)

62 
	#CODEC_DB_NOT_EXIST3
 -5004

	)

63 
	#CODEC_DB_NOT_EXIST4
 -5005

	)

64 
	#CODEC_DB_UNKNOWN_CODEC
 -5006

	)

65 
	#CODEC_DB_PAYLOAD_TAKEN
 -5007

	)

66 
	#CODEC_DB_UNSUPPORTED_CODEC
 -5008

	)

67 
	#CODEC_DB_UNSUPPORTED_FS
 -5009

	)

70 
	#DTMF_DEC_PARAMETER_ERROR
 -6001

	)

71 
	#DTMF_INSERT_ERROR
 -6002

	)

72 
	#DTMF_GEN_UNKNOWN_SAMP_FREQ
 -6003

	)

73 
	#DTMF_NOT_SUPPORTED
 -6004

	)

76 
	#RED_SPLIT_ERROR1
 -7001

	)

77 
	#RED_SPLIT_ERROR2
 -7002

	)

78 
	#RTP_TOO_SHORT_PACKET
 -7003

	)

79 
	#RTP_CORRUPT_PACKET
 -7004

	)

	@neteq_statistics.h

15 
	~"ty≥defs.h
"

17 #i‚de‡
NETEQ_STATISTICS_H


18 
	#NETEQ_STATISTICS_H


	)

27 
uöt32_t
 
	mex∑ndLígth
;

28 
uöt32_t
 
	m¥ìm±iveLígth
;

30 
uöt32_t
 
	mac˚ÀøãLígth
;

31 
	maddedSam∂es
;

34 
uöt32_t
 
	mex∑ndedVoi˚Sam∂es
;

35 
uöt32_t
 
	mex∑ndedNoi£Sam∂es
;

38 } 
	tDSPSèts_t
;

41 
	m¥ìm±ive_ex∑nd_bgn_ßm∂es
;

42 
	m¥ìm±ive_ex∑nd_n‹mÆ_ßm∂es
;

44 
	mex∑nd_bgn_ßm∂es
;

45 
	mex∑nd_n‹mÆ_ßm∂es
;

47 
	mmîge_ex∑nd_bgn_ßm∂es
;

48 
	mmîge_ex∑nd_n‹mÆ_ßm∂es
;

50 
	mac˚Àøã_bgn_ßm∂es
;

51 
	mac˚œøã_n‹mÆ_ßm∂es
;

52 } 
	tA˘ivôySèts
;

	@normal.c

14 
	~"d•.h
"

16 
	~"sig«l_¥o˚ssög_libøry.h
"

18 
	~"d•_hñpfun˘i⁄s.h
"

30 
	#SCRATCH_PW16_EXPANDED
 0

	)

31 #i‡(
deföed
(
NETEQ_48KHZ_WIDEBAND
))

32 
	#SCRATCH_NETEQ_EXPAND
 756

	)

33 #ñi‡(
deföed
(
NETEQ_32KHZ_WIDEBAND
))

34 
	#SCRATCH_NETEQ_EXPAND
 504

	)

35 #ñi‡(
deföed
(
NETEQ_WIDEBAND
))

36 
	#SCRATCH_NETEQ_EXPAND
 252

	)

38 
	#SCRATCH_NETEQ_EXPAND
 126

	)

67 
WebRtcNëEQ_N‹mÆ
(
DSPIn°_t
 *
ö°
,

68 #ifde‡
SCRATCH


69 
öt16_t
 *
pw16_s¸©chPå
,

71 
öt16_t
 *
pw16_decoded
, i¡16_à
Àn
,

72 
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_Àn
)

75 
	gi
;

76 
öt16_t
 
	gfs_mu…
;

77 
öt16_t
 
	gfs_shi·
;

78 
öt32_t
 
	gw32_En_•ìch
;

79 
öt16_t
 
	gíLí
;

80 
öt16_t
 
	gw16_muãd
;

81 
öt16_t
 
	gw16_öc
, 
	gw16_‰ac
;

82 
öt16_t
 
	gw16_tmp
;

83 
öt32_t
 
	gw32_tmp
;

86 i‡(
	gÀn
 < 0)

92 i‡(
	gÀn
 == 0)

95 *
pw16_Àn
 = 
Àn
;

96  (
	gÀn
);

99 
	gfs_mu…
 = 
WebRtcS∂_DivW32W16ResW16
(
ö°
->
fs
, 8000);

100 
	gfs_shi·
 = 30 - 
WebRtcS∂_N‹mW32
(
fs_mu…
);

106 i‡(
	gö°
->
	gw16_mode
 =
MODE_EXPAND
 || 
ö°
->
w16_mode
 =
MODE_FADE_TO_BGN
)

110 #ifde‡
SCRATCH


111 
öt16_t
 *
pw16_ex∑nded
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_EXPANDED
;

113 
öt16_t
 
	gpw16_ex∑nded
[
FSMULT
 * 125];

115 
öt16_t
 
	gex∑ndedLí
 = 0;

116 
öt16_t
 
	gw16_decodedMax
;

119 
	gw16_decodedMax
 = 
WebRtcS∂_MaxAbsVÆueW16
(
pw16_decoded
, (
öt16_t
Ë
Àn
);

123 
	gö°
->
	gEx∑ndIn°
.
	gw16_œgsPosôi⁄
 = 0;

124 
	gö°
->
	gEx∑ndIn°
.
	gw16_œgsDúe˘i⁄
 = 0;

125 
	gö°
->
	gEx∑ndIn°
.
	gw16_°›Mutög
 = 1;

128 
WebRtcNëEQ_Ex∑nd
(
ö°
,

129 #ifde‡
SCRATCH


130 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_EXPAND
,

132 
pw16_ex∑nded
, &
ex∑ndedLí
, (
öt16_t
Ë(
ö°
->
w16_mode
 =
MODE_FADE_TO_BGN
));

134 
	gö°
->
	gEx∑ndIn°
.
	gw16_°›Mutög
 = 0;

135 
	gö°
->
	gEx∑ndIn°
.
	gw16_c⁄£cExp
 = 0;

138 i‡(
	gö°
->
	gw16_mode
 =
MODE_FADE_TO_BGN
)

141 
ö°
->
w16_muãFa˘‹
 = 0;

146 
	gö°
->
	gw16_muãFa˘‹


147 (
öt16_t
Ë
WEBRTC_SPL_MUL_16_16_RSFT
(
ö°
->
w16_muãFa˘‹
,

148 
ö°
->
Ex∑ndIn°
.
w16_ex∑ndMuãFa˘‹
, 14);

152 
	gíLí
 = 
WEBRTC_SPL_MIN
(
fs_mu…
<<6, 
Àn
);

153 
	gw16_tmp
 = 6 + 
fs_shi·
 - 
WebRtcS∂_N‹mW32
(

154 
WEBRTC_SPL_MUL_16_16
(
w16_decodedMax
, w16_decodedMax));

155 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(
w16_tmp
, 0);

156 
	gw32_En_•ìch
 = 
WebRtcNëEQ_DŸW16W16
(
pw16_decoded
,Öw16_decoded, 
íLí
, 
w16_tmp
);

157 
	gw32_En_•ìch
 = 
WebRtcS∂_DivW32W16
(
w32_En_•ìch
, (
öt16_t
Ë(
íLí
 >> 
w16_tmp
));

159 i‡((
	gw32_En_•ìch
 !0Ë&& (
w32_En_•ìch
 > 
ö°
->
BGNIn°
.
w32_íîgy
))

162 
w16_tmp
 = 
WebRtcS∂_N‹mW32
(
w32_En_•ìch
) - 16;

164 
	gw32_tmp
 = 
WEBRTC_SPL_SHIFT_W32
(
ö°
->
BGNIn°
.
w32_íîgy
, (
w16_tmp
+14));

165 
	gw16_tmp
 = (
öt16_t
Ë
WEBRTC_SPL_SHIFT_W32
(
w32_En_•ìch
, 
w16_tmp
);

166 
	gw16_tmp
 = (
öt16_t
Ë
WebRtcS∂_DivW32W16
(
w32_tmp
, 
w16_tmp
);

167 
	gw16_muãd
 = (
öt16_t
Ë
WebRtcS∂_SqπFlo‹
(

168 
WEBRTC_SPL_LSHIFT_W32
((
öt32_t
Ë
w16_tmp
,

173 
	gw16_muãd
 = 16384;

175 i‡(
	gw16_muãd
 > 
	gö°
->
	gw16_muãFa˘‹
)

177 
	gö°
->
	gw16_muãFa˘‹
 = 
WEBRTC_SPL_MIN
(
w16_muãd
, 16384);

181 
	gw16_öc
 = 
WebRtcS∂_DivW32W16ResW16
(64, 
fs_mu…
);

182 
	gi
 = 0; i < 
	gÀn
; i++)

185 
	gw32_tmp
 = 
WEBRTC_SPL_MUL_16_16
(
pw16_decoded
[
i
], 
ö°
->
w16_muãFa˘‹
);

187 
	gpw16_decoded
[
i
] = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
((
w32_tmp
 + 8192), 14);

189 
	gö°
->
	gw16_muãFa˘‹
 = 
WEBRTC_SPL_MIN
(16384, (
ö°
->
w16_muãFa˘‹
+
w16_öc
));

196 
	gfs_shi·
 = 
WEBRTC_SPL_MIN
(3, 
fs_shi·
);

197 
	gw16_öc
 = 4 >> 
fs_shi·
;

198 
	gw16_‰ac
 = 
w16_öc
;

199 
	gi
 = 0; i < 8 * 
	gfs_mu…
; i++)

201 
	gpw16_decoded
[
i
] = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(

202 (
WEBRTC_SPL_MUL_16_16
(
w16_‰ac
, 
pw16_decoded
[
i
]) +

203 
WEBRTC_SPL_MUL_16_16
((32 - 
w16_‰ac
), 
pw16_ex∑nded
[
i
]) + 8),

205 
	gw16_‰ac
 +
w16_öc
;

208 #ifde‡
NETEQ_CNG_CODEC


210 i‡(
	gö°
->
	gw16_mode
==
MODE_RFC3389CNG
)

212 
öt16_t
 
pw16_CngI¡îp
[32];

214 
	gö°
->
	gw16_muãFa˘‹
 = 16384;

215 i‡(
	gö°
->
	gCNG_Codec_ö°
 !
NULL
)

218 if(
WebRtcCng_Gíî©e
(
ö°
->
CNG_Codec_ö°
,
pw16_CngI¡îp
, 32, 0)<0)

221 
WebRtcS∂_MemSëW16
(
pw16_CngI¡îp
, 0, 32);

230 
WEBRTC_SPL_MEMCPY_W16
(
pw16_CngI¡îp
, 
pw16_decoded
, 
fs_mu…
 * 8);

236 
	gfs_shi·
 = 
WEBRTC_SPL_MIN
(3, 
fs_shi·
);

237 
	gw16_öc
 = 4>>
fs_shi·
;

238 
	gw16_‰ac
 = 
w16_öc
;

239 
	gi
 = 0; i < 8 * 
	gfs_mu…
; i++)

241 
	gpw16_decoded
[
i
] = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(

242 (
WEBRTC_SPL_MUL_16_16
(
w16_‰ac
, 
pw16_decoded
[
i
]) +

243 
WEBRTC_SPL_MUL_16_16
((32-
w16_‰ac
), 
pw16_CngI¡îp
[
i
]) + 8),

245 
	gw16_‰ac
 +
w16_öc
;

250 i‡(
	gö°
->
	gw16_muãFa˘‹
 < 16384)

257 
	gw16_öc
 = 
WebRtcS∂_DivW32W16ResW16
(64, 
fs_mu…
);

258 
	gi
 = 0; i < 
	gÀn
; i++)

261 
	gw32_tmp
 = 
WEBRTC_SPL_MUL_16_16
(
pw16_decoded
[
i
], 
ö°
->
w16_muãFa˘‹
);

263 
	gpw16_decoded
[
i
] = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
((
w32_tmp
 + 8192), 14);

265 
	gö°
->
	gw16_muãFa˘‹
 = 
WEBRTC_SPL_MIN
(16384, (
ö°
->
w16_muãFa˘‹
+
w16_öc
));

269  
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, 
Àn
);

271 
	gö°
->
	gw16_mode
 = 
MODE_NORMAL
;

272 *
	gpw16_Àn
 = 
Àn
;

273  (
	gÀn
);

277 #unde‡
SCRATCH_PW16_EXPANDED


278 #unde‡
SCRATCH_NETEQ_EXPAND


	@opus_interface.h

11 #i‚de‡
WEBRTC_MODULES_AUDIO_CODING_CODECS_OPUS_INTERFACE_OPUS_INTERFACE_H_


12 
	#WEBRTC_MODULES_AUDIO_CODING_CODECS_OPUS_INTERFACE_OPUS_INTERFACE_H_


	)

14 
	~"ty≥defs.h
"

16 #ifde‡
__˝lu•lus


21 
WebRtcOpusEncIn°
 
	tOpusEncIn°
;

22 
WebRtcOpusDecIn°
 
	tOpusDecIn°
;

24 
öt16_t
 
WebRtcOpus_EncodîCª©e
(
OpusEncIn°
** 
ö°
, 
öt32_t
 
ch™√ls
);

25 
öt16_t
 
WebRtcOpus_EncodîFªe
(
OpusEncIn°
* 
ö°
);

45 
öt16_t
 
WebRtcOpus_Encode
(
OpusEncIn°
* 
ö°
, i¡16_t* 
audio_ö
, i¡16_à
ßm∂es
,

46 
öt16_t
 
Àngth_ícoded_buf„r
, 
uöt8_t
* 
ícoded
);

60 
öt16_t
 
WebRtcOpus_SëBôR©e
(
OpusEncIn°
* 
ö°
, 
öt32_t
 
øã
);

62 
öt16_t
 
WebRtcOpus_DecodîCª©e
(
OpusDecIn°
** 
ö°
, 
ch™√ls
);

63 
öt16_t
 
WebRtcOpus_DecodîFªe
(
OpusDecIn°
* 
ö°
);

70 
WebRtcOpus_DecodîCh™√ls
(
OpusDecIn°
* 
ö°
);

83 
öt16_t
 
WebRtcOpus_DecodîInôNew
(
OpusDecIn°
* 
ö°
);

84 
öt16_t
 
WebRtcOpus_DecodîInô
(
OpusDecIn°
* 
ö°
);

85 
öt16_t
 
WebRtcOpus_DecodîInôSœve
(
OpusDecIn°
* 
ö°
);

107 
öt16_t
 
WebRtcOpus_DecodeNew
(
OpusDecIn°
* 
ö°
, c⁄° 
uöt8_t
* 
ícoded
,

108 
öt16_t
 
ícoded_byãs
, i¡16_t* 
decoded
,

109 
öt16_t
* 
audio_ty≥
);

110 
öt16_t
 
WebRtcOpus_Decode
(
OpusDecIn°
* 
ö°
, c⁄° i¡16_t* 
ícoded
,

111 
öt16_t
 
ícoded_byãs
, i¡16_t* 
decoded
,

112 
öt16_t
* 
audio_ty≥
);

113 
öt16_t
 
WebRtcOpus_DecodeSœve
(
OpusDecIn°
* 
ö°
, c⁄° i¡16_t* 
ícoded
,

114 
öt16_t
 
ícoded_byãs
, i¡16_t* 
decoded
,

115 
öt16_t
* 
audio_ty≥
);

130 
öt16_t
 
WebRtcOpus_DecodePlc
(
OpusDecIn°
* 
ö°
, i¡16_t* 
decoded
,

131 
öt16_t
 
numbî_of_lo°_‰ames
);

144 
WebRtcOpus_Duøti⁄E°
(
OpusDecIn°
* 
ö°
,

145 c⁄° 
uöt8_t
* 
∑ylﬂd
,

146 
∑ylﬂd_Àngth_byãs
);

148 #ifde‡
__˝lu•lus


	@packet_buffer.c

15 
	~<as£π.h
>

16 
	~"∑ckë_buf„r.h
"

18 
	~<°rög.h
>

20 
	~"sig«l_¥o˚ssög_libøry.h
"

22 
	~"mcu_d•_comm⁄.h
"

24 
	~"√ãq_îr‹_codes.h
"

26 #ifde‡
NETEQ_DELAY_LOGGING


28 
	~"dñay_loggög.h
"

29 
	~<°dio.h
>

31 
FILE
 *
dñay_fid2
;

32 
uöt32_t
 
tŸ_ª˚ived_∑ckës
;

36 
	$WebRtcNëEQ_PackëBuf„rInô
(
PackëBuf_t
 *
buf„rIn°
, 
maxNoOfPackës
,

37 
öt16_t
 *
pw16_mem‹y
, 
mem‹ySize
)

39 
i
;

40 
pos
 = 0;

43 i‡((
mem‹ySize
 < 
PBUFFER_MIN_MEMORY_SIZE
Ë|| (
pw16_mem‹y
 =
NULL
)

44 || (
maxNoOfPackës
 < 2) || (maxNoOfPackets > 600))

47  (
PBUFFER_INIT_ERROR
);

51 
	`WebRtcS∂_MemSëW16
((
öt16_t
*Ë
buf„rIn°
, 0,

52 (
PackëBuf_t
Ë/ (
öt16_t
));

55 
	`WebRtcS∂_MemSëW16
((
öt16_t
*Ë
pw16_mem‹y
, 0, 
mem‹ySize
);

58 
buf„rIn°
->
maxIn£πPosôi⁄s
 = 
maxNoOfPackës
;

66 
buf„rIn°
->
timeSèmp
 = (
uöt32_t
*Ë&
pw16_mem‹y
[
pos
];

67 
pos
 +
maxNoOfPackës
 << 1;

69 
buf„rIn°
->
∑ylﬂdLoˇti⁄
 = (
öt16_t
**Ë&
pw16_mem‹y
[
pos
];

70 
pos
 +
maxNoOfPackës
 * ((
öt16_t
*) / (int16_t));

72 
buf„rIn°
->
£qNumbî
 = (
uöt16_t
*Ë&
pw16_mem‹y
[
pos
];

73 
pos
 +
maxNoOfPackës
;

75 
buf„rIn°
->
∑ylﬂdTy≥
 = &
pw16_mem‹y
[
pos
];

76 
pos
 +
maxNoOfPackës
;

78 
buf„rIn°
->
∑ylﬂdLígthByãs
 = &
pw16_mem‹y
[
pos
];

79 
pos
 +
maxNoOfPackës
;

81 
buf„rIn°
->
rcuPlC¡r
 = &
pw16_mem‹y
[
pos
];

82 
pos
 +
maxNoOfPackës
;

84 
buf„rIn°
->
waôögTime
 = (*Ë(&
pw16_mem‹y
[
pos
]);

86 
pos
 +
maxNoOfPackës
 *

87 (*
buf„rIn°
->
waôögTime
Ë/ (*
pw16_mem‹y
);

90 
buf„rIn°
->
°¨tPaylﬂdMem‹y
 = &
pw16_mem‹y
[
pos
];

91 
buf„rIn°
->
cuºítMem‹yPos
 = buf„rIn°->
°¨tPaylﬂdMem‹y
;

92 
buf„rIn°
->
mem‹ySizeW16
 = (
mem‹ySize
 - 
pos
);

95 
i
 = 0; i < 
buf„rIn°
->
maxIn£πPosôi⁄s
; i++)

97 
buf„rIn°
->
∑ylﬂdTy≥
[
i
] = -1;

101 
buf„rIn°
->
numPackësInBuf„r
 = 0;

102 
buf„rIn°
->
∑ckSizeSam∂es
 = 0;

103 
buf„rIn°
->
ö£πPosôi⁄
 = 0;

106 
buf„rIn°
->
disˇrdedPackës
 = 0;

109 
	}
}

112 
	$WebRtcNëEQ_PackëBuf„rFlush
(
PackëBuf_t
 *
buf„rIn°
)

114 
i
;

117 i‡(
buf„rIn°
->
°¨tPaylﬂdMem‹y
 =
NULL
)

126 
	`WebRtcS∂_MemSëW16
(
buf„rIn°
->
∑ylﬂdLígthByãs
, 0, buf„rIn°->
maxIn£πPosôi⁄s
);

129 
buf„rIn°
->
numPackësInBuf„r
 = 0;

130 
buf„rIn°
->
cuºítMem‹yPos
 = buf„rIn°->
°¨tPaylﬂdMem‹y
;

131 
buf„rIn°
->
ö£πPosôi⁄
 = 0;

134 
i
 = (
buf„rIn°
->
maxIn£πPosôi⁄s
 - 1); i >= 0; i--)

136 
buf„rIn°
->
∑ylﬂdTy≥
[
i
] = -1;

137 
buf„rIn°
->
timeSèmp
[
i
] = 0;

138 
buf„rIn°
->
£qNumbî
[
i
] = 0;

142 
	}
}

145 
	$WebRtcNëEQ_PackëBuf„rIn£π
(
PackëBuf_t
 *
buf„rIn°
, c⁄° 
RTPPackë_t
 *
RTP∑ckë
,

146 
öt16_t
 *
Êushed
, 
av_sync
)

148 
√xtPos
;

149 
i
;

151 #ifde‡
NETEQ_DELAY_LOGGING


153 
ãmp_v¨
;

157 *
Êushed
 = 0;

160 i‡(
buf„rIn°
->
°¨tPaylﬂdMem‹y
 =
NULL
)

168 i‡((
RTP∑ckë
->
∑ylﬂdLí
 > (
buf„rIn°
->
mem‹ySizeW16
 << 1)) || (RTPpacket->payloadLen

186 i‡(
av_sync
) {

187 
i
 = 0; i < 
buf„rIn°
->
maxIn£πPosôi⁄s
; ++i) {

189 i‡(
buf„rIn°
->
£qNumbî
[
i
] =
RTP∑ckë
->seqNumber &&

190 
buf„rIn°
->
∑ylﬂdLígthByãs
[
i
] > 0) {

191 i‡(
	`WebRtcNëEQ_IsSyncPaylﬂd
(
RTP∑ckë
->
∑ylﬂd
,

192 
RTP∑ckë
->
∑ylﬂdLí
)) {

196 i‡(
	`WebRtcNëEQ_IsSyncPaylﬂd
(
buf„rIn°
->
∑ylﬂdLoˇti⁄
[
i
],

197 
buf„rIn°
->
∑ylﬂdLígthByãs
[
i
])) {

199 
buf„rIn°
->
∑ylﬂdTy≥
[
i
] = -1;

200 
buf„rIn°
->
∑ylﬂdLígthByãs
[
i
] = 0;

203 
buf„rIn°
->
numPackësInBuf„r
--;

213 i‡(
buf„rIn°
->
numPackësInBuf„r
 != 0)

216 
buf„rIn°
->
ö£πPosôi⁄
++;

217 i‡(
buf„rIn°
->
ö£πPosôi⁄
 >buf„rIn°->
maxIn£πPosôi⁄s
)

220 
buf„rIn°
->
ö£πPosôi⁄
 = 0;

224 i‡(
buf„rIn°
->
cuºítMem‹yPos
 + ((
RTP∑ckë
->
∑ylﬂdLí
 + 1) >> 1)

225 >&
buf„rIn°
->
°¨tPaylﬂdMem‹y
[buf„rIn°->
mem‹ySizeW16
])

227 
öt16_t
 *
ãmpMemAddªss
;

233 
buf„rIn°
->
cuºítMem‹yPos
 = buf„rIn°->
°¨tPaylﬂdMem‹y
;

239 
ãmpMemAddªss
 = &
buf„rIn°
->
°¨tPaylﬂdMem‹y
[buf„rIn°->
mem‹ySizeW16
];

240 
√xtPos
 = -1;

243 
i
 = 0; i < 
buf„rIn°
->
maxIn£πPosôi⁄s
; i++)

247 i‡(
buf„rIn°
->
∑ylﬂdLígthByãs
[
i
] !0 && buf„rIn°->
∑ylﬂdLoˇti⁄
[i]

248 < 
ãmpMemAddªss
)

250 
ãmpMemAddªss
 = 
buf„rIn°
->
∑ylﬂdLoˇti⁄
[
i
];

251 
√xtPos
 = 
i
;

256 i‡(
√xtPos
 == -1)

259 
	`WebRtcNëEQ_PackëBuf„rFlush
(
buf„rIn°
);

260 *
Êushed
 = 1;

269 
√xtPos
 = 
buf„rIn°
->
ö£πPosôi⁄
 + 1;

272 (
buf„rIn°
->
∑ylﬂdLígthByãs
[
√xtPos
] == 0) && (nextPos

273 < 
buf„rIn°
->
maxIn£πPosôi⁄s
))

275 
√xtPos
++;

278 i‡(
√xtPos
 =
buf„rIn°
->
maxIn£πPosôi⁄s
)

284 
√xtPos
 = 0;

287 
buf„rIn°
->
∑ylﬂdLígthByãs
[
√xtPos
] == 0)

289 
√xtPos
++;

298 i‡((
buf„rIn°
->
cuºítMem‹yPos
 <buf„rIn°->
∑ylﬂdLoˇti⁄
[
√xtPos
])

299 && ((&
buf„rIn°
->
cuºítMem‹yPos
[(
RTP∑ckë
->
∑ylﬂdLí
 + 1) >> 1])

300 > 
buf„rIn°
->
∑ylﬂdLoˇti⁄
[
√xtPos
]))

303 
	`WebRtcNëEQ_PackëBuf„rFlush
(
buf„rIn°
);

304 *
Êushed
 = 1;

307 i‡(
buf„rIn°
->
∑ylﬂdLígthByãs
[buf„rIn°->
ö£πPosôi⁄
] != 0)

310 
	`WebRtcNëEQ_PackëBuf„rFlush
(
buf„rIn°
);

311 *
Êushed
 = 1;

318 
buf„rIn°
->
cuºítMem‹yPos
 = buf„rIn°->
°¨tPaylﬂdMem‹y
;

319 
buf„rIn°
->
ö£πPosôi⁄
 = 0;

323 i‡(
RTP∑ckë
->
°¨ts_byã1
 == 0)

327 
	`WEBRTC_SPL_MEMCPY_W8
(
buf„rIn°
->
cuºítMem‹yPos
,

328 
RTP∑ckë
->
∑ylﬂd
, RTP∑ckë->
∑ylﬂdLí
);

333 
i
 = 0; i < 
RTP∑ckë
->
∑ylﬂdLí
; i++)

337 
	`WEBRTC_SPL_SET_BYTE
(
buf„rIn°
->
cuºítMem‹yPos
,

338 (
	`WEBRTC_SPL_GET_BYTE
(
RTP∑ckë
->
∑ylﬂd
, (
i
 + 1))), i);

343 
buf„rIn°
->
∑ylﬂdLoˇti⁄
[buf„rIn°->
ö£πPosôi⁄
] = buf„rIn°->
cuºítMem‹yPos
;

344 
buf„rIn°
->
∑ylﬂdLígthByãs
[buf„rIn°->
ö£πPosôi⁄
] = 
RTP∑ckë
->
∑ylﬂdLí
;

345 
buf„rIn°
->
∑ylﬂdTy≥
[buf„rIn°->
ö£πPosôi⁄
] = 
RTP∑ckë
->payloadType;

346 
buf„rIn°
->
£qNumbî
[buf„rIn°->
ö£πPosôi⁄
] = 
RTP∑ckë
->seqNumber;

347 
buf„rIn°
->
timeSèmp
[buf„rIn°->
ö£πPosôi⁄
] = 
RTP∑ckë
->timeStamp;

348 
buf„rIn°
->
rcuPlC¡r
[buf„rIn°->
ö£πPosôi⁄
] = 
RTP∑ckë
->rcuPlCntr;

349 
buf„rIn°
->
waôögTime
[buf„rIn°->
ö£πPosôi⁄
] = 0;

351 
buf„rIn°
->
numPackësInBuf„r
++;

352 
buf„rIn°
->
cuºítMem‹yPos
 +(
RTP∑ckë
->
∑ylﬂdLí
 + 1) >> 1;

354 #ifde‡
NETEQ_DELAY_LOGGING


356 i‡(*
Êushed
)

358 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_FLUSH
;

359 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

363 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_RECIN
;

364 i‡((
	`fwrôe
(&
ãmp_v¨
, (),

365 1, 
dñay_fid2
) != 1) ||

366 (
	`fwrôe
(&
RTP∑ckë
->
timeSèmp
, (
uöt32_t
),

367 1, 
dñay_fid2
) != 1) ||

368 (
	`fwrôe
(&
RTP∑ckë
->
£qNumbî
, (
uöt16_t
),

369 1, 
dñay_fid2
) != 1) ||

370 (
	`fwrôe
(&
RTP∑ckë
->
∑ylﬂdTy≥
, (),

371 1, 
dñay_fid2
) != 1) ||

372 (
	`fwrôe
(&
RTP∑ckë
->
∑ylﬂdLí
, (
öt16_t
),

373 1, 
dñay_fid2
) != 1)) {

376 
tŸ_ª˚ived_∑ckës
++;

380 
	}
}

383 
	$WebRtcNëEQ_PackëBuf„rExåa˘
(
PackëBuf_t
 *
buf„rIn°
, 
RTPPackë_t
 *
RTP∑ckë
,

384 
buf„rPosôi⁄
, *
waôögTime
)

388 i‡(
buf„rIn°
->
°¨tPaylﬂdMem‹y
 =
NULL
)

391  (
PBUFFER_NOT_INITIALIZED
);

394 i‡(
buf„rPosôi⁄
 < 0 || buf„rPosôi⁄ >
buf„rIn°
->
maxIn£πPosôi⁄s
)

397  (
NETEQ_OTHER_ERROR
);

401 i‡(
buf„rIn°
->
∑ylﬂdLígthByãs
[
buf„rPosôi⁄
] <= 0)

404 
RTP∑ckë
->
∑ylﬂdLí
 = 0;

405  (
PBUFFER_NONEXISTING_PACKET
);

412 
	`WEBRTC_SPL_MEMCPY_W16
((
öt16_t
*Ë
RTP∑ckë
->
∑ylﬂd
,

413 
buf„rIn°
->
∑ylﬂdLoˇti⁄
[
buf„rPosôi⁄
],

414 (
buf„rIn°
->
∑ylﬂdLígthByãs
[
buf„rPosôi⁄
] + 1) >> 1);

417 
RTP∑ckë
->
∑ylﬂdLí
 = 
buf„rIn°
->
∑ylﬂdLígthByãs
[
buf„rPosôi⁄
];

418 
RTP∑ckë
->
∑ylﬂdTy≥
 = 
buf„rIn°
->∑ylﬂdTy≥[
buf„rPosôi⁄
];

419 
RTP∑ckë
->
£qNumbî
 = 
buf„rIn°
->£qNumbî[
buf„rPosôi⁄
];

420 
RTP∑ckë
->
timeSèmp
 = 
buf„rIn°
->timeSèmp[
buf„rPosôi⁄
];

421 
RTP∑ckë
->
rcuPlC¡r
 = 
buf„rIn°
->rcuPlC¡r[
buf„rPosôi⁄
];

422 *
waôögTime
 = 
buf„rIn°
->waôögTime[
buf„rPosôi⁄
];

423 
RTP∑ckë
->
°¨ts_byã1
 = 0;

426 
buf„rIn°
->
∑ylﬂdTy≥
[
buf„rPosôi⁄
] = -1;

427 
buf„rIn°
->
∑ylﬂdLígthByãs
[
buf„rPosôi⁄
] = 0;

428 
buf„rIn°
->
£qNumbî
[
buf„rPosôi⁄
] = 0;

429 
buf„rIn°
->
timeSèmp
[
buf„rPosôi⁄
] = 0;

430 
buf„rIn°
->
waôögTime
[
buf„rPosôi⁄
] = 0;

431 
buf„rIn°
->
∑ylﬂdLoˇti⁄
[
buf„rPosôi⁄
] = buf„rIn°->
°¨tPaylﬂdMem‹y
;

434 
buf„rIn°
->
numPackësInBuf„r
--;

437 
	}
}

439 
	$WebRtcNëEQ_PackëBuf„rFödLowe°Time°amp
(
PackëBuf_t
* 
buf„r_ö°
,

440 
uöt32_t
 
cuºít_time_°amp
,

441 
uöt32_t
* 
time_°amp
,

442 * 
buf„r_posôi⁄
,

443 
îa£_ﬁd_∑ckës
,

444 
öt16_t
* 
∑ylﬂd_ty≥
) {

445 
öt32_t
 
time_°amp_diff
 = 
WEBRTC_SPL_WORD32_MAX
;

446 
öt32_t
 
√w_diff
;

447 
i
;

448 
öt16_t
 
rcu_∑ylﬂd_˙å
;

449 i‡(
buf„r_ö°
->
°¨tPaylﬂdMem‹y
 =
NULL
) {

451  
PBUFFER_NOT_INITIALIZED
;

455 *
time_°amp
 = 0;

456 *
∑ylﬂd_ty≥
 = -1;

457 *
buf„r_posôi⁄
 = -1;

458 
rcu_∑ylﬂd_˙å
 = 
WEBRTC_SPL_WORD16_MAX
;

461 i‡(
buf„r_ö°
->
numPackësInBuf„r
 <= 0) {

466 i‡(
îa£_ﬁd_∑ckës
) {

467 
i
 = 0; i < 
buf„r_ö°
->
maxIn£πPosôi⁄s
; ++i) {

469 
√w_diff
 = (
öt32_t
)(
buf„r_ö°
->
timeSèmp
[
i
] - 
cuºít_time_°amp
);

472 i‡((
√w_diff
 < 0)

473 && (
√w_diff
 > -30000)

474 && (
buf„r_ö°
->
∑ylﬂdLígthByãs
[
i
] > 0)) {

478 
buf„r_ö°
->
∑ylﬂdTy≥
[
i
] = -1;

479 
buf„r_ö°
->
∑ylﬂdLígthByãs
[
i
] = 0;

482 
buf„r_ö°
->
numPackësInBuf„r
--;

484 
buf„r_ö°
->
disˇrdedPackës
++;

485 } i‡(((
√w_diff
 < 
time_°amp_diff
)

486 || ((
√w_diff
 =
time_°amp_diff
)

487 && (
buf„r_ö°
->
rcuPlC¡r
[
i
] < 
rcu_∑ylﬂd_˙å
)))

488 && (
buf„r_ö°
->
∑ylﬂdLígthByãs
[
i
] > 0)) {

494 *
buf„r_posôi⁄
 = 
i
;

495 
time_°amp_diff
 = 
√w_diff
;

496 *
∑ylﬂd_ty≥
 = 
buf„r_ö°
->
∑ylﬂdTy≥
[
i
];

497 
rcu_∑ylﬂd_˙å
 = 
buf„r_ö°
->
rcuPlC¡r
[
i
];

501 
i
 = 0; i < 
buf„r_ö°
->
maxIn£πPosôi⁄s
; ++i) {

503 
√w_diff
 = (
öt32_t
)(
buf„r_ö°
->
timeSèmp
[
i
] - 
cuºít_time_°amp
);

506 i‡(((
√w_diff
 < 
time_°amp_diff
)

507 || ((
√w_diff
 =
time_°amp_diff
)

508 && (
buf„r_ö°
->
rcuPlC¡r
[
i
] < 
rcu_∑ylﬂd_˙å
)))

509 && (
buf„r_ö°
->
∑ylﬂdLígthByãs
[
i
] > 0)) {

515 *
buf„r_posôi⁄
 = 
i
;

516 
time_°amp_diff
 = 
√w_diff
;

517 *
∑ylﬂd_ty≥
 = 
buf„r_ö°
->
∑ylﬂdTy≥
[
i
];

518 
rcu_∑ylﬂd_˙å
 = 
buf„r_ö°
->
rcuPlC¡r
[
i
];

524 i‡(*
buf„r_posôi⁄
 >= 0) {

526 *
time_°amp
 = 
buf„r_ö°
->
timeSèmp
[*
buf„r_posôi⁄
];

530 
	}
}

532 
	$WebRtcNëEQ_PackëBuf„rGëPackëSize
(c⁄° 
PackëBuf_t
* 
buf„r_ö°
,

533 
buf„r_pos
,

534 c⁄° 
CodecDbIn°_t
* 
codec_d©aba£
,

535 
codec_pos
, 
œ°_duøti⁄
,

536 
av_sync
) {

537 i‡(
codec_d©aba£
->
funcDuøti⁄E°
[
codec_pos
] =
NULL
) {

538  
œ°_duøti⁄
;

541 i‡(
av_sync
 != 0 &&

542 
	`WebRtcNëEQ_IsSyncPaylﬂd
(
buf„r_ö°
->
∑ylﬂdLoˇti⁄
[
buf„r_pos
],

543 
buf„r_ö°
->
∑ylﬂdLígthByãs
[
buf„r_pos
])) {

545  
œ°_duøti⁄
;

548  (*
codec_d©aba£
->
funcDuøti⁄E°
[
codec_pos
])(

549 
codec_d©aba£
->
codec_°©e
[
codec_pos
],

550 (c⁄° 
uöt8_t
 *)
buf„r_ö°
->
∑ylﬂdLoˇti⁄
[
buf„r_pos
],

551 
buf„r_ö°
->
∑ylﬂdLígthByãs
[
buf„r_pos
]);

552 
	}
}

554 
öt32_t
 
	$WebRtcNëEQ_PackëBuf„rGëSize
(c⁄° 
PackëBuf_t
* 
buf„r_ö°
,

555 c⁄° 
CodecDbIn°_t
* 
codec_d©aba£
,

556 
av_sync
) {

557 
i
, 
cou¡
;

558 
œ°_duøti⁄
;

559 
œ°_codec_pos
;

560 
œ°_∑ylﬂd_ty≥
;

561 
öt32_t
 
size_ßm∂es
;

563 
cou¡
 = 0;

564 
œ°_duøti⁄
 = 
buf„r_ö°
->
∑ckSizeSam∂es
;

565 
œ°_codec_pos
 = -1;

566 
œ°_∑ylﬂd_ty≥
 = -1;

567 
size_ßm∂es
 = 0;

570 
i
 = 0; i < 
buf„r_ö°
->
maxIn£πPosôi⁄s
; i++) {

572 i‡(
buf„r_ö°
->
∑ylﬂdLígthByãs
[
i
] != 0) {

573 
∑ylﬂd_ty≥
;

574 
codec_pos
;

576 
∑ylﬂd_ty≥
 = 
buf„r_ö°
->
∑ylﬂdTy≥
[
i
];

578 if(
∑ylﬂd_ty≥
 =
œ°_∑ylﬂd_ty≥
) {

579 
codec_pos
 = 
œ°_codec_pos
;

582 
codec_pos
 = 
	`WebRtcNëEQ_DbGëCodec
(
codec_d©aba£
,

583 
∑ylﬂd_ty≥
);

584 i‡(
codec_pos
 >= 0) {

585 
codec_pos
 = 
codec_d©aba£
->
posôi⁄
[codec_pos];

588 
œ°_codec_pos
 = 
codec_pos
;

589 
œ°_∑ylﬂd_ty≥
 = 
∑ylﬂd_ty≥
;

590 i‡(
codec_pos
 >= 0) {

599 
ãmp_œ°_duøti⁄
 = 
	`WebRtcNëEQ_PackëBuf„rGëPackëSize
(

600 
buf„r_ö°
, 
i
, 
codec_d©aba£
, 
codec_pos
,

601 
œ°_duøti⁄
, 
av_sync
);

602 i‡(
ãmp_œ°_duøti⁄
 >= 0)

603 
œ°_duøti⁄
 = 
ãmp_œ°_duøti⁄
;

606 
size_ßm∂es
 +
œ°_duøti⁄
;

607 
cou¡
++;

612 i‡(
size_ßm∂es
 < 0) {

613 
size_ßm∂es
 = 0;

615  
size_ßm∂es
;

616 
	}
}

618 
	$WebRtcNëEQ_In¸emítWaôögTimes
(
PackëBuf_t
 *
buf„r_ö°
) {

619 
i
;

621 
i
 = 0; i < 
buf„r_ö°
->
maxIn£πPosôi⁄s
; ++i) {

623 i‡(
buf„r_ö°
->
∑ylﬂdLígthByãs
[
i
] != 0) {

624 
buf„r_ö°
->
waôögTime
[
i
]++;

627 
	}
}

629 
	$WebRtcNëEQ_GëDeÁu…CodecSëtögs
(c⁄° 
WebRtcNëEQDecodî
 *
codecID
,

630 
noOfCodecs
, *
maxByãs
,

631 *
maxSlŸs
,

632 * 
≥r_¶Ÿ_ovîhód_byãs
)

634 
i
;

635 
ok
 = 0;

636 
öt16_t
 
w16_tmp
;

637 
öt16_t
 
codecByãs
;

638 
öt16_t
 
codecBuf„rs
;

641 *
maxByãs
 = 0;

642 *
maxSlŸs
 = 0;

645 
i
 = 0; i < 
noOfCodecs
; i++)

649 i‡((
codecID
[
i
] =
kDecodîPCMu
Ë|| (codecID[i] =
kDecodîPCMu_2ch
))

651 
codecByãs
 = 1680;

652 
codecBuf„rs
 = 30;

654 i‡((
codecID
[
i
] =
kDecodîPCMa
) ||

655 (
codecID
[
i
] =
kDecodîPCMa_2ch
))

657 
codecByãs
 = 1680;

658 
codecBuf„rs
 = 30;

660 i‡(
codecID
[
i
] =
kDecodîILBC
)

662 
codecByãs
 = 380;

663 
codecBuf„rs
 = 10;

665 i‡(
codecID
[
i
] =
kDecodîISAC
)

667 
codecByãs
 = 960;

668 
codecBuf„rs
 = 8;

670 i‡((
codecID
[
i
] =
kDecodîISACswb
) ||

671 (
codecID
[
i
] =
kDecodîISACfb
))

673 
codecByãs
 = 1560;

674 
codecBuf„rs
 = 8;

676 i‡(
codecID
[
i
] =
kDecodîOpus
)

678 
codecByãs
 = 15300;

679 
codecBuf„rs
 = 30;

681 i‡((
codecID
[
i
] =
kDecodîPCM16B
) ||

682 (
codecID
[
i
] =
kDecodîPCM16B_2ch
))

684 
codecByãs
 = 3360;

685 
codecBuf„rs
 = 15;

687 i‡((
codecID
[
i
] =
kDecodîPCM16Bwb
) ||

688 (
codecID
[
i
] =
kDecodîPCM16Bwb_2ch
))

690 
codecByãs
 = 6720;

691 
codecBuf„rs
 = 15;

693 i‡((
codecID
[
i
] =
kDecodîPCM16Bswb32kHz
) ||

694 (
codecID
[
i
] =
kDecodîPCM16Bswb32kHz_2ch
))

696 
codecByãs
 = 13440;

697 
codecBuf„rs
 = 15;

699 i‡(
codecID
[
i
] =
kDecodîPCM16Bswb48kHz
)

701 
codecByãs
 = 20160;

702 
codecBuf„rs
 = 15;

704 i‡((
codecID
[
i
] =
kDecodîG722
) ||

705 (
codecID
[
i
] =
kDecodîG722_2ch
))

707 
codecByãs
 = 1680;

708 
codecBuf„rs
 = 15;

710 i‡(
codecID
[
i
] =
kDecodîRED
)

712 
codecByãs
 = 0;

713 
codecBuf„rs
 = 0;

715 i‡(
codecID
[
i
] =
kDecodîAVT
)

717 
codecByãs
 = 0;

718 
codecBuf„rs
 = 0;

720 i‡(
codecID
[
i
] =
kDecodîCNG
)

722 
codecByãs
 = 0;

723 
codecBuf„rs
 = 0;

725 i‡(
codecID
[
i
] =
kDecodîG729
)

727 
codecByãs
 = 210;

728 
codecBuf„rs
 = 20;

730 i‡(
codecID
[
i
] =
kDecodîG729_1
)

732 
codecByãs
 = 840;

733 
codecBuf„rs
 = 10;

735 i‡(
codecID
[
i
] =
kDecodîG726_16
)

737 
codecByãs
 = 400;

738 
codecBuf„rs
 = 10;

740 i‡(
codecID
[
i
] =
kDecodîG726_24
)

742 
codecByãs
 = 600;

743 
codecBuf„rs
 = 10;

745 i‡(
codecID
[
i
] =
kDecodîG726_32
)

747 
codecByãs
 = 800;

748 
codecBuf„rs
 = 10;

750 i‡(
codecID
[
i
] =
kDecodîG726_40
)

752 
codecByãs
 = 1000;

753 
codecBuf„rs
 = 10;

755 i‡(
codecID
[
i
] =
kDecodîG722_1_16
)

757 
codecByãs
 = 420;

758 
codecBuf„rs
 = 10;

760 i‡(
codecID
[
i
] =
kDecodîG722_1_24
)

762 
codecByãs
 = 630;

763 
codecBuf„rs
 = 10;

765 i‡(
codecID
[
i
] =
kDecodîG722_1_32
)

767 
codecByãs
 = 840;

768 
codecBuf„rs
 = 10;

770 i‡(
codecID
[
i
] =
kDecodîG722_1C_24
)

772 
codecByãs
 = 630;

773 
codecBuf„rs
 = 10;

775 i‡(
codecID
[
i
] =
kDecodîG722_1C_32
)

777 
codecByãs
 = 840;

778 
codecBuf„rs
 = 10;

780 i‡(
codecID
[
i
] =
kDecodîG722_1C_48
)

782 
codecByãs
 = 1260;

783 
codecBuf„rs
 = 10;

785 i‡(
codecID
[
i
] =
kDecodîSPEEX_8
)

787 
codecByãs
 = 1250;

788 
codecBuf„rs
 = 10;

790 i‡(
codecID
[
i
] =
kDecodîSPEEX_16
)

792 
codecByãs
 = 1250;

793 
codecBuf„rs
 = 10;

795 i‡((
codecID
[
i
] =
kDecodîCELT_32
) ||

796 (
codecID
[
i
] =
kDecodîCELT_32_2ch
))

798 
codecByãs
 = 1250;

799 
codecBuf„rs
 = 10;

801 i‡(
codecID
[
i
] =
kDecodîGSMFR
)

803 
codecByãs
 = 340;

804 
codecBuf„rs
 = 10;

806 i‡(
codecID
[
i
] =
kDecodîAMR
)

808 
codecByãs
 = 384;

809 
codecBuf„rs
 = 10;

811 i‡(
codecID
[
i
] =
kDecodîAMRWB
)

813 
codecByãs
 = 744;

814 
codecBuf„rs
 = 10;

816 i‡(
codecID
[
i
] =
kDecodîArbôøry
)

818 
codecByãs
 = 6720;

819 
codecBuf„rs
 = 15;

824 
codecByãs
 = 0;

825 
codecBuf„rs
 = 0;

826 
ok
 = 
CODEC_DB_UNKNOWN_CODEC
;

830 *
maxByãs
 = 
	`WEBRTC_SPL_MAX
((*maxByãs), 
codecByãs
);

831 *
maxSlŸs
 = 
	`WEBRTC_SPL_MAX
((*maxSlŸs), 
codecBuf„rs
);

839 
w16_tmp
 = ((
uöt32_t
)

840 + (
öt16_t
*)

841 + (
uöt16_t
)

842 + (
öt16_t
)

843 + (
öt16_t
)

844 + (
öt16_t
)

847 *
maxByãs
 +
w16_tmp
 * (*
maxSlŸs
);

849 *
≥r_¶Ÿ_ovîhód_byãs
 = 
w16_tmp
;

850  
ok
;

851 
	}
}

	@packet_buffer.h

15 #i‚de‡
PACKET_BUFFER_H


16 
	#PACKET_BUFFER_H


	)

18 
	~"ty≥defs.h
"

20 
	~"öãrÁ˚/webπc_√ãq.h
"

21 
	~"πp.h
"

24 
	#PBUFFER_MIN_MEMORY_SIZE
 150

	)

34 
uöt16_t
 
	m∑ckSizeSam∂es
;

35 
öt16_t
 *
	m°¨tPaylﬂdMem‹y
;

36 
	mmem‹ySizeW16
;

37 
öt16_t
 *
	mcuºítMem‹yPos
;

38 
	mnumPackësInBuf„r
;

39 
	mö£πPosôi⁄
;

40 
	mmaxIn£πPosôi⁄s
;

45 
uöt32_t
 *
	mtimeSèmp
;

46 
öt16_t
 **
	m∑ylﬂdLoˇti⁄
;

47 
uöt16_t
 *
	m£qNumbî
;

48 
öt16_t
 *
	m∑ylﬂdTy≥
;

49 
öt16_t
 *
	m∑ylﬂdLígthByãs
;

50 
öt16_t
 *
	mrcuPlC¡r
;

52 *
	mwaôögTime
;

55 
uöt16_t
 
	mdisˇrdedPackës
;

57 } 
	tPackëBuf_t
;

81 
WebRtcNëEQ_PackëBuf„rInô
(
PackëBuf_t
 *
buf„rIn°
, 
maxNoOfPackës
,

82 
öt16_t
 *
pw16_mem‹y
, 
mem‹ySize
);

98 
WebRtcNëEQ_PackëBuf„rFlush
(
PackëBuf_t
 *
buf„rIn°
);

119 
WebRtcNëEQ_PackëBuf„rIn£π
(
PackëBuf_t
 *
buf„rIn°
, c⁄° 
RTPPackë_t
 *
RTP∑ckë
,

120 
öt16_t
 *
Êushed
, 
av_sync
);

140 
WebRtcNëEQ_PackëBuf„rExåa˘
(
PackëBuf_t
 *
buf„rIn°
, 
RTPPackë_t
 *
RTP∑ckë
,

141 
buf„rPosôi⁄
, *
waôögTime
);

163 
WebRtcNëEQ_PackëBuf„rFödLowe°Time°amp
(
PackëBuf_t
* 
buf„r_ö°
,

164 
uöt32_t
 
cuºít_time_°amp
,

165 
uöt32_t
* 
time_°amp
,

166 * 
buf„r_posôi⁄
,

167 
îa£_ﬁd_∑ckës
,

168 
öt16_t
* 
∑ylﬂd_ty≥
);

191 
WebRtcNëEQ_PackëBuf„rGëPackëSize
(c⁄° 
PackëBuf_t
* 
buf„r_ö°
,

192 
buf„r_pos
,

193 c⁄° 
CodecDbIn°_t
* 
codec_d©aba£
,

194 
codec_pos
, 
œ°_duøti⁄
,

195 
av_sync
);

214 
öt32_t
 
WebRtcNëEQ_PackëBuf„rGëSize
(c⁄° 
PackëBuf_t
* 
buf„r_ö°
,

215 c⁄° 
CodecDbIn°_t
* 
codec_d©aba£
,

216 
av_sync
);

229 
WebRtcNëEQ_In¸emítWaôögTimes
(
PackëBuf_t
 *
buf„r_ö°
);

249 
WebRtcNëEQ_GëDeÁu…CodecSëtögs
(c⁄° 
WebRtcNëEQDecodî
 *
codecID
,

250 
noOfCodecs
, *
maxByãs
,

251 *
maxSlŸs
,

252 * 
≥r_¶Ÿ_ovîhód_byãs
);

	@peak_detection.c

15 
	~"d•_hñpfun˘i⁄s.h
"

17 
	~"sig«l_¥o˚ssög_libøry.h
"

20 c⁄° 
öt16_t
 
	gWebRtcNëEQ_kPrblCf
[17][3] = { { 120, 32, 64 }, { 140, 44, 75 },

30 
öt16_t
 
	$WebRtcNëEQ_PókDëe˘i⁄
(
öt16_t
 *
pw16_d©a
, i¡16_à
w16_d©aLí
,

31 
öt16_t
 
w16_nmbPóks
, i¡16_à
fs_mu…
,

32 
öt16_t
 *
pw16_wöIndex
,

33 
öt16_t
 *
pw16_wöVÆue
)

36 
i
;

37 
öt16_t
 
w16_tmp
;

38 
öt16_t
 
w16_tmp2
;

39 
öt16_t
 
ödMö
 = 0;

40 
öt16_t
 
ödMax
 = 0;

44 
i
 = 0; i <(
w16_nmbPóks
 - 1); i++)

46 i‡(
w16_nmbPóks
 == 1)

53 
w16_d©aLí
++;

56 
pw16_wöIndex
[
i
] = 
	`WebRtcS∂_MaxIndexW16
(
pw16_d©a
, (
öt16_t
Ë(
w16_d©aLí
 - 1));

58 i‡(
i
 !
w16_nmbPóks
 - 1)

60 
w16_tmp
 = 
pw16_wöIndex
[
i
] - 2;

61 
ödMö
 = 
	`WEBRTC_SPL_MAX
(0, 
w16_tmp
);

62 
w16_tmp
 = 
pw16_wöIndex
[
i
] + 2;

63 
w16_tmp2
 = 
w16_d©aLí
 - 1;

64 
ödMax
 = 
	`WEBRTC_SPL_MIN
(
w16_tmp2
, 
w16_tmp
);

67 i‡((
pw16_wöIndex
[
i
] !0Ë&& (pw16_wöIndex[i] !(
w16_d©aLí
 - 2)))

70 
	`WebRtcNëEQ_PrblFô
(&(
pw16_d©a
[
pw16_wöIndex
[
i
] - 1]), &(pw16_winIndex[i]),

71 &(
pw16_wöVÆue
[
i
]), 
fs_mu…
);

75 i‡(
pw16_wöIndex
[
i
] =(
w16_d©aLí
 - 2))

77 i‡(
pw16_d©a
[
pw16_wöIndex
[
i
]] >Öw16_data[pw16_winIndex[i] + 1])

79 
	`WebRtcNëEQ_PrblFô
(&(
pw16_d©a
[
pw16_wöIndex
[
i
] - 1]),

80 &(
pw16_wöIndex
[
i
]), &(
pw16_wöVÆue
[i]), 
fs_mu…
);

82 i‡(
pw16_d©a
[
pw16_wöIndex
[
i
]] <=Öw16_data[pw16_winIndex[i] + 1])

84 
pw16_wöVÆue
[
i
] = (
pw16_d©a
[
pw16_wöIndex
[i]]

85 + 
pw16_d©a
[
pw16_wöIndex
[
i
] + 1]) >> 1;

86 
pw16_wöIndex
[
i
] = (pw16_wöIndex[i] * 2 + 1Ë* 
fs_mu…
;

91 
pw16_wöVÆue
[
i
] = 
pw16_d©a
[
pw16_wöIndex
[i]];

92 
pw16_wöIndex
[
i
] =Öw16_wöIndex[i] * 2 * 
fs_mu…
;

96 i‡(
i
 !
w16_nmbPóks
 - 1)

98 
	`WebRtcS∂_MemSëW16
(&(
pw16_d©a
[
ödMö
]), 0, (
ödMax
 - indMin + 1));

104 
	}
}

106 
öt16_t
 
	$WebRtcNëEQ_PrblFô
(
öt16_t
 *
pw16_3±s
, i¡16_à*
pw16_Ind
,

107 
öt16_t
 *
pw16_outVÆ
, i¡16_à
fs_mu…
)

110 
öt32_t
 
Num
, 
Dí
;

111 
öt32_t
 
ãmp
;

112 
öt16_t
 
Êag
, 
°p
, 
°π
, 
lmt
;

113 
uöt16_t
 
PFöd
[13];

115 i‡(
fs_mu…
 == 1)

117 
PFöd
[0] = 0;

118 
PFöd
[1] = 8;

119 
PFöd
[2] = 16;

121 i‡(
fs_mu…
 == 2)

123 
PFöd
[0] = 0;

124 
PFöd
[1] = 4;

125 
PFöd
[2] = 8;

126 
PFöd
[3] = 12;

127 
PFöd
[4] = 16;

129 i‡(
fs_mu…
 == 4)

131 
PFöd
[0] = 0;

132 
PFöd
[1] = 2;

133 
PFöd
[2] = 4;

134 
PFöd
[3] = 6;

135 
PFöd
[4] = 8;

136 
PFöd
[5] = 10;

137 
PFöd
[6] = 12;

138 
PFöd
[7] = 14;

139 
PFöd
[8] = 16;

143 
PFöd
[0] = 0;

144 
PFöd
[1] = 1;

145 
PFöd
[2] = 3;

146 
PFöd
[3] = 4;

147 
PFöd
[4] = 5;

148 
PFöd
[5] = 7;

149 
PFöd
[6] = 8;

150 
PFöd
[7] = 9;

151 
PFöd
[8] = 11;

152 
PFöd
[9] = 12;

153 
PFöd
[10] = 13;

154 
PFöd
[11] = 15;

155 
PFöd
[12] = 16;

160 
Num
 = 
	`WEBRTC_SPL_MUL_16_16
(
pw16_3±s
[0],-3) + WEBRTC_SPL_MUL_16_16(pw16_3pts[1],4)

161 - 
pw16_3±s
[2];

163 
Dí
 = 
pw16_3±s
[0] + 
	`WEBRTC_SPL_MUL_16_16
(pw16_3pts[1],-2) +Öw16_3pts[2];

165 
ãmp
 = (
öt32_t
Ë
	`WEBRTC_SPL_MUL
(
Num
, (int32_t)120);

166 
Êag
 = 1;

167 
°p
 = 
WebRtcNëEQ_kPrblCf
[
PFöd
[
fs_mu…
]][0] - WebRtcNetEQ_kPrblCf[PFind[fs_mult - 1]][0];

168 
°π
 = (
WebRtcNëEQ_kPrblCf
[
PFöd
[
fs_mu…
]][0]

169 + 
WebRtcNëEQ_kPrblCf
[
PFöd
[
fs_mu…
 - 1]][0]) >> 1;

171 i‡(
ãmp
 < (
öt32_t
Ë
	`WEBRTC_SPL_MUL
(-
Dí
,(öt32_t)
°π
))

173 
lmt
 = 
°π
 - 
°p
;

174 
Êag
)

176 i‡((
Êag
 =
fs_mu…
Ë|| (
ãmp


177 > (
öt32_t
Ë
	`WEBRTC_SPL_MUL
(-
Dí
,(öt32_t)
lmt
)))

179 *
pw16_outVÆ


180 (
öt16_t
)

181 (((
öt32_t
Ë((öt32_tË
	`WEBRTC_SPL_MUL
(
Dí
,(öt32_t)
WebRtcNëEQ_kPrblCf
[
PFöd
[
fs_mu…
-
Êag
]][1])

182 + (
öt32_t
Ë
	`WEBRTC_SPL_MUL
(
Num
,(öt32_t)
WebRtcNëEQ_kPrblCf
[
PFöd
[
fs_mu…
-
Êag
]][2])

183 + 
	`WEBRTC_SPL_MUL_16_16
(
pw16_3±s
[0],256))) >> 8);

184 *
pw16_Ind
 = (*pw16_IndË* (
fs_mu…
 << 1Ë- 
Êag
;

185 
Êag
 = 0;

189 
Êag
++;

190 
lmt
 -
°p
;

194 i‡(
ãmp
 > (
öt32_t
Ë
	`WEBRTC_SPL_MUL
(-
Dí
,(öt32_t)(
°π
+
°p
)))

196 
lmt
 = 
°π
 + (
°p
 << 1);

197 
Êag
)

199 i‡((
Êag
 =
fs_mu…
Ë|| (
ãmp


200 < (
öt32_t
Ë
	`WEBRTC_SPL_MUL
(-
Dí
,(öt32_t)
lmt
)))

202 
öt32_t
 
ãmp_ãrm_1
, 
ãmp_ãrm_2
, 
ãmp_ãrm_3
;

204 
ãmp_ãrm_1
 = 
	`WEBRTC_SPL_MUL
(
Dí
,

205 (
öt32_t
Ë
WebRtcNëEQ_kPrblCf
[
PFöd
[
fs_mu…
+
Êag
]][1]);

206 
ãmp_ãrm_2
 = 
	`WEBRTC_SPL_MUL
(
Num
,

207 (
öt32_t
Ë
WebRtcNëEQ_kPrblCf
[
PFöd
[
fs_mu…
+
Êag
]][2]);

208 
ãmp_ãrm_3
 = 
	`WEBRTC_SPL_MUL_16_16
(
pw16_3±s
[0],256);

210 *
pw16_outVÆ


211 (
öt16_t
Ë((
ãmp_ãrm_1
 + 
ãmp_ãrm_2
 + 
ãmp_ãrm_3
) >> 8);

213 *
pw16_Ind
 = (*pw16_IndË* (
fs_mu…
 << 1Ë+ 
Êag
;

214 
Êag
 = 0;

218 
Êag
++;

219 
lmt
 +
°p
;

226 *
pw16_outVÆ
 = 
pw16_3±s
[1];

227 *
pw16_Ind
 = (*pw16_IndË* 2 * 
fs_mu…
;

231 
	}
}

	@preemptive_expand.c

16 
	~"d•.h
"

18 
	~"sig«l_¥o˚ssög_libøry.h
"

20 
	~"d•_hñpfun˘i⁄s.h
"

21 
	~"√ãq_îr‹_codes.h
"

23 
	#PREEMPTIVE_CORR_LEN
 50

	)

24 
	#PREEMPTIVE_MIN_LAG
 10

	)

25 
	#PREEMPTIVE_MAX_LAG
 60

	)

26 
	#PREEMPTIVE_DOWNSAMPLED_LEN
 (
PREEMPTIVE_CORR_LEN
 + 
PREEMPTIVE_MAX_LAG
)

	)

38 
	#SCRATCH_PW16_DS_SPEECH
 0

	)

39 
	#SCRATCH_PW32_CORR
 
PREEMPTIVE_DOWNSAMPLED_LEN


	)

40 
	#SCRATCH_PW16_CORR
 0

	)

73 
WebRtcNëEQ_PªEm±iveEx∑nd
(
DSPIn°_t
 *
ö°
,

74 #ifde‡
SCRATCH


75 
öt16_t
 *
pw16_s¸©chPå
,

77 c⁄° 
öt16_t
 *
pw16_decoded
, 
Àn
, 
ﬁdD©aLí
,

78 
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_Àn
,

79 
öt16_t
 
BGN⁄ly
)

82 #ifde‡
SCRATCH


84 
öt16_t
 *
	gpw16_downSampS≥ech
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_DS_SPEECH
;

85 
öt32_t
 *
	gpw32_c‹r
 = (öt32_t*Ë(
pw16_s¸©chPå
 + 
SCRATCH_PW32_CORR
);

86 
öt16_t
 *
	gpw16_c‹r
 = 
pw16_s¸©chPå
 + 
SCRATCH_PW16_CORR
;

89 
öt16_t
 
	gpw16_downSampS≥ech
[
PREEMPTIVE_DOWNSAMPLED_LEN
];

90 
öt32_t
 
	gpw32_c‹r
[
PREEMPTIVE_CORR_LEN
];

91 
öt16_t
 
	gpw16_c‹r
[
PREEMPTIVE_CORR_LEN
];

93 
öt16_t
 
	gw16_decodedMax
 = 0;

94 
öt16_t
 
	gw16_tmp
 = 0;

95 
öt16_t
 
	gw16_tmp2
;

96 
öt32_t
 
	gw32_tmp
;

97 
öt32_t
 
	gw32_tmp2
;

99 c⁄° 
öt16_t
 
	gw16_°¨tLag
 = 
PREEMPTIVE_MIN_LAG
;

100 c⁄° 
öt16_t
 
	gw16_ídLag
 = 
PREEMPTIVE_MAX_LAG
;

101 c⁄° 
öt16_t
 
	gw16_c‹rLí
 = 
PREEMPTIVE_CORR_LEN
;

102 c⁄° 
öt16_t
 *
	gpw16_vec1
, *
	gpw16_vec2
;

103 
öt16_t
 *
	gpw16_ve˘mp
;

104 
öt16_t
 
	gw16_öc
, 
	gw16_°¨tÁ˘
;

105 
öt16_t
 
	gw16_be°Index
, 
	gw16_be°VÆ
;

106 
öt16_t
 
	gw16_VAD
 = 1;

107 
öt16_t
 
	gfsMu…
;

108 
öt16_t
 
	gfsMu…120
;

109 
öt32_t
 
	gw32_í1
, 
	gw32_í2
, 
	gw32_cc
;

110 
öt16_t
 
	gw16_í1
, 
	gw16_í2
;

111 
öt16_t
 
	gw16_í1SˇÀ
, 
	gw16_í2SˇÀ
;

112 
öt16_t
 
	gw16_sqπEn1En2
;

113 
öt16_t
 
	gw16_be°C‹r
 = 0;

114 
	gok
;

116 #ifde‡
NETEQ_STEREO


117 
Ma°îSœveInfo
 *
	gmsInfo
 = 
ö°
->
msInfo
;

120 
	gfsMu…
 = 
WebRtcNëEQ_CÆcFsMu…
(
ö°
->
fs
);

123 
	gfsMu…120
 = (
öt16_t
Ë
WEBRTC_SPL_MUL_16_16
(
fsMu…
, 120);

125 
	gö°
->
	gEx∑ndIn°
.
	gw16_c⁄£cExp
 = 0;

131 i‡(
	gÀn
 < (
	göt16_t
Ë
WEBRTC_SPL_MUL_16_16
((120 + 119), 
fsMu…
Ë|| 
	gﬁdD©aLí
 >
Àn


132 - 
ö°
->
Ex∑ndIn°
.
w16_ovîœp
)

135 
ö°
->
w16_mode
 = 
MODE_UNSUCCESS_PREEMPTIVE
;

136 *
	gpw16_Àn
 = 
Àn
;

141 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, (
öt16_t
Ë
Àn
);

143  
	gNETEQ_OTHER_ERROR
;

151 i‡(
	gBGN⁄ly
)

154 
	gw16_be°Index
 = 
DEFAULT_TIME_ADJUST
 * (
fsMu…
 << 3);

157 i‡(
	gw16_be°Index
 > 
	gÀn
)

159 
	gö°
->
	gw16_mode
 = 
MODE_UNSUCCESS_PREEMPTIVE
;

160 *
	gpw16_Àn
 = 
Àn
;

165 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, (
öt16_t
Ë
Àn
);

167  
	gNETEQ_OTHER_ERROR
;

171 *
	gpw16_Àn
 = 
Àn
 + 
w16_be°Index
;

176 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, 
Àn
);

177 
WEBRTC_SPL_MEMCPY_W16
(&
pw16_outD©a
[
Àn
], 
pw16_decoded
, 
w16_be°Index
);

180 
	gö°
->
	gw16_mode
 = 
MODE_LOWEN_PREEMPTIVE
;

183 
	gö°
->
	g°©In°
.
	g¥ìm±iveLígth
 +
w16_be°Index
;

185 
	gö°
->
	ga˘ivôy_°©s
.
	g¥ìm±ive_ex∑nd_bgn_ßm∂es
 +
w16_be°Index
;

190 #ifde‡
NETEQ_STEREO


193 i‡(
	gmsInfo
 =
NULL
)

196  
MASTER_SLAVE_ERROR
;

199 i‡((
	gmsInfo
->
	gmsMode
 =
NETEQ_MASTER
Ë|| (
msInfo
->
msMode
 =
NETEQ_MONO
))

212 
w16_decodedMax
 = 
WebRtcS∂_MaxAbsVÆueW16
(
pw16_decoded
, (
öt16_t
Ë
Àn
);

215 
	gok
 = 
WebRtcNëEQ_DownSam∂eTo4kHz
(
pw16_decoded
, 
Àn
, 
ö°
->
fs
, 
pw16_downSampS≥ech
,

216 
PREEMPTIVE_DOWNSAMPLED_LEN
, 1 );

217 i‡(
	gok
 != 0)

220 
ö°
->
w16_mode
 = 
MODE_UNSUCCESS_PREEMPTIVE
;

221 *
	gpw16_Àn
 = 
Àn
;

226 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, (
öt16_t
Ë
Àn
);

228  
	gNETEQ_OTHER_ERROR
;

235 
	gw16_tmp
 = 6 - 
WebRtcS∂_N‹mW32
(
WEBRTC_SPL_MUL_16_16
(
w16_decodedMax
, w16_decodedMax));

236 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(0, 
w16_tmp
);

238  
WebRtcNëEQ_CrossC‹r
(

239 
pw32_c‹r
, &
pw16_downSampS≥ech
[
w16_ídLag
],

240 &
pw16_downSampS≥ech
[
w16_ídLag
 - 
w16_°¨tLag
], 
w16_c‹rLí
,

241 (
öt16_t
Ë(
w16_ídLag
 - 
w16_°¨tLag
), 
w16_tmp
, -1);

244 
	gw32_tmp
 = 
WebRtcS∂_MaxAbsVÆueW32
(
pw32_c‹r
, 
w16_c‹rLí
);

245 
	gw16_tmp
 = 17 - 
WebRtcS∂_N‹mW32
(
w32_tmp
);

246 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(0, 
w16_tmp
);

248 
WebRtcS∂_Ve˘‹BôShi·W32ToW16
(
pw16_c‹r
, 
w16_c‹rLí
, 
pw32_c‹r
, 
w16_tmp
);

252 
	gw16_tmp
 = 
WebRtcS∂_DivW32W16ResW16
((
öt32_t
Ë(
NETEQ_MAX_OUTPUT_SIZE
 - 
Àn
),

253 (
öt16_t
Ë(
fsMu…
 << 1)Ë- 
	gw16_°¨tLag
;

254 
	gw16_tmp
 = 
WEBRTC_SPL_MIN
(
w16_c‹rLí
, 
w16_tmp
);

256 #ifde‡
NETEQ_STEREO


259 i‡((
	gmsInfo
->
	gmsMode
 =
NETEQ_MASTER
Ë|| (
msInfo
->
msMode
 =
NETEQ_MONO
))

262 
WebRtcNëEQ_PókDëe˘i⁄
(
pw16_c‹r
, 
w16_tmp
, 1, 
fsMu…
, &
w16_be°Index
, &
w16_be°VÆ
);

266 
	gw16_be°Index
 = 
w16_be°Index
 + 
w16_°¨tLag
 * 
WEBRTC_SPL_LSHIFT_W16
(
fsMu…
, 1);

269 
	gmsInfo
->
	gbe°Index
 = 
w16_be°Index
;

271 i‡(
	gmsInfo
->
	gmsMode
 =
NETEQ_SLAVE
)

273 i‡(
msInfo
->
exåaInfo
 =
PE_EXP_FAIL
)

276 
w16_be°Index
 = 0;

281 
	gw16_be°Index
 = 
msInfo
->
be°Index
;

287  (
	gMASTER_SLAVE_ERROR
);

293 
WebRtcNëEQ_PókDëe˘i⁄
(
pw16_c‹r
, 
w16_tmp
, 1, 
fsMu…
, &
w16_be°Index
, &
w16_be°VÆ
);

297 
	gw16_be°Index
 = 
w16_be°Index
 + 
w16_°¨tLag
 * 
WEBRTC_SPL_LSHIFT_W16
(
fsMu…
, 1);

302 #ifde‡
NETEQ_STEREO


304 i‡((
	gmsInfo
->
	gmsMode
 =
NETEQ_MASTER
Ë|| (
msInfo
->
msMode
 =
NETEQ_MONO
))

319 
w16_tmp
 = (31

320 - 
WebRtcS∂_N‹mW32
(
WEBRTC_SPL_MUL_16_16
(
w16_decodedMax
, w16_decodedMax)));

321 
	gw16_tmp
 +(31 - 
WebRtcS∂_N‹mW32
(
w16_be°Index
));

322 
	gw16_tmp
 -= 31;

323 
	gw16_tmp
 = 
WEBRTC_SPL_MAX
(0, 
w16_tmp
);

326 
	gpw16_vec1
 = &
pw16_decoded
[
fsMu…120
 - 
w16_be°Index
];

328 
	gpw16_vec2
 = &
pw16_decoded
[
fsMu…120
];

331 
	gw32_í1
 = 
WebRtcNëEQ_DŸW16W16
((
öt16_t
*Ë
pw16_vec1
,

332 (
öt16_t
*Ë
pw16_vec1
, 
w16_be°Index
, 
w16_tmp
);

333 
	gw32_í2
 = 
WebRtcNëEQ_DŸW16W16
((
öt16_t
*Ë
pw16_vec2
,

334 (
öt16_t
*Ë
pw16_vec2
, 
w16_be°Index
, 
w16_tmp
);

337 
	gw32_cc
 = 
WebRtcNëEQ_DŸW16W16
((
öt16_t
*Ë
pw16_vec1
, (öt16_t*Ë
pw16_vec2
,

338 
w16_be°Index
, 
w16_tmp
);

342 
	gw32_tmp
 = 
WEBRTC_SPL_RSHIFT_W32
(
w32_í1
 + 
w32_í2
, 4);

343 i‡(
	gö°
->
	gBGNIn°
.
	gw16_öôülized
 == 1)

345 
w32_tmp2
 = 
ö°
->
BGNIn°
.
w32_íîgy
;

350 
	gw32_tmp2
 = 75000;

352 
	gw16_tmp2
 = 16 - 
WebRtcS∂_N‹mW32
(
w32_tmp2
);

353 
	gw16_tmp2
 = 
WEBRTC_SPL_MAX
(0, 
w16_tmp2
);

354 
	gw32_tmp
 = 
WEBRTC_SPL_RSHIFT_W32
(
w32_tmp
, 
w16_tmp2
);

355 
	gw16_tmp2
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(
w32_tmp2
, 
w16_tmp2
);

356 
	gw32_tmp2
 = 
WEBRTC_SPL_MUL_16_16
(
w16_be°Index
, 
w16_tmp2
);

360 i‡(
WebRtcS∂_N‹mW32
(
w32_tmp
Ë< 
WEBRTC_SPL_LSHIFT_W32
(
w16_tmp
,1))

363 
öt16_t
 
	gãmpshi·
 = 
WebRtcS∂_N‹mW32
(
w32_tmp
);

364 
	gw32_tmp
 = 
WEBRTC_SPL_LSHIFT_W32
(
w32_tmp
, 
ãmpshi·
);

365 
	gw32_tmp2
 = 
WEBRTC_SPL_RSHIFT_W32
(
w32_tmp2
,

366 
WEBRTC_SPL_LSHIFT_W32
(
w16_tmp
,1Ë- 
ãmpshi·
);

370 
	gw32_tmp
 = 
WEBRTC_SPL_LSHIFT_W32
(
w32_tmp
,

371 
WEBRTC_SPL_LSHIFT_W32
(
w16_tmp
,1));

374 i‡(
	gw32_tmp
 <
w32_tmp2
)

377 
w16_VAD
 = 0;

378 
	gw16_be°C‹r
 = 0;

382 
	gw16_be°Index
 = 
WEBRTC_SPL_MIN
–
w16_be°Index
, 
Àn
 - 
ﬁdD©aLí
 );

387 
	gw16_VAD
 = 1;

392 
	gw16_í1SˇÀ
 = 16 - 
WebRtcS∂_N‹mW32
(
w32_í1
);

393 
	gw16_í1SˇÀ
 = 
WEBRTC_SPL_MAX
(0, 
w16_í1SˇÀ
);

394 
	gw16_í2SˇÀ
 = 16 - 
WebRtcS∂_N‹mW32
(
w32_í2
);

395 
	gw16_í2SˇÀ
 = 
WEBRTC_SPL_MAX
(0, 
w16_í2SˇÀ
);

398 i‡((
	gw16_í1SˇÀ
 + 
	gw16_í2SˇÀ
) & 1)

400 
	gw16_í1SˇÀ
 += 1;

404 
	gw16_í1
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(
w32_í1
, 
w16_í1SˇÀ
);

405 
	gw16_í2
 = (
öt16_t
Ë
WEBRTC_SPL_RSHIFT_W32
(
w32_í2
, 
w16_í2SˇÀ
);

408 
	gw32_tmp
 = 
WEBRTC_SPL_MUL_16_16
(
w16_í1
, 
w16_í2
);

411 
	gw16_sqπEn1En2
 = (
öt16_t
Ë
WebRtcS∂_SqπFlo‹
(
w32_tmp
);

414 
	gw16_tmp
 = 14 - ((
w16_í1SˇÀ
 + 
w16_í2SˇÀ
) >> 1);

415 
	gw32_cc
 = 
WEBRTC_SPL_SHIFT_W32
(
w32_cc
, 
w16_tmp
);

416 
	gw32_cc
 = 
WEBRTC_SPL_MAX
(0, 
w32_cc
);

417 
	gw16_be°C‹r
 = (
öt16_t
Ë
WebRtcS∂_DivW32W16
(
w32_cc
, 
w16_sqπEn1En2
);

418 
	gw16_be°C‹r
 = 
WEBRTC_SPL_MIN
(16384, 
w16_be°C‹r
);

421 #ifde‡
NETEQ_STEREO


433 #ifde‡
NETEQ_STEREO


434 i‡(((((
	gw16_be°C‹r
 > 14746Ë&& (
	gﬁdD©aLí
 <
fsMu…120
)Ë|| (
w16_VAD
 == 0))

435 && (
msInfo
->
msMode
 !
NETEQ_SLAVE
)) || ((msInfo->msMode == NETEQ_SLAVE)

436 && (
msInfo
->
exåaInfo
 !
PE_EXP_FAIL
)))

438 i‡(((
w16_be°C‹r
 > 14746Ë&& (
ﬁdD©aLí
 <
fsMu…120
))

439 || (
w16_VAD
 == 0))

445 
öt16_t
 
w16_°¨tIndex
 = 
WEBRTC_SPL_MAX
(
ﬁdD©aLí
, 
fsMu…120
);

451 
	gw16_öc
 = (
öt16_t
Ë
WebRtcS∂_DivW32W16
((
öt32_t
) 16384,

452 (
öt16_t
Ë(
w16_be°Index
 + 1));

455 
	gw16_°¨tÁ˘
 = 16384 - 
w16_öc
;

458 
	gpw16_vec1
 = &
pw16_decoded
[
w16_°¨tIndex
 - 
w16_be°Index
];

460 
	gpw16_vec2
 = &
pw16_decoded
[
w16_°¨tIndex
];

465 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, 
w16_°¨tIndex
);

468 
	gpw16_ve˘mp
 = 
pw16_outD©a
 + 
w16_°¨tIndex
;

470 
WebRtcNëEQ_MixVoi˚Unvoi˚
(
pw16_ve˘mp
, (
öt16_t
*Ë
pw16_vec2
,

471 (
öt16_t
*Ë
pw16_vec1
, &
w16_°¨tÁ˘
, 
w16_öc
, 
w16_be°Index
);

475 
	gpw16_vec2
 = &
pw16_decoded
[
w16_°¨tIndex
];

476 
WEBRTC_SPL_MEMMOVE_W16
(&
pw16_outD©a
[
w16_°¨tIndex
 + 
w16_be°Index
], 
pw16_vec2
,

477 (
öt16_t
Ë(
Àn
 - 
w16_°¨tIndex
));

480 i‡(
	gw16_VAD
)

482 
	gö°
->
	gw16_mode
 = 
MODE_SUCCESS_PREEMPTIVE
;

486 
	gö°
->
	gw16_mode
 = 
MODE_LOWEN_PREEMPTIVE
;

490 *
	gpw16_Àn
 = 
Àn
 + 
w16_be°Index
;

493 
	gö°
->
	g°©In°
.
	g¥ìm±iveLígth
 +
w16_be°Index
;

495 
	gö°
->
	ga˘ivôy_°©s
.
	g¥ìm±ive_ex∑nd_n‹mÆ_ßm∂es
 +
w16_be°Index
;

502 #ifde‡
NETEQ_STEREO


504 i‡(
	gmsInfo
->
	gmsMode
 =
NETEQ_MASTER
)

506 
msInfo
->
exåaInfo
 = 
PE_EXP_FAIL
;

511 
	gö°
->
	gw16_mode
 = 
MODE_UNSUCCESS_PREEMPTIVE
;

514 *
	gpw16_Àn
 = 
Àn
;

519 
WEBRTC_SPL_MEMMOVE_W16
(
pw16_outD©a
, 
pw16_decoded
, (
öt16_t
Ë
Àn
);

525 #unde‡
SCRATCH_PW16_DS_SPEECH


526 #unde‡
SCRATCH_PW32_CORR


527 #unde‡
SCRATCH_PW16_CORR


	@random_vector.c

15 
	~"d•_hñpfun˘i⁄s.h
"

21 c⁄° 
öt16_t
 
	gWebRtcNëEQ_kR™dnTbl
[
RANDVEC_NO_OF_SAMPLES
] =

42 
	$WebRtcNëEQ_R™domVec
(
uöt32_t
 *
w32_£ed
, 
öt16_t
 *
pw16_øndVec
,

43 
öt16_t
 
w16_Àn
, i¡16_à
w16_öcvÆ
)

45 
i
;

46 
öt16_t
 
w16_pos
;

47 
i
 = 0; i < 
w16_Àn
; i++)

49 *
w32_£ed
 = (*w32_£edË+ 
w16_öcvÆ
;

50 
w16_pos
 = (
öt16_t
Ë((*
w32_£ed
Ë& (
RANDVEC_NO_OF_SAMPLES
 - 1));

51 
pw16_øndVec
[
i
] = 
WebRtcNëEQ_kR™dnTbl
[
w16_pos
];

53 
	}
}

	@real_fft.c

11 
	~"ªÆ_f·.h
"

13 
	~<°dlib.h
>

15 
	~"sig«l_¥o˚ssög_libøry.h
"

17 
	sRólFFT
 {

18 
	m‹dî
;

21 
RólFFT
* 
	$WebRtcS∂_Cª©eRólFFT
(
‹dî
) {

22 
RólFFT
* 
£lf
 = 
NULL
;

25 i‡(
‹dî
 > 10 || order < 0) {

26  
NULL
;

29 
£lf
 = 
	`mÆloc
((
RólFFT
));

30 
£lf
->
‹dî
 = order;

32  
£lf
;

33 
	}
}

35 
	$WebRtcS∂_FªeRólFFT
(
RólFFT
* 
£lf
) {

36 
	`‰ì
(
£lf
);

37 
	}
}

42 
	$WebRtcS∂_RólF‹w¨dFFTC
(
RólFFT
* 
£lf
,

43 c⁄° 
öt16_t
* 
d©a_ö
,

44 
öt16_t
* 
d©a_out
) {

45 
	`mem˝y
(
d©a_out
, 
d©a_ö
, (
öt16_t
Ë* (1 << (
£lf
->
‹dî
 + 1)));

46 
	`WebRtcS∂_Com∂exBôRevî£
(
d©a_out
, 
£lf
->
‹dî
);

47  
	`WebRtcS∂_Com∂exFFT
(
d©a_out
, 
£lf
->
‹dî
, 1);

48 
	}
}

50 
	$WebRtcS∂_RólInvî£FFTC
(
RólFFT
* 
£lf
,

51 c⁄° 
öt16_t
* 
d©a_ö
,

52 
öt16_t
* 
d©a_out
) {

53 
	`mem˝y
(
d©a_out
, 
d©a_ö
, (
öt16_t
Ë* (1 << (
£lf
->
‹dî
 + 1)));

54 
	`WebRtcS∂_Com∂exBôRevî£
(
d©a_out
, 
£lf
->
‹dî
);

55  
	`WebRtcS∂_Com∂exIFFT
(
d©a_out
, 
£lf
->
‹dî
, 1);

56 
	}
}

58 #i‡
deföed
(
WEBRTC_DETECT_ARM_NEON
Ë|| deföed(
WEBRTC_ARCH_ARM_NEON
)

61 
	$WebRtcS∂_RólF‹w¨dFFTNe⁄
(
RólFFT
* 
£lf
,

62 c⁄° 
öt16_t
* 
d©a_ö
,

63 
öt16_t
* 
d©a_out
) {

64  
	`WebRtcS∂_RólF‹w¨dFFTC
(
£lf
, 
d©a_ö
, 
d©a_out
);

65 
	}
}

67 
	$WebRtcS∂_RólInvî£FFTNe⁄
(
RólFFT
* 
£lf
,

68 c⁄° 
öt16_t
* 
d©a_ö
,

69 
öt16_t
* 
d©a_out
) {

70  
	`WebRtcS∂_RólInvî£FFTC
(
£lf
, 
d©a_ö
, 
d©a_out
);

71 
	}
}

	@real_fft.h

11 #i‚de‡
WEBRTC_COMMON_AUDIO_SIGNAL_PROCESSING_INCLUDE_REAL_FFT_H_


12 
	#WEBRTC_COMMON_AUDIO_SIGNAL_PROCESSING_INCLUDE_REAL_FFT_H_


	)

14 
	~"ty≥defs.h
"

16 
	gRólFFT
;

18 #ifde‡
__˝lu•lus


22 (*
RólF‹w¨dFFT
)(
	tRólFFT
* 
	t£lf
,

23 c⁄° 
	töt16_t
* 
	td©a_ö
,

24 
	töt16_t
* 
	td©a_out
);

25 (*
RólInvî£FFT
)(
	tRólFFT
* 
	t£lf
,

26 c⁄° 
	töt16_t
* 
	td©a_ö
,

27 
	töt16_t
* 
	td©a_out
);

29 
RólF‹w¨dFFT
 
WebRtcS∂_RólF‹w¨dFFT
;

30 
RólInvî£FFT
 
WebRtcS∂_RólInvî£FFT
;

32 
RólFFT
* 
WebRtcS∂_Cª©eRólFFT
(
‹dî
);

33 
WebRtcS∂_FªeRólFFT
(
RólFFT
* 
£lf
);

49 
WebRtcS∂_RólF‹w¨dFFTC
(
RólFFT
* 
£lf
,

50 c⁄° 
öt16_t
* 
d©a_ö
,

51 
öt16_t
* 
d©a_out
);

53 #i‡(
deföed
 
WEBRTC_DETECT_ARM_NEON
Ë|| (deföed 
WEBRTC_ARCH_ARM_NEON
)

54 
WebRtcS∂_RólF‹w¨dFFTNe⁄
(
RólFFT
* 
£lf
,

55 c⁄° 
öt16_t
* 
d©a_ö
,

56 
öt16_t
* 
d©a_out
);

72 
WebRtcS∂_RólInvî£FFTC
(
RólFFT
* 
£lf
,

73 c⁄° 
öt16_t
* 
d©a_ö
,

74 
öt16_t
* 
d©a_out
);

76 #i‡(
deföed
 
WEBRTC_DETECT_ARM_NEON
Ë|| (deföed 
WEBRTC_ARCH_ARM_NEON
)

77 
WebRtcS∂_RólInvî£FFTNe⁄
(
RólFFT
* 
£lf
,

78 c⁄° 
öt16_t
* 
d©a_ö
,

79 
öt16_t
* 
d©a_out
);

82 #ifde‡
__˝lu•lus


	@recin.c

16 
	~"mcu.h
"

18 
	~<°rög.h
>

20 
	~"automode.h
"

21 
	~"dtmf_buf„r.h
"

22 
	~"mcu_d•_comm⁄.h
"

23 
	~"√ãq_deföes.h
"

24 
	~"√ãq_îr‹_codes.h
"

25 
	~"sig«l_¥o˚ssög_libøry.h
"

27 
	$WebRtcNëEQ_RecInI¡î«l
(
MCUIn°_t
 *
MCU_ö°
, 
RTPPackë_t
 *
RTP∑ckëI≈ut
,

28 
uöt32_t
 
uw32_timeRec
)

30 
RTPPackë_t
 
RTP∑ckë
[2];

31 
i_k
;

32 
i_ok
 = 0, 
i_No_Of_Paylﬂds
 = 1;

33 
öt16_t
 
Êushed
 = 0;

34 
öt16_t
 
codecPos
;

35 
cuº_Codec
;

36 
öt16_t
 
isREDPaylﬂd
 = 0;

37 
öt32_t
 
ãmp_bufsize
;

38 
is_sync_πp
 = 
MCU_ö°
->
av_sync
 && 
	`WebRtcNëEQ_IsSyncPaylﬂd
(

39 
RTP∑ckëI≈ut
->
∑ylﬂd
, RTP∑ckëI≈ut->
∑ylﬂdLí
);

40 #ifde‡
NETEQ_RED_CODEC


41 
RTPPackë_t
* 
RTP∑ckëPå
[2];

42 
RTP∑ckëPå
[0] = &
RTP∑ckë
[0];

43 
RTP∑ckëPå
[1] = &
RTP∑ckë
[1];

46 
ãmp_bufsize
 = 
	`WebRtcNëEQ_PackëBuf„rGëSize
(&
MCU_ö°
->
PackëBuf„r_ö°
,

47 &
MCU_ö°
->
codec_DB_ö°
,

48 
MCU_ö°
->
av_sync
);

54 
	`WEBRTC_SPL_MEMCPY_W8
(&
RTP∑ckë
[0], 
RTP∑ckëI≈ut
, (
RTPPackë_t
));

58 i‡((
RTP∑ckë
[0].
s§c
 !
MCU_ö°
->s§cË|| (MCU_ö°->
fú°_∑ckë
 == 1))

60 
	`WebRtcNëEQ_RTCPInô
(&
MCU_ö°
->
RTCP_ö°
, 
RTP∑ckë
[0].
£qNumbî
);

61 
MCU_ö°
->
fú°_∑ckë
 = 0;

64 
	`WebRtcNëEQ_PackëBuf„rFlush
(&
MCU_ö°
->
PackëBuf„r_ö°
);

67 
MCU_ö°
->
s§c
 = 
RTP∑ckë
[0].ssrc;

70 
MCU_ö°
->
timeSèmp
 = 
RTP∑ckë
[0].timeStamp;

71 
MCU_ö°
->
cuºít_Paylﬂd
 = 
RTP∑ckë
[0].
∑ylﬂdTy≥
;

74 
MCU_ö°
->
√w_codec
 = 1;

77 
MCU_ö°
->
TSsˇlögInôülized
 = 0;

81 i‡(!
is_sync_πp
) {

83 
i_ok
 |
	`WebRtcNëEQ_RTCPUpd©e
(&(
MCU_ö°
->
RTCP_ö°
),

84 
RTP∑ckë
[0].
£qNumbî
,

85 
RTP∑ckë
[0].
timeSèmp
, 
uw32_timeRec
);

89 #ifde‡
NETEQ_RED_CODEC


90 i‡(
RTP∑ckë
[0].
∑ylﬂdTy≥
 =
	`WebRtcNëEQ_DbGëPaylﬂd
(&
MCU_ö°
->
codec_DB_ö°
,

91 
kDecodîRED
))

93 i‡(
is_sync_πp
)

96  
RECIN_SYNC_RTP_NOT_ACCEPTABLE
;

100 
i_ok
 = 
	`WebRtcNëEQ_Redund™cyS∂ô
(
RTP∑ckëPå
, 2, &
i_No_Of_Paylﬂds
);

101 i‡(
i_ok
 < 0)

104  
i_ok
;

111 i‡((
i_No_Of_Paylﬂds
 > 1Ë&& (
RTP∑ckë
[0].
∑ylﬂdTy≥
 != RTPpacket[1].payloadType)

112 && (
RTP∑ckë
[0].
∑ylﬂdTy≥
 !
	`WebRtcNëEQ_DbGëPaylﬂd
(&
MCU_ö°
->
codec_DB_ö°
,

113 
kDecodîAVT
)Ë&& (
RTP∑ckë
[1].
∑ylﬂdTy≥
 !
	`WebRtcNëEQ_DbGëPaylﬂd
(

114 &
MCU_ö°
->
codec_DB_ö°
, 
kDecodîAVT
)Ë&& (!
	`WebRtcNëEQ_DbIsCNGPaylﬂd
(

115 &
MCU_ö°
->
codec_DB_ö°
, 
RTP∑ckë
[0].
∑ylﬂdTy≥
))

116 && (!
	`WebRtcNëEQ_DbIsCNGPaylﬂd
(&
MCU_ö°
->
codec_DB_ö°
, 
RTP∑ckë
[1].
∑ylﬂdTy≥
)))

118 
i_No_Of_Paylﬂds
 = 1;

120 
isREDPaylﬂd
 = 1;

125 
i_k
 = 0; i_k < 
i_No_Of_Paylﬂds
; i_k++)

128 i‡(
isREDPaylﬂd
 == 1)

130 
RTP∑ckë
[
i_k
].
rcuPlC¡r
 = i_k;

134 
RTP∑ckë
[
i_k
].
rcuPlC¡r
 = 0;

138 i‡(
RTP∑ckë
[
i_k
].
∑ylﬂdTy≥
 =
	`WebRtcNëEQ_DbGëPaylﬂd
(&
MCU_ö°
->
codec_DB_ö°
,

139 
kDecodîILBC
Ë&& !
is_sync_πp
)

141 
i_ok
 = 
	`WebRtcNëEQ_DbGëS∂ôInfo
(

142 &
MCU_ö°
->
PaylﬂdS∂ô_ö°
,

143 (
WebRtcNëEQDecodî
Ë
	`WebRtcNëEQ_DbGëCodec
(&
MCU_ö°
->
codec_DB_ö°
,

144 
RTP∑ckë
[
i_k
].
∑ylﬂdTy≥
), RTP∑ckë[i_k].
∑ylﬂdLí
);

145 i‡(
i_ok
 < 0)

148  
i_ok
;

153 
i_ok
 = 
	`WebRtcNëEQ_GëTime°ampSˇlög
(
MCU_ö°
, 
RTP∑ckë
[
i_k
].
∑ylﬂdTy≥
);

154 i‡(
i_ok
 < 0)

157  
i_ok
;

160 i‡(
MCU_ö°
->
TSsˇlögInôülized
 =0 && MCU_ö°->
sˇlögFa˘‹
 !
kTSnoSˇlög
)

163 
MCU_ö°
->
exã∫ÆTS
 = 
RTP∑ckë
[
i_k
].
timeSèmp
;

164 
MCU_ö°
->
öã∫ÆTS
 = 
RTP∑ckë
[
i_k
].
timeSèmp
;

165 
MCU_ö°
->
TSsˇlögInôülized
 = 1;

169 i‡(
MCU_ö°
->
TSsˇlögInôülized
 == 1)

171 
uöt32_t
 
√wTS
 = 
	`WebRtcNëEQ_SˇÀTime°ampExã∫ÆToI¡î«l
(
MCU_ö°
,

172 
RTP∑ckë
[
i_k
].
timeSèmp
);

175 
MCU_ö°
->
exã∫ÆTS
 = 
RTP∑ckë
[
i_k
].
timeSèmp
;

178 
MCU_ö°
->
öã∫ÆTS
 = 
√wTS
;

180 
RTP∑ckë
[
i_k
].
timeSèmp
 = 
√wTS
;

184 i‡(
RTP∑ckë
[
i_k
].
∑ylﬂdTy≥
 =
	`WebRtcNëEQ_DbGëPaylﬂd
(&
MCU_ö°
->
codec_DB_ö°
,

185 
kDecodîAVT
))

187 i‡(
is_sync_πp
)

190  
RECIN_SYNC_RTP_NOT_ACCEPTABLE
;

193 #ifde‡
NETEQ_ATEVENT_DECODE


194 i‡(
MCU_ö°
->
AVT_PœyoutOn
)

196 
i_ok
 = 
	`WebRtcNëEQ_DtmfIn£πEvít
(&
MCU_ö°
->
DTMF_ö°
,

197 
RTP∑ckë
[
i_k
].
∑ylﬂd
, RTP∑ckë[i_k].
∑ylﬂdLí
,

198 
RTP∑ckë
[
i_k
].
timeSèmp
);

199 i‡(
i_ok
 != 0)

201  
i_ok
;

205 #ifde‡
NETEQ_STEREO


206 i‡(
MCU_ö°
->
usögSãªo
 == 0)

209 
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
œ°PackCNG‹DTMF
 = 1;

212 
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
œ°PackCNG‹DTMF
 = 1;

215 i‡(
	`WebRtcNëEQ_DbIsCNGPaylﬂd
(&
MCU_ö°
->
codec_DB_ö°
,

216 
RTP∑ckë
[
i_k
].
∑ylﬂdTy≥
))

219 #ifde‡
NETEQ_CNG_CODEC


221 
uöt16_t
 
fsCng
 = 
	`WebRtcNëEQ_DbGëSam∂eR©e
(&
MCU_ö°
->
codec_DB_ö°
,

222 
RTP∑ckë
[
i_k
].
∑ylﬂdTy≥
);

223 i‡(
is_sync_πp
)

226  
RECIN_SYNC_RTP_NOT_ACCEPTABLE
;

232 i‡(
fsCng
 > 32000) {

233 
fsCng
 = 32000;

235 i‡((
fsCng
 !
MCU_ö°
->
fs
) && (fsCng > 8000))

242 
	`WebRtcNëEQ_PackëBuf„rFlush
(&
MCU_ö°
->
PackëBuf„r_ö°
);

243 
MCU_ö°
->
√w_codec
 = 1;

244 
MCU_ö°
->
cuºít_Codec
 = -1;

246 
i_ok
 = 
	`WebRtcNëEQ_PackëBuf„rIn£π
(&
MCU_ö°
->
PackëBuf„r_ö°
,

247 &
RTP∑ckë
[
i_k
], &
Êushed
, 
MCU_ö°
->
av_sync
);

248 i‡(
i_ok
 < 0)

250  
RECIN_CNG_ERROR
;

252 
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
œ°PackCNG‹DTMF
 = 1;

254  
RECIN_UNKNOWNPAYLOAD
;

260 
cuº_Codec
 = 
	`WebRtcNëEQ_DbGëCodec
(&
MCU_ö°
->
codec_DB_ö°
,

261 
RTP∑ckë
[
i_k
].
∑ylﬂdTy≥
);

262 i‡(
cuº_Codec
 !
MCU_ö°
->
cuºít_Codec
)

264 i‡(
cuº_Codec
 < 0)

266  
RECIN_UNKNOWNPAYLOAD
;

268 i‡(
is_sync_πp
)

271  
RECIN_SYNC_RTP_CHANGED_CODEC
;

273 
MCU_ö°
->
cuºít_Codec
 = 
cuº_Codec
;

274 
MCU_ö°
->
cuºít_Paylﬂd
 = 
RTP∑ckë
[
i_k
].
∑ylﬂdTy≥
;

275 
i_ok
 = 
	`WebRtcNëEQ_DbGëS∂ôInfo
(&
MCU_ö°
->
PaylﬂdS∂ô_ö°
,

276 (
WebRtcNëEQDecodî
Ë
MCU_ö°
->
cuºít_Codec
,

277 
RTP∑ckë
[
i_k
].
∑ylﬂdLí
);

278 i‡(
i_ok
 < 0)

280  
i_ok
;

282 
	`WebRtcNëEQ_PackëBuf„rFlush
(&
MCU_ö°
->
PackëBuf„r_ö°
);

283 
MCU_ö°
->
√w_codec
 = 1;

287 
i_ok
 = 
	`WebRtcNëEQ_S∂ôAndIn£πPaylﬂd
(&
RTP∑ckë
[
i_k
],

288 &
MCU_ö°
->
PackëBuf„r_ö°
, &MCU_ö°->
PaylﬂdS∂ô_ö°
,

289 &
Êushed
, 
MCU_ö°
->
av_sync
);

290 i‡(
i_ok
 < 0)

292  
i_ok
;

294 i‡(
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
œ°PackCNG‹DTMF
 != 0)

297 
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
œ°PackCNG‹DTMF
 = -1;

301 i‡(
Êushed
)

303 
MCU_ö°
->
√w_codec
 = 1;

311 i‡(!
is_sync_πp
 &&

312 (
cuº_Codec
 = 
	`WebRtcNëEQ_DbGëCodec
(&
MCU_ö°
->
codec_DB_ö°
,

313 
RTP∑ckë
[0].
∑ylﬂdTy≥
)) >= 0)

315 
codecPos
 = 
MCU_ö°
->
codec_DB_ö°
.
posôi⁄
[
cuº_Codec
];

316 i‡(
MCU_ö°
->
codec_DB_ö°
.
funcUpdBWE°
[
codecPos
] !
NULL
)

318 i‡(
RTP∑ckë
[0].
°¨ts_byã1
)

321 
i_k
 = 0; i_k < 
RTP∑ckë
[0].
∑ylﬂdLí
; i_k++)

323 
	`WEBRTC_SPL_SET_BYTE
(
RTP∑ckë
[0].
∑ylﬂd
,

324 
	`WEBRTC_SPL_GET_BYTE
(
RTP∑ckë
[0].
∑ylﬂd
, 
i_k
+1),

325 
i_k
);

327 
RTP∑ckë
[0].
°¨ts_byã1
 = 0;

330 
MCU_ö°
->
codec_DB_ö°
.
funcUpdBWE°
[
codecPos
](

331 
MCU_ö°
->
codec_DB_ö°
.
codec_°©e
[
codecPos
],

332 (c⁄° 
uöt16_t
 *Ë
RTP∑ckë
[0].
∑ylﬂd
,

333 (
öt32_t
Ë
RTP∑ckë
[0].
∑ylﬂdLí
, RTP∑ckë[0].
£qNumbî
,

334 (
uöt32_t
Ë
RTP∑ckë
[0].
timeSèmp
, (uöt32_tË
uw32_timeRec
);

338 i‡(
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
œ°PackCNG‹DTMF
 == 0)

341 
ãmp_bufsize
 = 
	`WebRtcNëEQ_PackëBuf„rGëSize
(

342 &
MCU_ö°
->
PackëBuf„r_ö°
, &MCU_ö°->
codec_DB_ö°
,

343 
MCU_ö°
->
av_sync
Ë- 
ãmp_bufsize
;

345 i‡((
ãmp_bufsize
 > 0Ë&& (
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
œ°PackCNG‹DTMF


346 =0Ë&& (
ãmp_bufsize


347 !
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
∑ckëS≥echLíSamp
))

350 
	`WebRtcNëEQ_SëPackëS≥echLí
(&(
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
),

351 (
öt16_t
Ë
ãmp_bufsize
, 
MCU_ö°
->
fs
);

355 i‡((
öt32_t
Ë(
RTP∑ckë
[0].
timeSèmp
 - 
MCU_ö°
->timeStamp) >= 0

356 && !
MCU_ö°
->
√w_codec
)

362 
	`WebRtcNëEQ_Upd©eI©Sèti°ics
(&
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
,

363 
MCU_ö°
->
PackëBuf„r_ö°
.
maxIn£πPosôi⁄s
, 
RTP∑ckë
[0].
£qNumbî
,

364 
RTP∑ckë
[0].
timeSèmp
, 
MCU_ö°
->
fs
,

365 
	`WebRtcNëEQ_DbIsMDCodec
((
WebRtcNëEQDecodî
Ë
MCU_ö°
->
cuºít_Codec
),

366 (
MCU_ö°
->
NëEqPœyoutMode
 =
kPœyoutSåómög
));

369 i‡(
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
œ°PackCNG‹DTMF
 == -1)

376 
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
œ°PackCNG‹DTMF
 = 0;

377 
MCU_ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
∑ckëI©Cou¡Samp
 = 0;

381 
	}
}

383 
	$WebRtcNëEQ_GëTime°ampSˇlög
(
MCUIn°_t
 *
MCU_ö°
, 
πpPaylﬂdTy≥
)

385 
WebRtcNëEQDecodî
 
codec
;

386 
codecNumbî
;

388 
codecNumbî
 = 
	`WebRtcNëEQ_DbGëCodec
(&
MCU_ö°
->
codec_DB_ö°
, 
πpPaylﬂdTy≥
);

389 i‡(
codecNumbî
 < 0)

392  
codecNumbî
;

396 
codec
 = (
WebRtcNëEQDecodî
Ë
codecNumbî
;

402 
codec
)

404 
kDecodîG722
:

405 
kDecodîG722_2ch
:

408 
MCU_ö°
->
sˇlögFa˘‹
 = 
kTSsˇlögTwo
;

411 
kDecodîISACfb
:

412 
kDecodîOpus
:

417 
MCU_ö°
->
sˇlögFa˘‹
 = 
kTSsˇlögTwoThúds
;

421 
kDecodîAVT
:

422 
kDecodîCNG
:

426 
uöt16_t
 
ßm∂e_‰eq
 =

427 
	`WebRtcNëEQ_DbGëSam∂eR©e
(&
MCU_ö°
->
codec_DB_ö°
,

428 
πpPaylﬂdTy≥
);

429 i‡(
ßm∂e_‰eq
 == 48000) {

430 
MCU_ö°
->
sˇlögFa˘‹
 = 
kTSsˇlögTwoThúds
;

440 
MCU_ö°
->
sˇlögFa˘‹
 = 
kTSnoSˇlög
;

445 
	}
}

447 
uöt32_t
 
	$WebRtcNëEQ_SˇÀTime°ampExã∫ÆToI¡î«l
(c⁄° 
MCUIn°_t
 *
MCU_ö°
,

448 
uöt32_t
 
exã∫ÆTS
)

450 
öt32_t
 
time°ampDiff
;

451 
uöt32_t
 
öã∫ÆTS
;

454 
time°ampDiff
 = 
exã∫ÆTS
 - 
MCU_ö°
->externalTS;

456 
MCU_ö°
->
sˇlögFa˘‹
)

458 
kTSsˇlögTwo
:

461 
time°ampDiff
 = 
	`WEBRTC_SPL_LSHIFT_W32
(timestampDiff, 1);

464 
kTSsˇlögTwoThúds
:

467 
time°ampDiff
 = 
	`WEBRTC_SPL_LSHIFT_W32
(timestampDiff, 1);

468 
time°ampDiff
 = 
	`WebRtcS∂_DivW32W16
(timestampDiff, 3);

471 
kTSsˇlögFourThúds
:

474 
time°ampDiff
 = 
	`WEBRTC_SPL_LSHIFT_W32
(timestampDiff, 2);

475 
time°ampDiff
 = 
	`WebRtcS∂_DivW32W16
(timestampDiff, 3);

485 
öã∫ÆTS
 = 
MCU_ö°
->öã∫ÆTS + 
time°ampDiff
;

487  
öã∫ÆTS
;

488 
	}
}

490 
uöt32_t
 
	$WebRtcNëEQ_SˇÀTime°ampI¡î«lToExã∫Æ
(c⁄° 
MCUIn°_t
 *
MCU_ö°
,

491 
uöt32_t
 
öã∫ÆTS
)

493 
öt32_t
 
time°ampDiff
;

494 
uöt32_t
 
exã∫ÆTS
;

497 
time°ampDiff
 = (
öt32_t
Ë
öã∫ÆTS
 - 
MCU_ö°
->internalTS;

499 
MCU_ö°
->
sˇlögFa˘‹
)

501 
kTSsˇlögTwo
:

504 
time°ampDiff
 = 
	`WEBRTC_SPL_RSHIFT_W32
(timestampDiff, 1);

507 
kTSsˇlögTwoThúds
:

510 
time°ampDiff
 = 
	`WEBRTC_SPL_MUL_32_16
(timestampDiff, 3);

511 
time°ampDiff
 = 
	`WEBRTC_SPL_RSHIFT_W32
(timestampDiff, 1);

514 
kTSsˇlögFourThúds
:

517 
time°ampDiff
 = 
	`WEBRTC_SPL_MUL_32_16
(timestampDiff, 3);

518 
time°ampDiff
 = 
	`WEBRTC_SPL_RSHIFT_W32
(timestampDiff, 2);

528 
exã∫ÆTS
 = 
MCU_ö°
->exã∫ÆTS + 
time°ampDiff
;

530  
exã∫ÆTS
;

531 
	}
}

	@recout.c

16 
	~"d•.h
"

18 
	~<as£π.h
>

19 
	~<°rög.h
>

21 
	~"sig«l_¥o˚ssög_libøry.h
"

23 
	~"d•_hñpfun˘i⁄s.h
"

24 
	~"√ãq_îr‹_codes.h
"

25 
	~"√ãq_deföes.h
"

26 
	~"mcu_d•_comm⁄.h
"

29 
	#TYPE_SPEECH
 1

	)

30 
	#TYPE_CNG
 2

	)

32 #ifde‡
NETEQ_DELAY_LOGGING


33 
	~"dñay_loggög.h
"

34 
	~<°dio.h
>

35 #¥agm®
mesßge
("*******************************************************************")

36 #¥agm®
mesßge
("You have specifiedÅo use NETEQ_DELAY_LOGGING inÅhe NetEQÜibrary.")

37 #¥agm®
mesßge
("Make sureÅhat yourÅestápplication supportsÅhis.")

38 #¥agm®
mesßge
("*******************************************************************")

56 
	#SCRATCH_ALGORITHM_BUFFER
 0

	)

57 
	#SCRATCH_NETEQ_NORMAL
 0

	)

58 
	#SCRATCH_NETEQ_MERGE
 0

	)

60 #i‡(
deföed
(
NETEQ_48KHZ_WIDEBAND
))

61 
	#SCRATCH_DSP_INFO
 6480

	)

62 
	#SCRATCH_NETEQ_ACCELERATE
 1440

	)

63 
	#SCRATCH_NETEQ_BGN_UPDATE
 2880

	)

64 
	#SCRATCH_NETEQ_EXPAND
 756

	)

65 #ñi‡(
deföed
(
NETEQ_32KHZ_WIDEBAND
))

66 
	#SCRATCH_DSP_INFO
 4320

	)

67 
	#SCRATCH_NETEQ_ACCELERATE
 960

	)

68 
	#SCRATCH_NETEQ_BGN_UPDATE
 1920

	)

69 
	#SCRATCH_NETEQ_EXPAND
 504

	)

70 #ñi‡(
deföed
(
NETEQ_WIDEBAND
))

71 
	#SCRATCH_DSP_INFO
 2160

	)

72 
	#SCRATCH_NETEQ_ACCELERATE
 480

	)

73 
	#SCRATCH_NETEQ_BGN_UPDATE
 960

	)

74 
	#SCRATCH_NETEQ_EXPAND
 252

	)

76 
	#SCRATCH_DSP_INFO
 1080

	)

77 
	#SCRATCH_NETEQ_ACCELERATE
 240

	)

78 
	#SCRATCH_NETEQ_BGN_UPDATE
 480

	)

79 
	#SCRATCH_NETEQ_EXPAND
 126

	)

82 #i‡(
deföed
(
NETEQ_48KHZ_WIDEBAND
))

83 
	#SIZE_SCRATCH_BUFFER
 6516

	)

84 #ñi‡(
deföed
(
NETEQ_32KHZ_WIDEBAND
))

85 
	#SIZE_SCRATCH_BUFFER
 4344

	)

86 #ñi‡(
deföed
(
NETEQ_WIDEBAND
))

87 
	#SIZE_SCRATCH_BUFFER
 2172

	)

89 
	#SIZE_SCRATCH_BUFFER
 1086

	)

92 #ifde‡
NETEQ_DELAY_LOGGING


93 
FILE
 *
dñay_fid2
;

94 
uöt32_t
 
tŸ_ª˚ived_∑ckës
;

98 
	$WebRtcNëEQ_RecOutI¡î«l
(
DSPIn°_t
 *
ö°
, 
öt16_t
 *
pw16_outD©a
,

99 
öt16_t
 *
pw16_Àn
, i¡16_à
BGN⁄ly
,

100 
av_sync
)

103 
öt16_t
 
blockLí
, 
∑ylﬂdLí
, 
Àn
 = 0, 
pos
;

104 
öt16_t
 
w16_tmp1
, 
w16_tmp2
, 
w16_tmp3
, 
D©aEnough
;

105 
öt16_t
 *
blockPå
;

106 
öt16_t
 
MD
 = 0;

108 
öt16_t
 
•ìchTy≥
 = 
TYPE_SPEECH
;

109 
uöt16_t
 
ö°r
;

110 
uöt16_t
 
uw16_tmp
;

111 #ifde‡
SCRATCH


112 
pw8_S¸©chBuf„r
[((
SIZE_SCRATCH_BUFFER
 + 1) * 2)];

113 
öt16_t
 *
pw16_s¸©chPå
 = (öt16_t*Ë
pw8_S¸©chBuf„r
;

115 
öt16_t
 
pw16_decoded_buf„r
[
NETEQ_MAX_FRAME_SIZE
+240*6];

116 
öt16_t
 *
pw16_NëEqAlg‹ôhm_buf„r
 = 
pw16_s¸©chPå


117 + 
SCRATCH_ALGORITHM_BUFFER
;

118 
DSP2MCU_öfo_t
 *
d•Info
 = (DSP2MCU_öfo_t*Ë(
pw16_s¸©chPå
 + 
SCRATCH_DSP_INFO
);

121 
öt16_t
 
pw16_decoded_buf„r
[
NETEQ_MAX_FRAME_SIZE
+240*6];

122 
öt16_t
 
pw16_NëEqAlg‹ôhm_buf„r
[
NETEQ_MAX_OUTPUT_SIZE
+240*6];

123 
DSP2MCU_öfo_t
 
d•InfoSåu˘
;

124 
DSP2MCU_öfo_t
 *
d•Info
 = &
d•InfoSåu˘
;

126 
öt16_t
 
fs_mu…
;

127 
b‹rowedSam∂es
;

128 
ﬁdB‹rowedSam∂es
;

129 
ªtu∫_vÆue
 = 0;

130 
öt16_t
 
œ°ModeBGN⁄ly
 = (
ö°
->
w16_mode
 & 
MODE_BGN_ONLY
) != 0;

131 *
maöIn°Backup
 = 
ö°
->
maö_ö°
;

133 #ifde‡
NETEQ_DELAY_LOGGING


134 
ãmp_v¨
;

136 
öt16_t
 
dtmfVÆue
 = -1;

137 
öt16_t
 
dtmfVﬁume
 = -1;

138 
∂ayDtmf
 = 0;

139 #ifde‡
NETEQ_ATEVENT_DECODE


140 
dtmfSwôch
 = 0;

142 #ifde‡
NETEQ_STEREO


143 
Ma°îSœveInfo
 *
msInfo
 = 
ö°
->msInfo;

145 
öt16_t
 *
sh¨edMem
 = 
pw16_NëEqAlg‹ôhm_buf„r
;

146 
ö°
->
pw16_ªadAddªss
 = 
sh¨edMem
;

147 
ö°
->
pw16_wrôeAddªss
 = 
sh¨edMem
;

150 i‡(
ö°
->
codec_±r_ö°
.
funcGëMDöfo
 !
NULL
)

152 
MD
 = 
ö°
->
codec_±r_ö°
.
	`funcGëMDöfo
(ö°->codec_±r_ö°.
codec_°©e
);

153 i‡(
MD
 > 0)

154 
MD
 = 1;

156 
MD
 = 0;

159 #ifde‡
NETEQ_STEREO


160 i‡((
msInfo
->
msMode
 =
NETEQ_SLAVE
Ë&& (
ö°
->
codec_±r_ö°
.
funcDecode
 !
NULL
))

168 
uöt32_t
 
cuºítMa°îTime°amp
;

169 
uöt32_t
 
cuºítSœveTime°amp
;

171 
cuºítMa°îTime°amp
 = 
msInfo
->
ídTime°amp
 - msInfo->
ßm∂esLe·WôhOvîœp
;

172 
cuºítSœveTime°amp
 = 
ö°
->
ídTime°amp
 - (ö°->
ídPosôi⁄
 - in°->
curPosôi⁄
);

178 i‡(
cuºítSœveTime°amp
 < 0x40000000 &&

179 
cuºítMa°îTime°amp
 > 0xc0000000) {

181 
cuºítSœveTime°amp
 +(0xfffffff‡- 
cuºítMa°îTime°amp
) + 1;

182 
cuºítMa°îTime°amp
 = 0;

183 } i‡(
cuºítMa°îTime°amp
 < 0x40000000 &&

184 
cuºítSœveTime°amp
 > 0xc0000000) {

186 
cuºítMa°îTime°amp
 +(0xfffffff‡- 
cuºítSœveTime°amp
) + 1;

187 
cuºítSœveTime°amp
 = 0;

190 i‡(
cuºítSœveTime°amp
 < 
cuºítMa°îTime°amp
)

193 
ö°
->
curPosôi⁄
 +
cuºítMa°îTime°amp
 - 
cuºítSœveTime°amp
;

196 i‡(
cuºítSœveTime°amp
 > 
cuºítMa°îTime°amp
)

199 
ö°
->
curPosôi⁄
 -
cuºítSœveTime°amp
 - 
cuºítMa°îTime°amp
;

203 
ö°
->
curPosôi⁄
 = 
	`WEBRTC_SPL_MIN
(inst->curPosition,

204 
ö°
->
ídPosôi⁄
 - in°->
Ex∑ndIn°
.
w16_ovîœp
);

207 
ö°
->
curPosôi⁄
 = 
	`WEBRTC_SPL_MAX
(inst->curPosition, 0);

212 
d•Info
->
∂ayedOutTS
 = 
ö°
->
ídTime°amp
;

213 
d•Info
->
ßm∂esLe·
 = 
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄


214 - 
ö°
->
Ex∑ndIn°
.
w16_ovîœp
;

215 
d•Info
->
MD
 = MD;

216 
d•Info
->
œ°Mode
 = 
ö°
->
w16_mode
;

217 
d•Info
->
‰ameLí
 = 
ö°
->
w16_‰ameLí
;

220 i‡(
ö°
->
codec_±r_ö°
.
funcDecode
 =
NULL
)

222 
d•Info
->
œ°Mode
 |
MODE_AWAITING_CODEC_PTR
;

225 #ifde‡
NETEQ_STEREO


226 i‡(
msInfo
->
msMode
 =
NETEQ_SLAVE
 && (msInfo->
exåaInfo
 =
DTMF_OVERDUB


227 || 
msInfo
->
exåaInfo
 =
DTMF_ONLY
))

230 
d•Info
->
œ°Mode
 |
MODE_MASTER_DTMF_SIGNAL
;

233 i‡(
msInfo
->
msMode
 !
NETEQ_MONO
)

236 
d•Info
->
œ°Mode
 |
MODE_USING_STEREO
;

240 
	`WEBRTC_SPL_MEMCPY_W8
(
ö°
->
pw16_wrôeAddªss
,
d•Info
,(
DSP2MCU_öfo_t
));

243 #ifde‡
NETEQ_STEREO


244 
	`as£π
(
msInfo
 !
NULL
);

245 i‡(
msInfo
->
msMode
 =
NETEQ_MASTER
)

248 
	`WebRtcS∂_MemSëW16
((
öt16_t
 *Ë
msInfo
, 0,

249 (
Ma°îSœveInfo
Ë/ (
öt16_t
));

251 
msInfo
->
msMode
 = 
NETEQ_MASTER
;

254 
msInfo
->
ídTime°amp
 = 
ö°
->endTimestamp;

255 
msInfo
->
ßm∂esLe·WôhOvîœp
 = 
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
;

264 
ªtu∫_vÆue
 = 
	`WebRtcNëEQ_DSP2MCUöãºu±
((
MaöIn°_t
 *Ë
ö°
->
maö_ö°
, 
sh¨edMem
);

267 
ö°r
 = (
uöt16_t
Ë(
ö°
->
pw16_ªadAddªss
[0] & 0xf000);

269 #ifde‡
NETEQ_STEREO


270 i‡(
msInfo
->
msMode
 =
NETEQ_MASTER
)

272 
msInfo
->
ö°ru˘i⁄
 = 
ö°r
;

274 i‡(
msInfo
->
msMode
 =
NETEQ_SLAVE
)

281 i‡(
ªtu∫_vÆue
 < 0)

283 
ö°
->
w16_mode
 = 
MODE_ERROR
;

284 
d•Info
->
œ°Mode
 = 
MODE_ERROR
;

285  
ªtu∫_vÆue
;

288 
blockPå
 = &((
ö°
->
pw16_ªadAddªss
)[3]);

291 i‡((
ö°
->
pw16_ªadAddªss
[0] & 
DSP_DTMF_PAYLOAD
) != 0)

293 
∂ayDtmf
 = 1;

294 
dtmfVÆue
 = 
blockPå
[1];

295 
dtmfVﬁume
 = 
blockPå
[2];

296 
blockPå
 += 3;

298 #ifde‡
NETEQ_STEREO


299 i‡(
msInfo
->
msMode
 =
NETEQ_MASTER
)

302 
msInfo
->
exåaInfo
 = 
DTMF_OVERDUB
;

307 
blockLí
 = (((*
blockPå
Ë& 
DSP_CODEC_MASK_RED_FLAG
) + 1) >> 1;

308 
∑ylﬂdLí
 = ((*
blockPå
Ë& 
DSP_CODEC_MASK_RED_FLAG
);

309 
blockPå
++;

312 i‡((
ö°
->
pw16_ªadAddªss
[0] & 0x0f00Ë=
DSP_CODEC_NEW_CODEC
)

314 
	`WEBRTC_SPL_MEMCPY_W16
(&
ö°
->
codec_±r_ö°
,
blockPå
,(
∑ylﬂdLí
+1)>>1);

315 i‡(
ö°
->
codec_±r_ö°
.
codec_fs
 != 0)

317 
ªtu∫_vÆue
 = 
	`WebRtcNëEQ_DSPInô
(
ö°
, in°->
codec_±r_ö°
.
codec_fs
);

318 i‡(
ªtu∫_vÆue
 != 0)

320 
ö°r
 = 
DSP_INSTR_FADE_TO_BGN
;

322 #ifde‡
NETEQ_DELAY_LOGGING


323 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_CHANGE_FS
;

324 i‡((
	`fwrôe
(&
ãmp_v¨
, (),

325 1, 
dñay_fid2
) != 1) ||

326 (
	`fwrôe
(&
ö°
->
fs
, (
uöt16_t
),

327 1, 
dñay_fid2
) != 1)) {

335 
	`WEBRTC_SPL_MEMCPY_W16
(&
ö°
->
codec_±r_ö°
,
blockPå
,(
∑ylﬂdLí
+1)>>1);

336 
ö°
->
ídTime°amp
 = in°->
codec_±r_ö°
.
timeSèmp
;

337 
ö°
->
videoSyncTime°amp
 = in°->
codec_±r_ö°
.
timeSèmp
;

338 
blockPå
 +
blockLí
;

339 
blockLí
 = (((*
blockPå
Ë& 
DSP_CODEC_MASK_RED_FLAG
) + 1) >> 1;

340 
∑ylﬂdLí
 = ((*
blockPå
Ë& 
DSP_CODEC_MASK_RED_FLAG
);

341 
blockPå
++;

342 i‡(
ö°
->
codec_±r_ö°
.
funcDecodeInô
 !
NULL
)

344 
ö°
->
codec_±r_ö°
.
	`funcDecodeInô
(ö°->codec_±r_ö°.
codec_°©e
);

347 #ifde‡
NETEQ_CNG_CODEC


351 
	`WEBRTC_SPL_MEMCPY_W16
(&
ö°
->
CNG_Codec_ö°
,
blockPå
,(
∑ylﬂdLí
+1)>>1);

352 
blockPå
 +
blockLí
;

353 
blockLí
 = (((*
blockPå
Ë& 
DSP_CODEC_MASK_RED_FLAG
) + 1) >> 1;

354 
∑ylﬂdLí
 = ((*
blockPå
Ë& 
DSP_CODEC_MASK_RED_FLAG
);

355 
blockPå
++;

356 i‡(
ö°
->
CNG_Codec_ö°
 !
NULL
)

358 
	`WebRtcCng_InôDec
(
ö°
->
CNG_Codec_ö°
);

362 i‡((
ö°
->
pw16_ªadAddªss
[0] & 0x0f00Ë=
DSP_CODEC_RESET
)

365 i‡(
ö°
->
codec_±r_ö°
.
funcDecodeInô
 !
NULL
)

367 
ö°
->
codec_±r_ö°
.
	`funcDecodeInô
(ö°->codec_±r_ö°.
codec_°©e
);

370 #ifde‡
NETEQ_CNG_CODEC


372 i‡(
ö°
->
CNG_Codec_ö°
 !
NULL
)

374 
	`WebRtcCng_InôDec
(
ö°
->
CNG_Codec_ö°
);

379 
fs_mu…
 = 
	`WebRtcNëEQ_CÆcFsMu…
(
ö°
->
fs
);

382 i‡((
ö°
->
pw16_ªadAddªss
[0] & 0x0f00Ë=
DSP_CODEC_ADD_LATE_PKT
)

384 i‡(
ö°
->
codec_±r_ö°
.
funcAddL©ePkt
 !
NULL
)

387 
ö°
->
codec_±r_ö°
.
	`funcAddL©ePkt
(ö°->codec_±r_ö°.
codec_°©e
, 
blockPå
,

388 
∑ylﬂdLí
);

390 
blockPå
 +
blockLí
;

391 
blockLí
 = (((*
blockPå
Ë& 
DSP_CODEC_MASK_RED_FLAG
) + 1) >> 1;

392 
∑ylﬂdLí
 = ((*
blockPå
Ë& 
DSP_CODEC_MASK_RED_FLAG
);

393 
blockPå
++;

397 i‡((
ö°r
 =
DSP_INSTR_NORMAL
Ë|| (ö°∏=
DSP_INSTR_ACCELERATE
) || (instr

398 =
DSP_INSTR_MERGE
Ë|| (
ö°r
 =
DSP_INSTR_PREEMPTIVE_EXPAND
))

401 i‡((
ö°r
 =
DSP_INSTR_MERGE
Ë&& (
ö°
->
codec_±r_ö°
.
funcDecodePLC
 !
NULL
))

403 
Àn
 = 0;

404 
Àn
 = 
ö°
->
codec_±r_ö°
.
	`funcDecodePLC
(ö°->codec_±r_ö°.
codec_°©e
,

405 &
pw16_decoded_buf„r
[
Àn
], 1);

407 
Àn
 = 0;

410 (
blockLí
 > 0Ë&& (
Àn
 < (240 * 
fs_mu…
)))

412 i‡(
ö°
->
codec_±r_ö°
.
funcDecode
 !
NULL
)

414 
öt16_t
 
dec_Lí
;

415 i‡(!
BGN⁄ly
)

418 i‡(
av_sync
 && 
	`WebRtcNëEQ_IsSyncPaylﬂd
(
blockPå
,

419 
∑ylﬂdLí
)) {

421 
dec_Lí
 = 
ö°
->
w16_‰ameLí
;

422 
	`mem£t
(&
pw16_decoded_buf„r
[
Àn
], 0, 
dec_Lí
 *

423 (
pw16_decoded_buf„r
[
Àn
]));

432 i‡(((*(
blockPå
 - 1Ë& 
DSP_CODEC_RED_FLAG
) != 0)

433 && (
ö°
->
codec_±r_ö°
.
funcDecodeRCU
 !
NULL
))

435 
dec_Lí
 = 
ö°
->
codec_±r_ö°
.
	`funcDecodeRCU
(

436 
ö°
->
codec_±r_ö°
.
codec_°©e
, 
blockPå
,

437 
∑ylﬂdLí
, &
pw16_decoded_buf„r
[
Àn
], &
•ìchTy≥
);

442 
dec_Lí
 = 
ö°
->
codec_±r_ö°
.
	`funcDecode
(

443 
ö°
->
codec_±r_ö°
.
codec_°©e
, 
blockPå
,

444 
∑ylﬂdLí
, &
pw16_decoded_buf„r
[
Àn
], &
•ìchTy≥
);

455 
dec_Lí
 = 
ö°
->
w16_‰ameLí
;

458 i‡(
dec_Lí
 > 0)

460 
Àn
 +
dec_Lí
;

462 
ö°
->
w16_‰ameLí
 = 
dec_Lí
;

464 i‡(
dec_Lí
 < 0)

467 
Àn
 = -1;

474 i‡(
Àn
 > 
NETEQ_MAX_FRAME_SIZE
)

476 
	`WebRtcS∂_MemSëW16
(
pw16_outD©a
, 0, 
ö°
->
time°ampsPîCÆl
);

477 *
pw16_Àn
 = 
ö°
->
time°ampsPîCÆl
;

478 
ö°
->
w16_mode
 = 
MODE_ERROR
;

479 
d•Info
->
œ°Mode
 = 
MODE_ERROR
;

480  
RECOUT_ERROR_DECODED_TOO_MUCH
;

484 i‡(
maöIn°Backup
 !
ö°
->
maö_ö°
)

487  
CORRUPT_INSTANCE
;

491 
blockPå
 +
blockLí
;

492 
blockLí
 = (((*
blockPå
Ë& 
DSP_CODEC_MASK_RED_FLAG
) + 1) >> 1;

493 
∑ylﬂdLí
 = ((*
blockPå
Ë& 
DSP_CODEC_MASK_RED_FLAG
);

494 
blockPå
++;

497 i‡(
Àn
 < 0)

499 
Àn
 = 0;

500 
ö°
->
ídTime°amp
 +ö°->
w16_‰ameLí
;

501 i‡(
ö°
->
codec_±r_ö°
.
funcGëEº‹Code
 !
NULL
)

503 
ªtu∫_vÆue
 = -
ö°
->
codec_±r_ö°
.
	`funcGëEº‹Code
(

504 
ö°
->
codec_±r_ö°
.
codec_°©e
);

508 
ªtu∫_vÆue
 = 
RECOUT_ERROR_DECODING
;

510 
ö°r
 = 
DSP_INSTR_FADE_TO_BGN
;

512 i‡(
•ìchTy≥
 !
TYPE_CNG
)

518 
ö°
->
ídTime°amp
 +
Àn
;

521 i‡(
ö°r
 =
DSP_INSTR_NORMAL_ONE_DESC
)

523 i‡(
ö°
->
codec_±r_ö°
.
funcDecode
 !
NULL
)

525 
Àn
 = 
ö°
->
codec_±r_ö°
.
	`funcDecode
(ö°->codec_±r_ö°.
codec_°©e
, 
NULL
, 0,

526 
pw16_decoded_buf„r
, &
•ìchTy≥
);

527 #ifde‡
NETEQ_DELAY_LOGGING


528 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_DECODE_ONE_DESC
;

529 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

532 i‡(
	`fwrôe
(&
ö°
->
ídTime°amp
, (
uöt32_t
),

533 1, 
dñay_fid2
) != 1) {

536 i‡(
	`fwrôe
(&
d•Info
->
ßm∂esLe·
, (
uöt16_t
),

537 1, 
dñay_fid2
) != 1) {

540 
tŸ_ª˚ived_∑ckës
++;

543 i‡(
•ìchTy≥
 !
TYPE_CNG
)

549 
ö°
->
ídTime°amp
 +
Àn
;

553 i‡(
maöIn°Backup
 !
ö°
->
maö_ö°
)

556  
CORRUPT_INSTANCE
;

559 i‡(
Àn
 <= 0)

561 
Àn
 = 0;

562 i‡(
ö°
->
codec_±r_ö°
.
funcGëEº‹Code
 !
NULL
)

564 
ªtu∫_vÆue
 = -
ö°
->
codec_±r_ö°
.
	`funcGëEº‹Code
(

565 
ö°
->
codec_±r_ö°
.
codec_°©e
);

569 
ªtu∫_vÆue
 = 
RECOUT_ERROR_DECODING
;

571 i‡((
ö°
->
codec_±r_ö°
.
funcDecodeInô
 !
NULL
)

572 && (
ö°
->
codec_±r_ö°
.
codec_°©e
 !
NULL
))

575 
ö°
->
codec_±r_ö°
.
	`funcDecodeInô
(ö°->codec_±r_ö°.
codec_°©e
);

577 
ö°
->
ídTime°amp
 +ö°->
w16_‰ameLí
;

578 
ö°r
 = 
DSP_INSTR_FADE_TO_BGN
;

582 i‡(
Àn
 =0 && 
œ°ModeBGN⁄ly
)

584 
BGN⁄ly
 = 1;

587 #ifde‡
NETEQ_VAD


588 i‡((
•ìchTy≥
 =
TYPE_CNG
)

589 || ((
ö°r
 =
DSP_INSTR_DO_RFC3389CNG
Ë&& (
blockLí
 > 0))

590 || (
ö°
->
fs
 > 16000))

593 
ö°
->
VADIn°
.
VADE«bÀd
 = 0;

594 
ö°
->
VADIn°
.
VADDecisi⁄
 = 1;

595 
ö°
->
VADIn°
.
SIDöãrvÆCou¡î
 = 0;

597 i‡(!
ö°
->
VADIn°
.
VADE«bÀd
)

599 
ö°
->
VADIn°
.
SIDöãrvÆCou¡î
++;

603 i‡(
ö°
->
VADIn°
.
SIDöãrvÆCou¡î
 >
POST_DECODE_VAD_AUTO_ENABLE
)

610 
	`WebRtcNëEQ_InôVAD
(&
ö°
->
VADIn°
, in°->
fs
);

613 i‡(
Àn
 > 0

614 && 
ö°
->
VADIn°
.
VADE«bÀd


615 && 
ö°
->
fs
 <= 16000)

617 
VAD‰ameSize
;

618 
VADSam∂ePå
 = 0;

620 
ö°
->
VADIn°
.
VADDecisi⁄
 = 0;

622 i‡(
ö°
->
VADIn°
.
VADFun˘i⁄
 !
NULL
)

625 
VAD‰ameSize
 = 30; VADframeSize >= 10; VADframeSize -= 10)

629 
ö°
->
VADIn°
.
VADDecisi⁄
 == 0

630 && 
Àn
 - 
VADSam∂ePå
 >
VAD‰ameSize
 * 
fs_mu…
 * 8)

638 
ö°
->
VADIn°
.
VADDecisi⁄
 |ö°->VADIn°.
	`VADFun˘i⁄
(

639 
ö°
->
VADIn°
.
VADSèã
, (Ëö°->
fs
,

640 (
öt16_t
 *Ë&
pw16_decoded_buf„r
[
VADSam∂ePå
],

641 (
VAD‰ameSize
 * 
fs_mu…
 * 8));

643 
VADSam∂ePå
 +
VAD‰ameSize
 * 
fs_mu…
 * 8;

649 
ö°
->
VADIn°
.
VADDecisi⁄
 = 1;

650 
ö°
->
VADIn°
.
VADE«bÀd
 = 0;

657 
uw16_tmp
 = (
uöt16_t
Ë
ö°
->
pw16_ªadAddªss
[1];

658 
ö°
->
ídTime°amp
 +(((
uöt32_t
Ë
uw16_tmp
) << 16);

659 
uw16_tmp
 = (
uöt16_t
Ë
ö°
->
pw16_ªadAddªss
[2];

660 
ö°
->
ídTime°amp
 +
uw16_tmp
;

662 i‡(
BGN⁄ly
 && 
Àn
 > 0)

669 
	`WebRtcNëEQ_Gíî©eBGN
(
ö°
,

670 #ifde‡
SCRATCH


671 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_EXPAND
,

673 
pw16_decoded_buf„r
, 
Àn
);

677 
ö°r
)

679 
DSP_INSTR_NORMAL
:

682 
	`WebRtcNëEQ_N‹mÆ
(
ö°
,

683 #ifde‡
SCRATCH


684 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_NORMAL
,

686 
pw16_decoded_buf„r
, 
Àn
, 
pw16_NëEqAlg‹ôhm_buf„r
, &len);

689 i‡((
•ìchTy≥
 =
TYPE_CNG
Ë|| ((
ö°
->
w16_mode
 =
MODE_CODEC_INTERNAL_CNG
)

690 && (
Àn
 == 0)))

692 
ö°
->
w16_mode
 = 
MODE_CODEC_INTERNAL_CNG
;

695 #ifde‡
NETEQ_ATEVENT_DECODE


696 i‡(
∂ayDtmf
 == 0)

698 
ö°
->
DTMFIn°
.
ªöô
 = 1;

702 
DSP_INSTR_NORMAL_ONE_DESC
:

705 
	`WebRtcNëEQ_N‹mÆ
(
ö°
,

706 #ifde‡
SCRATCH


707 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_NORMAL
,

709 
pw16_decoded_buf„r
, 
Àn
, 
pw16_NëEqAlg‹ôhm_buf„r
, &len);

710 #ifde‡
NETEQ_ATEVENT_DECODE


711 i‡(
∂ayDtmf
 == 0)

713 
ö°
->
DTMFIn°
.
ªöô
 = 1;

716 
ö°
->
w16_mode
 = 
MODE_ONE_DESCRIPTOR
;

718 
DSP_INSTR_MERGE
:

719 #ifde‡
NETEQ_DELAY_LOGGING


720 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_MERGE_INFO
;

721 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

724 
ãmp_v¨
 = -
Àn
;

727 
ªtu∫_vÆue
 = 
	`WebRtcNëEQ_Mîge
(
ö°
,

728 #ifde‡
SCRATCH


729 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_MERGE
,

731 
pw16_decoded_buf„r
, 
Àn
, 
pw16_NëEqAlg‹ôhm_buf„r
, &len);

733 i‡(
ªtu∫_vÆue
 < 0)

736  
ªtu∫_vÆue
;

739 #ifde‡
NETEQ_DELAY_LOGGING


740 
ãmp_v¨
 +
Àn
;

741 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

746 i‡(
•ìchTy≥
 =
TYPE_CNG
Ë
ö°
->
w16_mode
 = 
MODE_CODEC_INTERNAL_CNG
;

747 #ifde‡
NETEQ_ATEVENT_DECODE


748 i‡(
∂ayDtmf
 == 0)

750 
ö°
->
DTMFIn°
.
ªöô
 = 1;

755 
DSP_INSTR_EXPAND
:

756 
Àn
 = 0;

757 
pos
 = 0;

758 (
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
 - in°->
Ex∑ndIn°
.
w16_ovîœp
 + 
pos
)

759 < (
ö°
->
time°ampsPîCÆl
))

761 
ªtu∫_vÆue
 = 
	`WebRtcNëEQ_Ex∑nd
(
ö°
,

762 #ifde‡
SCRATCH


763 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_EXPAND
,

765 
pw16_NëEqAlg‹ôhm_buf„r
, &
Àn
, 
BGN⁄ly
);

766 i‡(
ªtu∫_vÆue
 < 0)

769  
ªtu∫_vÆue
;

777 
	`WEBRTC_SPL_MEMMOVE_W16
(
ö°
->
pw16_•ìchHi°‹y
,

778 
ö°
->
pw16_•ìchHi°‹y
 + 
Àn
,

779 (
ö°
->
w16_•ìchHi°‹yLí
-
Àn
));

780 
	`WEBRTC_SPL_MEMCPY_W16
(&
ö°
->
pw16_•ìchHi°‹y
[ö°->
w16_•ìchHi°‹yLí
-
Àn
],

781 
pw16_NëEqAlg‹ôhm_buf„r
, 
Àn
);

783 
ö°
->
curPosôi⁄
 -
Àn
;

786 
ö°
->
w16_c⁄˚ÆedTS
 +
Àn
;

787 #ifde‡
NETEQ_DELAY_LOGGING


788 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_EXPAND_INFO
;

789 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

792 
ãmp_v¨
 = 
Àn
;

793 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

797 
Àn
 = 0;

799 #ifde‡
NETEQ_ATEVENT_DECODE


800 i‡(
∂ayDtmf
 == 0)

802 
ö°
->
DTMFIn°
.
ªöô
 = 1;

807 
DSP_INSTR_ACCELERATE
:

808 i‡(
Àn
 < 3 * 80 * 
fs_mu…
)

811 
b‹rowedSam∂es
 = 3 * 80 * 
fs_mu…
 - 
Àn
;

813 
	`WEBRTC_SPL_MEMMOVE_W16
(&
pw16_decoded_buf„r
[
b‹rowedSam∂es
],

814 
pw16_decoded_buf„r
, 
Àn
);

815 
	`WEBRTC_SPL_MEMCPY_W16
(
pw16_decoded_buf„r
,

816 &(
ö°
->
•ìchBuf„r
[ö°->
ídPosôi⁄
-
b‹rowedSam∂es
]),

817 
b‹rowedSam∂es
);

819 
ªtu∫_vÆue
 = 
	`WebRtcNëEQ_Ac˚Àøã
(
ö°
,

820 #ifde‡
SCRATCH


821 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_ACCELERATE
,

823 
pw16_decoded_buf„r
, 3 * 
ö°
->
time°ampsPîCÆl
,

824 
pw16_NëEqAlg‹ôhm_buf„r
, &
Àn
, 
BGN⁄ly
);

826 i‡(
ªtu∫_vÆue
 < 0)

829  
ªtu∫_vÆue
;

833 i‡(
Àn
 < 
b‹rowedSam∂es
)

840 
	`WEBRTC_SPL_MEMCPY_W16
(&
ö°
->
•ìchBuf„r
[ö°->
ídPosôi⁄
-
b‹rowedSam∂es
],

841 
pw16_NëEqAlg‹ôhm_buf„r
, 
Àn
);

842 
	`WEBRTC_SPL_MEMMOVE_W16
(&
ö°
->
•ìchBuf„r
[
b‹rowedSam∂es
-
Àn
],

843 
ö°
->
•ìchBuf„r
,

844 (
ö°
->
ídPosôi⁄
-(
b‹rowedSam∂es
-
Àn
)));

846 
ö°
->
curPosôi⁄
 +(
b‹rowedSam∂es
 - 
Àn
);

847 #ifde‡
NETEQ_DELAY_LOGGING


848 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_ACCELERATE_INFO
;

849 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

852 
ãmp_v¨
 = 3 * 
ö°
->
time°ampsPîCÆl
 - 
Àn
;

853 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

857 
Àn
 = 0;

861 
	`WEBRTC_SPL_MEMCPY_W16
(&
ö°
->
•ìchBuf„r
[ö°->
ídPosôi⁄
-
b‹rowedSam∂es
],

862 
pw16_NëEqAlg‹ôhm_buf„r
, 
b‹rowedSam∂es
);

863 
	`WEBRTC_SPL_MEMMOVE_W16
(
pw16_NëEqAlg‹ôhm_buf„r
,

864 &
pw16_NëEqAlg‹ôhm_buf„r
[
b‹rowedSam∂es
],

865 (
Àn
-
b‹rowedSam∂es
));

866 #ifde‡
NETEQ_DELAY_LOGGING


867 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_ACCELERATE_INFO
;

868 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

871 
ãmp_v¨
 = 3 * 
ö°
->
time°ampsPîCÆl
 - 
Àn
;

872 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

876 
Àn
 =Üí - 
b‹rowedSam∂es
;

882 #ifde‡
NETEQ_DELAY_LOGGING


883 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_ACCELERATE_INFO
;

884 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

887 
ãmp_v¨
 = 
Àn
;

889 
ªtu∫_vÆue
 = 
	`WebRtcNëEQ_Ac˚Àøã
(
ö°
,

890 #ifde‡
SCRATCH


891 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_ACCELERATE
,

893 
pw16_decoded_buf„r
, 
Àn
, 
pw16_NëEqAlg‹ôhm_buf„r
, &Àn, 
BGN⁄ly
);

895 i‡(
ªtu∫_vÆue
 < 0)

898  
ªtu∫_vÆue
;

901 #ifde‡
NETEQ_DELAY_LOGGING


902 
ãmp_v¨
 -
Àn
;

903 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

909 i‡(
•ìchTy≥
 =
TYPE_CNG
Ë
ö°
->
w16_mode
 = 
MODE_CODEC_INTERNAL_CNG
;

910 #ifde‡
NETEQ_ATEVENT_DECODE


911 i‡(
∂ayDtmf
 == 0)

913 
ö°
->
DTMFIn°
.
ªöô
 = 1;

918 
DSP_INSTR_DO_RFC3389CNG
:

919 #ifde‡
NETEQ_CNG_CODEC


920 i‡(
blockLí
 > 0)

922 i‡(
	`WebRtcCng_Upd©eSid
(
ö°
->
CNG_Codec_ö°
, (
uöt8_t
*Ë
blockPå
,

923 
∑ylﬂdLí
) < 0)

926 
ªtu∫_vÆue
 = -
	`WebRtcCng_GëEº‹CodeDec
(
ö°
->
CNG_Codec_ö°
);

927 
Àn
 = 
ö°
->
time°ampsPîCÆl
;

928 
	`WebRtcS∂_MemSëW16
(
pw16_NëEqAlg‹ôhm_buf„r
, 0, 
Àn
);

933 i‡(
BGN⁄ly
)

936 
Àn
 = 
	`WebRtcNëEQ_Gíî©eBGN
(
ö°
,

937 #ifde‡
SCRATCH


938 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_EXPAND
,

940 
pw16_NëEqAlg‹ôhm_buf„r
, 
ö°
->
time°ampsPîCÆl
);

941 i‡(
Àn
 !
ö°
->
time°ampsPîCÆl
)

944 
ªtu∫_vÆue
 = -1;

949 
ªtu∫_vÆue
 = 
	`WebRtcNëEQ_Cng
(
ö°
, 
pw16_NëEqAlg‹ôhm_buf„r
,

950 
ö°
->
time°ampsPîCÆl
);

952 
Àn
 = 
ö°
->
time°ampsPîCÆl
;

953 
ö°
->
Ex∑ndIn°
.
w16_c⁄£cExp
 = 0;

954 
ö°
->
w16_mode
 = 
MODE_RFC3389CNG
;

955 #ifde‡
NETEQ_ATEVENT_DECODE


956 i‡(
∂ayDtmf
 == 0)

958 
ö°
->
DTMFIn°
.
ªöô
 = 1;

962 i‡(
ªtu∫_vÆue
 < 0)

965 
	`WebRtcS∂_MemSëW16
(
pw16_NëEqAlg‹ôhm_buf„r
, 0, 
Àn
);

970  
FAULTY_INSTRUCTION
;

972 
DSP_INSTR_DO_CODEC_INTERNAL_CNG
:

977 
Àn
 = 0;

978 i‡(
ö°
->
codec_±r_ö°
.
funcDecode
 !
NULL
 && !
BGN⁄ly
)

980 
Àn
 = 
ö°
->
codec_±r_ö°
.
	`funcDecode
(ö°->codec_±r_ö°.
codec_°©e
,

981 
blockPå
, 0, 
pw16_decoded_buf„r
, &
•ìchTy≥
);

986 
Àn
 = 
	`WebRtcNëEQ_Gíî©eBGN
(
ö°
,

987 #ifde‡
SCRATCH


988 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_EXPAND
,

990 
pw16_decoded_buf„r
, 
ö°
->
time°ampsPîCÆl
);

992 
	`WebRtcNëEQ_N‹mÆ
(
ö°
,

993 #ifde‡
SCRATCH


994 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_NORMAL
,

996 
pw16_decoded_buf„r
, 
Àn
, 
pw16_NëEqAlg‹ôhm_buf„r
, &len);

997 
ö°
->
w16_mode
 = 
MODE_CODEC_INTERNAL_CNG
;

998 
ö°
->
Ex∑ndIn°
.
w16_c⁄£cExp
 = 0;

1001 
DSP_INSTR_DTMF_GENERATE
:

1002 #ifde‡
NETEQ_ATEVENT_DECODE


1003 
dtmfSwôch
 = 0;

1004 i‡((
ö°
->
w16_mode
 !
MODE_DTMF
Ë&& (ö°->
DTMFIn°
.
ªöô
 == 0))

1010 
dtmfSwôch
 = 1;

1013 
Àn
 = 
	`WebRtcNëEQ_DTMFGíî©e
(&
ö°
->
DTMFIn°
, 
dtmfVÆue
, 
dtmfVﬁume
,

1014 
pw16_NëEqAlg‹ôhm_buf„r
, 
ö°
->
fs
, -1);

1015 i‡(
Àn
 < 0)

1018 
ªtu∫_vÆue
 = 
Àn
;

1019 
Àn
 = 
ö°
->
time°ampsPîCÆl
;

1020 
	`WebRtcS∂_MemSëW16
(
pw16_NëEqAlg‹ôhm_buf„r
, 0, 
Àn
);

1023 i‡(
dtmfSwôch
 == 1)

1037 
öt16_t
 
ãmpLí
;

1039 
ãmpLí
 = 
	`WebRtcNëEQ_DTMFGíî©e
(&
ö°
->
DTMFIn°
, 
dtmfVÆue
, 
dtmfVﬁume
,

1040 &
pw16_NëEqAlg‹ôhm_buf„r
[
Àn
], 
ö°
->
fs
,

1041 
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
);

1042 i‡(
ãmpLí
 < 0)

1045 
ªtu∫_vÆue
 = 
ãmpLí
;

1046 
Àn
 = 
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
;

1047 
	`WebRtcS∂_MemSëW16
(
pw16_NëEqAlg‹ôhm_buf„r
, 0,

1048 
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
);

1052 
Àn
 +
ãmpLí
;

1056 
	`WEBRTC_SPL_MEMCPY_W16
(&
ö°
->
•ìchBuf„r
[ö°->
curPosôi⁄
],

1057 
pw16_NëEqAlg‹ôhm_buf„r
,

1058 
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
);

1061 
Àn
 -(
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
);

1062 
	`WEBRTC_SPL_MEMMOVE_W16
(
pw16_NëEqAlg‹ôhm_buf„r
,

1063 &
pw16_NëEqAlg‹ôhm_buf„r
[
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
],

1064 
Àn
);

1067 
ö°
->
ídTime°amp
 +ö°->
time°ampsPîCÆl
;

1068 
ö°
->
DTMFIn°
.
ªöô
 = 0;

1069 
ö°
->
Ex∑ndIn°
.
w16_c⁄£cExp
 = 0;

1070 
ö°
->
w16_mode
 = 
MODE_DTMF
;

1071 
BGN⁄ly
 = 0;

1073 
∂ayDtmf
 = 0;

1079 #ifde‡
NETEQ_STEREO


1080 i‡(
msInfo
->
msMode
 =
NETEQ_MASTER
)

1083 
msInfo
->
exåaInfo
 = 
DTMF_ONLY
;

1089 
ö°
->
w16_mode
 = 
MODE_ERROR
;

1090 
d•Info
->
œ°Mode
 = 
MODE_ERROR
;

1091  
FAULTY_INSTRUCTION
;

1094 
DSP_INSTR_DO_ALTERNATIVE_PLC
:

1095 i‡(
ö°
->
codec_±r_ö°
.
funcDecodePLC
 != 0)

1097 
Àn
 = 
ö°
->
codec_±r_ö°
.
	`funcDecodePLC
(ö°->codec_±r_ö°.
codec_°©e
,

1098 
pw16_NëEqAlg‹ôhm_buf„r
, 1);

1102 
Àn
 = 
ö°
->
time°ampsPîCÆl
;

1104 
	`WebRtcS∂_MemSëW16
(
pw16_NëEqAlg‹ôhm_buf„r
, 0, 
Àn
);

1106 
ö°
->
°©In°
.
addedSam∂es
 +
Àn
;

1108 
ö°
->
Ex∑ndIn°
.
w16_c⁄£cExp
 = 0;

1110 
DSP_INSTR_DO_ALTERNATIVE_PLC_INC_TS
:

1111 i‡(
ö°
->
codec_±r_ö°
.
funcDecodePLC
 != 0)

1113 
Àn
 = 
ö°
->
codec_±r_ö°
.
	`funcDecodePLC
(ö°->codec_±r_ö°.
codec_°©e
,

1114 
pw16_NëEqAlg‹ôhm_buf„r
, 1);

1118 
Àn
 = 
ö°
->
time°ampsPîCÆl
;

1120 
	`WebRtcS∂_MemSëW16
(
pw16_NëEqAlg‹ôhm_buf„r
, 0, 
Àn
);

1122 
ö°
->
Ex∑ndIn°
.
w16_c⁄£cExp
 = 0;

1123 
ö°
->
ídTime°amp
 +
Àn
;

1125 
DSP_INSTR_DO_AUDIO_REPETITION
:

1126 
Àn
 = 
ö°
->
time°ampsPîCÆl
;

1128 
	`WEBRTC_SPL_MEMCPY_W16
(
pw16_NëEqAlg‹ôhm_buf„r
,

1129 &
ö°
->
•ìchBuf„r
[ö°->
ídPosôi⁄
-
Àn
],Üen);

1130 
ö°
->
Ex∑ndIn°
.
w16_c⁄£cExp
 = 0;

1132 
DSP_INSTR_DO_AUDIO_REPETITION_INC_TS
:

1133 
Àn
 = 
ö°
->
time°ampsPîCÆl
;

1135 
	`WEBRTC_SPL_MEMCPY_W16
(
pw16_NëEqAlg‹ôhm_buf„r
,

1136 &
ö°
->
•ìchBuf„r
[ö°->
ídPosôi⁄
-
Àn
],Üen);

1137 
ö°
->
Ex∑ndIn°
.
w16_c⁄£cExp
 = 0;

1138 
ö°
->
ídTime°amp
 +
Àn
;

1141 
DSP_INSTR_PREEMPTIVE_EXPAND
:

1142 i‡(
Àn
 < 3 * 
ö°
->
time°ampsPîCÆl
)

1145 
b‹rowedSam∂es
 = 3 * 
ö°
->
time°ampsPîCÆl
 - 
Àn
;

1147 
ﬁdB‹rowedSam∂es
 = 
	`WEBRTC_SPL_MAX
(0,

1148 
b‹rowedSam∂es
 - (
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
));

1149 
	`WEBRTC_SPL_MEMMOVE_W16
(&
pw16_decoded_buf„r
[
b‹rowedSam∂es
],

1150 
pw16_decoded_buf„r
, 
Àn
);

1151 
	`WEBRTC_SPL_MEMCPY_W16
(
pw16_decoded_buf„r
,

1152 &(
ö°
->
•ìchBuf„r
[ö°->
ídPosôi⁄
-
b‹rowedSam∂es
]),

1153 
b‹rowedSam∂es
);

1157 
b‹rowedSam∂es
 = 0;

1158 
ﬁdB‹rowedSam∂es
 = 0;

1161 #ifde‡
NETEQ_DELAY_LOGGING


1162 
w16_tmp1
 = 
Àn
;

1165 
ªtu∫_vÆue
 = 
	`WebRtcNëEQ_PªEm±iveEx∑nd
(
ö°
,

1166 #ifde‡
SCRATCH


1168 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_ACCELERATE
,

1170 
pw16_decoded_buf„r
, 
Àn
 + 
b‹rowedSam∂es
, 
ﬁdB‹rowedSam∂es
,

1171 
pw16_NëEqAlg‹ôhm_buf„r
, &
Àn
, 
BGN⁄ly
);

1173 i‡(
ªtu∫_vÆue
 < 0)

1176  
ªtu∫_vÆue
;

1179 i‡(
b‹rowedSam∂es
 > 0)

1184 
	`WEBRTC_SPL_MEMCPY_W16
–&(
ö°
->
•ìchBuf„r
[ö°->
ídPosôi⁄
-
b‹rowedSam∂es
]),

1185 
pw16_NëEqAlg‹ôhm_buf„r
,

1186 
b‹rowedSam∂es
);

1188 
Àn
 -
b‹rowedSam∂es
;

1191 
	`WEBRTC_SPL_MEMMOVE_W16
–
pw16_NëEqAlg‹ôhm_buf„r
,

1192 &
pw16_NëEqAlg‹ôhm_buf„r
[
b‹rowedSam∂es
],

1193 
Àn
);

1196 #ifde‡
NETEQ_DELAY_LOGGING


1197 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_PREEMPTIVE_INFO
;

1198 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

1201 
ãmp_v¨
 = 
Àn
 - 
w16_tmp1
;

1202 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

1207 i‡(
•ìchTy≥
 =
TYPE_CNG
Ë
ö°
->
w16_mode
 = 
MODE_CODEC_INTERNAL_CNG
;

1208 #ifde‡
NETEQ_ATEVENT_DECODE


1209 i‡(
∂ayDtmf
 == 0)

1211 
ö°
->
DTMFIn°
.
ªöô
 = 1;

1216 
DSP_INSTR_FADE_TO_BGN
:

1218 
ãmpRëu∫VÆue
;

1222 
w16_tmp3
 = 
	`WEBRTC_SPL_MIN
(
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
,

1223 
ö°
->
time°ampsPîCÆl
);

1225 i‡(
w16_tmp3
 + 
ö°
->
w16_‰ameLí
 > 
NETEQ_MAX_OUTPUT_SIZE
)

1227 
w16_tmp3
 = 
NETEQ_MAX_OUTPUT_SIZE
 - 
ö°
->
w16_‰ameLí
;

1231 
Àn
 = 
ö°
->
time°ampsPîCÆl
 + in°->
Ex∑ndIn°
.
w16_ovîœp
;

1232 
pos
 = 0;

1234 
ãmpRëu∫VÆue
 = 
	`WebRtcNëEQ_Ex∑nd
(
ö°
,

1235 #ifde‡
SCRATCH


1236 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_EXPAND
,

1238 
pw16_NëEqAlg‹ôhm_buf„r
, &
Àn
, 1);

1240 i‡(
ãmpRëu∫VÆue
 < 0)

1244  
ãmpRëu∫VÆue
;

1247 
pos
 +
Àn
;

1250 
pos
 + 
Àn
 <
ö°
->
w16_‰ameLí
 + 
w16_tmp3
)

1252 
	`WEBRTC_SPL_MEMCPY_W16
(&
pw16_NëEqAlg‹ôhm_buf„r
[
pos
],

1253 
pw16_NëEqAlg‹ôhm_buf„r
, 
Àn
);

1254 
pos
 +
Àn
;

1258 i‡(
pos
 < 
ö°
->
w16_‰ameLí
 + 
w16_tmp3
)

1260 
	`WEBRTC_SPL_MEMCPY_W16
(&
pw16_NëEqAlg‹ôhm_buf„r
[
pos
],Öw16_NetEqAlgorithm_buffer,

1261 
ö°
->
w16_‰ameLí
 + 
w16_tmp3
 - 
pos
);

1264 
Àn
 = 
ö°
->
w16_‰ameLí
 + 
w16_tmp3
;

1270 
w16_tmp1
 = 2;

1271 
w16_tmp2
 = 16384;

1272 
w16_tmp1
 <
w16_tmp3
)

1274 
w16_tmp2
 >>= 1;

1275 
w16_tmp1
 <<= 1;

1278 
w16_tmp1
 = 0;

1279 
pos
 = 0;

1280 
w16_tmp1
 < 16384)

1282 
ö°
->
•ìchBuf„r
[ö°->
curPosôi⁄
 + 
pos
]

1284 (
öt16_t
Ë
	`WEBRTC_SPL_RSHIFT_W32
(

1285 
	`WEBRTC_SPL_MUL_16_16
–
ö°
->
•ìchBuf„r
[ö°->
ídPosôi⁄
 - 
w16_tmp3
 + 
pos
],

1286 16384-
w16_tmp1
 ) +

1287 
	`WEBRTC_SPL_MUL_16_16
–
pw16_NëEqAlg‹ôhm_buf„r
[
pos
], 
w16_tmp1
 ),

1289 
w16_tmp1
 +
w16_tmp2
;

1290 
pos
++;

1295 
	`WEBRTC_SPL_MEMCPY_W16
–&
ö°
->
•ìchBuf„r
[ö°->
ídPosôi⁄
 - 
w16_tmp3
 + 
pos
],

1296 &
pw16_NëEqAlg‹ôhm_buf„r
[
pos
], 
w16_tmp3
 -Öos);

1298 
Àn
 -
w16_tmp3
;

1301 
	`WEBRTC_SPL_MEMMOVE_W16
–
pw16_NëEqAlg‹ôhm_buf„r
,

1302 &
pw16_NëEqAlg‹ôhm_buf„r
[
w16_tmp3
],

1303 
Àn
 );

1306 
ö°
->
w16_c⁄˚ÆedTS
 +
Àn
;

1308 
ö°
->
w16_mode
 = 
MODE_FADE_TO_BGN
;

1309 #ifde‡
NETEQ_DELAY_LOGGING


1310 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_EXPAND_INFO
;

1311 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

1314 
ãmp_v¨
 = 
Àn
;

1315 i‡(
	`fwrôe
(&
ãmp_v¨
, (), 1, 
dñay_fid2
) != 1) {

1324 
ö°
->
w16_mode
 = 
MODE_ERROR
;

1325 
d•Info
->
œ°Mode
 = 
MODE_ERROR
;

1326  
FAULTY_INSTRUCTION
;

1331 
w16_tmp2
 = 0;

1332 i‡((
ö°
->
ídPosôi⁄
 + 
Àn
 - in°->
curPosôi⁄
 - in°->
Ex∑ndIn°
.
w16_ovîœp
)

1333 >
ö°
->
time°ampsPîCÆl
)

1335 
w16_tmp2
 = 
ö°
->
ídPosôi⁄
 - in°->
curPosôi⁄
;

1336 
w16_tmp2
 = 
	`WEBRTC_SPL_MAX
(w16_tmp2, 0);

1337 
w16_tmp1
 = 
	`WEBRTC_SPL_MIN
(
w16_tmp2
, 
ö°
->
time°ampsPîCÆl
);

1338 
w16_tmp2
 = 
ö°
->
time°ampsPîCÆl
 - 
w16_tmp1
;

1339 
	`WEBRTC_SPL_MEMCPY_W16
(
pw16_outD©a
, &
ö°
->
•ìchBuf„r
[ö°->
curPosôi⁄
], 
w16_tmp1
);

1340 
	`WEBRTC_SPL_MEMCPY_W16
(&
pw16_outD©a
[
w16_tmp1
], 
pw16_NëEqAlg‹ôhm_buf„r
, 
w16_tmp2
);

1341 
D©aEnough
 = 1;

1345 
D©aEnough
 = 0;

1348 i‡(
∂ayDtmf
 != 0)

1350 #ifde‡
NETEQ_ATEVENT_DECODE


1351 
öt16_t
 
outD©aIndex
 = 0;

1352 
öt16_t
 
ovîdubLí
 = -1;

1353 
öt16_t
 
dtmfLí
;

1359 i‡(
ö°
->
DTMFIn°
.
œ°DtmfSam∂e
 - in°->
curPosôi⁄
 > 0)

1362 
outD©aIndex


1363 
	`WEBRTC_SPL_MIN
(
ö°
->
DTMFIn°
.
œ°DtmfSam∂e
 - in°->
curPosôi⁄
,

1364 
ö°
->
time°ampsPîCÆl
);

1365 
ovîdubLí
 = 
ö°
->
time°ampsPîCÆl
 - 
outD©aIndex
;

1368 
dtmfLí
 = 
	`WebRtcNëEQ_DTMFGíî©e
(&
ö°
->
DTMFIn°
, 
dtmfVÆue
, 
dtmfVﬁume
,

1369 &
pw16_outD©a
[
outD©aIndex
], 
ö°
->
fs
, 
ovîdubLí
);

1370 i‡(
dtmfLí
 < 0)

1373 
ªtu∫_vÆue
 = 
dtmfLí
;

1375 
ö°
->
DTMFIn°
.
ªöô
 = 0;

1377 
ö°
->
w16_mode
 = 
MODE_ERROR
;

1378 
d•Info
->
œ°Mode
 = 
MODE_ERROR
;

1379  
FAULTY_INSTRUCTION
;

1387 i‡(
ö°r
 !
DSP_INSTR_EXPAND
)

1389 
w16_tmp1
 = 
	`WEBRTC_SPL_MIN
(
ö°
->
ídPosôi⁄
, 
Àn
);

1390 
	`WEBRTC_SPL_MEMMOVE_W16
(
ö°
->
•ìchBuf„r
, in°->•ìchBuf„∏+ 
w16_tmp1
,

1391 (
ö°
->
ídPosôi⁄
-
w16_tmp1
));

1392 
	`WEBRTC_SPL_MEMCPY_W16
(&
ö°
->
•ìchBuf„r
[ö°->
ídPosôi⁄
-
w16_tmp1
],

1393 &
pw16_NëEqAlg‹ôhm_buf„r
[
Àn
-
w16_tmp1
], w16_tmp1);

1394 #ifde‡
NETEQ_ATEVENT_DECODE


1396 i‡(
ö°r
 =
DSP_INSTR_DTMF_GENERATE
)

1399 
ö°
->
DTMFIn°
.
œ°DtmfSam∂e
 = in°->
ídPosôi⁄
;

1401 i‡(
ö°
->
DTMFIn°
.
œ°DtmfSam∂e
 > 0)

1404 
ö°
->
DTMFIn°
.
œ°DtmfSam∂e
 -
w16_tmp1
;

1411 i‡((
ö°
->
w16_mode
 !
MODE_EXPAND
Ë&& (ö°->w16_modê!
MODE_MERGE
)

1412 && (
ö°
->
w16_mode
 !
MODE_SUCCESS_ACCELERATE
) && (inst->w16_mode

1413 !
MODE_LOWEN_ACCELERATE
Ë&& (
ö°
->
w16_mode
 !
MODE_SUCCESS_PREEMPTIVE
)

1414 && (
ö°
->
w16_mode
 !
MODE_LOWEN_PREEMPTIVE
) && (inst->w16_mode

1415 !
MODE_FADE_TO_BGN
Ë&& (
ö°
->
w16_mode
 !
MODE_DTMF
Ë&& (!
BGN⁄ly
))

1417 
	`WebRtcNëEQ_BGNUpd©e
(
ö°


1418 #ifde‡
SCRATCH


1419 , 
pw16_s¸©chPå
 + 
SCRATCH_NETEQ_BGN_UPDATE


1429 
ö°
->
curPosôi⁄
 -
Àn
;

1435 i‡(
ö°
->
curPosôi⁄
 < -ö°->
time°ampsPîCÆl
)

1437 
ö°
->
curPosôi⁄
 = -ö°->
time°ampsPîCÆl
;

1440 i‡((
ö°r
 !
DSP_INSTR_EXPAND
Ë&& (ö°∏!
DSP_INSTR_MERGE
) && (instr

1441 !
DSP_INSTR_FADE_TO_BGN
))

1444 i‡(
ö°
->
w16_c⁄˚ÆedTS
 > in°->
time°ampsPîCÆl
)

1446 
ö°
->
w16_c⁄˚ÆedTS
 = 0;

1454 i‡(!
D©aEnough
)

1457 
	`WebRtcS∂_MemSëW16
(
pw16_outD©a
, 0, 
ö°
->
time°ampsPîCÆl
);

1458 *
pw16_Àn
 = 
ö°
->
time°ampsPîCÆl
;

1459 
ö°
->
w16_mode
 = 
MODE_ERROR
;

1460 
d•Info
->
œ°Mode
 = 
MODE_ERROR
;

1461  
RECOUT_ERROR_SAMPLEUNDERRUN
;

1468 i‡((
ö°
->
w16_mode
 !
MODE_EXPAND
Ë&& (ö°->w16_modê!
MODE_RFC3389CNG
))

1470 
uöt32_t
 
uw32_tmpTS
;

1471 
uw32_tmpTS
 = 
ö°
->
ídTime°amp
 - (ö°->
ídPosôi⁄
 - in°->
curPosôi⁄
);

1472 i‡((
öt32_t
Ë(
uw32_tmpTS
 - 
ö°
->
videoSyncTime°amp
) > 0)

1474 
ö°
->
videoSyncTime°amp
 = 
uw32_tmpTS
;

1479 
ö°
->
videoSyncTime°amp
 +ö°->
time°ampsPîCÆl
;

1483 
ö°
->
curPosôi⁄
 +ö°->
time°ampsPîCÆl
;

1484 *
pw16_Àn
 = 
ö°
->
time°ampsPîCÆl
;

1487 i‡(
BGN⁄ly
)

1489 
ö°
->
w16_mode
 |
MODE_BGN_ONLY
;

1492  
ªtu∫_vÆue
;

1493 
	}
}

1495 #unde‡
SCRATCH_ALGORITHM_BUFFER


1496 #unde‡
SCRATCH_NETEQ_NORMAL


1497 #unde‡
SCRATCH_NETEQ_MERGE


1498 #unde‡
SCRATCH_NETEQ_BGN_UPDATE


1499 #unde‡
SCRATCH_NETEQ_EXPAND


1500 #unde‡
SCRATCH_DSP_INFO


1501 #unde‡
SCRATCH_NETEQ_ACCELERATE


1502 #unde‡
SIZE_SCRATCH_BUFFER


	@resample_by_2_internal.h

17 #i‚de‡
WEBRTC_SPL_RESAMPLE_BY_2_INTERNAL_H_


18 
	#WEBRTC_SPL_RESAMPLE_BY_2_INTERNAL_H_


	)

20 
	~"webπc/ty≥defs.h
"

26 
WebRtcS∂_DownBy2I¡ToSh‹t
(
öt32_t
 *
ö
, i¡32_à
Àn
, 
öt16_t
 *
out
,

27 
öt32_t
 *
°©e
);

29 
WebRtcS∂_DownBy2Sh‹tToI¡
(c⁄° 
öt16_t
 *
ö
, 
öt32_t
 
Àn
,

30 
öt32_t
 *
out
, i¡32_à*
°©e
);

32 
WebRtcS∂_UpBy2Sh‹tToI¡
(c⁄° 
öt16_t
 *
ö
, 
öt32_t
 
Àn
,

33 
öt32_t
 *
out
, i¡32_à*
°©e
);

35 
WebRtcS∂_UpBy2I¡ToI¡
(c⁄° 
öt32_t
 *
ö
, i¡32_à
Àn
, i¡32_à*
out
,

36 
öt32_t
 *
°©e
);

38 
WebRtcS∂_UpBy2I¡ToSh‹t
(c⁄° 
öt32_t
 *
ö
, i¡32_à
Àn
,

39 
öt16_t
 *
out
, 
öt32_t
 *
°©e
);

41 
WebRtcS∂_LPBy2Sh‹tToI¡
(c⁄° 
öt16_t
* 
ö
, 
öt32_t
 
Àn
,

42 
öt32_t
* 
out
, i¡32_t* 
°©e
);

44 
WebRtcS∂_LPBy2I¡ToI¡
(c⁄° 
öt32_t
* 
ö
, i¡32_à
Àn
, i¡32_t* 
out
,

45 
öt32_t
* 
°©e
);

	@rtcp.c

15 
	~"π˝.h
"

17 
	~<°rög.h
>

19 
	~"sig«l_¥o˚ssög_libøry.h
"

21 
	$WebRtcNëEQ_RTCPInô
(
WebRtcNëEQ_RTCP_t
 *
RTCP_ö°
, 
uöt16_t
 
uw16_£qNo
)

26 
	`WebRtcS∂_MemSëW16
((
öt16_t
*Ë
RTCP_ö°
, 0,

27 (
WebRtcNëEQ_RTCP_t
Ë/ (
öt16_t
));

28 
RTCP_ö°
->
ba£_£q
 = 
uw16_£qNo
;

29 
RTCP_ö°
->
max_£q
 = 
uw16_£qNo
;

31 
	}
}

33 
	$WebRtcNëEQ_RTCPUpd©e
(
WebRtcNëEQ_RTCP_t
 *
RTCP_ö°
, 
uöt16_t
 
uw16_£qNo
,

34 
uöt32_t
 
uw32_timeSèmp
, uöt32_à
uw32_ªcTime
)

36 
öt16_t
 
w16_SeqDiff
;

37 
öt32_t
 
w32_TimeDiff
;

38 
öt32_t
 
w32_JôãrDiff
;

43 
RTCP_ö°
->
ª˚ived
++;

44 
w16_SeqDiff
 = 
uw16_£qNo
 - 
RTCP_ö°
->
max_£q
;

45 i‡(
w16_SeqDiff
 >= 0)

47 i‡(
uw16_£qNo
 < 
RTCP_ö°
->
max_£q
)

50 
RTCP_ö°
->
cy˛es
++;

52 
RTCP_ö°
->
max_£q
 = 
uw16_£qNo
;

57 i‡(
RTCP_ö°
->
ª˚ived
 > 1)

59 
w32_TimeDiff
 = (
uw32_ªcTime
 - (
uw32_timeSèmp
 - 
RTCP_ö°
->
å™sô
));

60 
w32_TimeDiff
 = 
	`WEBRTC_SPL_ABS_W32
(w32_TimeDiff);

61 
w32_JôãrDiff
 = 
	`WEBRTC_SPL_LSHIFT_W16
(
w32_TimeDiff
, 4Ë- 
RTCP_ö°
->
jôãr
;

62 
RTCP_ö°
->
jôãr
 = RTCP_ö°->jôã∏+ 
	`WEBRTC_SPL_RSHIFT_W32
((
w32_JôãrDiff
 + 8), 4);

64 
RTCP_ö°
->
å™sô
 = (
uw32_timeSèmp
 - 
uw32_ªcTime
);

66 
	}
}

68 
	$WebRtcNëEQ_RTCPGëSèts
(
WebRtcNëEQ_RTCP_t
 *
RTCP_ö°
,

69 
uöt16_t
 *
puw16_‰a˘i⁄_lo°
,

70 
uöt32_t
 *
puw32_cum_lo°
, uöt32_à*
puw32_ext_max
,

71 
uöt32_t
 *
puw32_jôãr
, 
öt16_t
 
doNŸRe£t
)

73 
uöt32_t
 
uw32_exp_ƒ
, 
uw32_exp_öãrvÆ
, 
uw32_ªc_öãrvÆ
;

74 
öt32_t
 
w32_lo°
;

77 *
puw32_ext_max


78 (
uöt32_t
Ë
	`WEBRTC_SPL_LSHIFT_W32
((uöt32_t)
RTCP_ö°
->
cy˛es
, 16)

79 + 
RTCP_ö°
->
max_£q
;

85 
uw32_exp_ƒ
 = *
puw32_ext_max
 - 
RTCP_ö°
->
ba£_£q
 + 1;

86 i‡(
RTCP_ö°
->
ª˚ived
 == 0)

89 *
puw32_cum_lo°
 = 0;

91 i‡(
uw32_exp_ƒ
 > 
RTCP_ö°
->
ª˚ived
)

93 *
puw32_cum_lo°
 = 
uw32_exp_ƒ
 - 
RTCP_ö°
->
ª˚ived
;

94 i‡(*
puw32_cum_lo°
 > (
uöt32_t
) 0xFFFFFF)

96 *
puw32_cum_lo°
 = 0xFFFFFF;

101 *
puw32_cum_lo°
 = 0;

105 
uw32_exp_öãrvÆ
 = 
uw32_exp_ƒ
 - 
RTCP_ö°
->
exp_¥i‹
;

106 i‡(!
doNŸRe£t
)

108 
RTCP_ö°
->
exp_¥i‹
 = 
uw32_exp_ƒ
;

110 
uw32_ªc_öãrvÆ
 = 
RTCP_ö°
->
ª˚ived
 - RTCP_ö°->
ªc_¥i‹
;

111 i‡(!
doNŸRe£t
)

113 
RTCP_ö°
->
ªc_¥i‹
 = RTCP_ö°->
ª˚ived
;

115 
w32_lo°
 = (
öt32_t
Ë(
uw32_exp_öãrvÆ
 - 
uw32_ªc_öãrvÆ
);

116 i‡(
uw32_exp_öãrvÆ
 =0 || 
w32_lo°
 <0 || 
RTCP_ö°
->
ª˚ived
 == 0)

118 *
puw16_‰a˘i⁄_lo°
 = 0;

122 *
puw16_‰a˘i⁄_lo°
 = (
uöt16_t
Ë(
	`WEBRTC_SPL_LSHIFT_W32
(
w32_lo°
, 8)

123 / 
uw32_exp_öãrvÆ
);

125 i‡(*
puw16_‰a˘i⁄_lo°
 > 0xFF)

127 *
puw16_‰a˘i⁄_lo°
 = 0xFF;

131 *
puw32_jôãr
 = (
RTCP_ö°
->
jôãr
) >> 4;

133 
	}
}

	@rtcp.h

15 #i‚de‡
RTCP_H


16 
	#RTCP_H


	)

18 
	~"ty≥defs.h
"

22 
uöt16_t
 
	mcy˛es
;

23 
uöt16_t
 
	mmax_£q
;

25 
uöt16_t
 
	mba£_£q
;

26 
uöt32_t
 
	mª˚ived
;

27 
uöt32_t
 
	mªc_¥i‹
;

28 
uöt32_t
 
	mexp_¥i‹
;

30 
uöt32_t
 
	mjôãr
;

31 
öt32_t
 
	må™sô
;

32 } 
	tWebRtcNëEQ_RTCP_t
;

49 
WebRtcNëEQ_RTCPInô
(
WebRtcNëEQ_RTCP_t
 *
RTCP_ö°
, 
uöt16_t
 
uw16_£qNo
);

68 
WebRtcNëEQ_RTCPUpd©e
(
WebRtcNëEQ_RTCP_t
 *
RTCP_ö°
, 
uöt16_t
 
uw16_£qNo
,

69 
uöt32_t
 
uw32_timeSèmp
, uöt32_à
uw32_ªcTime
);

97 
WebRtcNëEQ_RTCPGëSèts
(
WebRtcNëEQ_RTCP_t
 *
RTCP_ö°
,

98 
uöt16_t
 *
puw16_‰a˘i⁄_lo°
,

99 
uöt32_t
 *
puw32_cum_lo°
, uöt32_à*
puw32_ext_max
,

100 
uöt32_t
 *
puw32_jôãr
, 
öt16_t
 
doNŸRe£t
);

	@rtp.c

15 
	~"πp.h
"

17 
	~"ty≥defs.h
"

19 
	~"√ãq_îr‹_codes.h
"

21 
	$WebRtcNëEQ_RTPPaylﬂdInfo
(
öt16_t
* 
pw16_D©agøm
, 
i_D©agømLí
,

22 
RTPPackë_t
* 
RTPhódî
)

24 
i_P
, 
i_X
, 
i_CC
, 
i_°¨tPosôi⁄
;

25 
i_IPvî
;

26 
i_exéígth
 = -1;

27 
i_∑dÀngth
 = 0;

29 i‡(
i_D©agømLí
 < 12)

31  
RTP_TOO_SHORT_PACKET
;

34 #ifde‡
WEBRTC_BIG_ENDIAN


35 
i_IPvî
 = (((
uöt16_t
Ë(
pw16_D©agøm
[0] & 0xC000)) >> 14);

36 
i_P
 = (((
uöt16_t
Ë(
pw16_D©agøm
[0] & 0x2000)) >> 13);

37 
i_X
 = (((
uöt16_t
Ë(
pw16_D©agøm
[0] & 0x1000)) >> 12);

38 
i_CC
 = ((
uöt16_t
Ë(
pw16_D©agøm
[0] >> 8) & 0xF);

39 
RTPhódî
->
∑ylﬂdTy≥
 = 
pw16_D©agøm
[0] & 0x7F;

40 
RTPhódî
->
£qNumbî
 = 
pw16_D©agøm
[1];

41 
RTPhódî
->
timeSèmp
 = ((((
uöt32_t
Ë((
uöt16_t
Ë
pw16_D©agøm
[2])) << 16)

42 | (
uöt16_t
Ë(
pw16_D©agøm
[3]));

43 
RTPhódî
->
s§c
 = (((
uöt32_t
Ë
pw16_D©agøm
[4]) << 16)

44 + (((
uöt32_t
Ë
pw16_D©agøm
[5]));

46 i‡(
i_X
 == 1)

49 
i_exéígth
 = 
pw16_D©agøm
[7 + 2 * 
i_CC
];

51 i‡(
i_P
 == 1)

54 i‡(
i_D©agømLí
 & 0x1)

57 
i_∑dÀngth
 = (((
uöt16_t
Ë
pw16_D©agøm
[
i_D©agømLí
 >> 1]) >> 8);

62 
i_∑dÀngth
 = ((
pw16_D©agøm
[(
i_D©agømLí
 >> 1) - 1]) & 0xFF);

66 
i_IPvî
 = (((
uöt16_t
Ë(
pw16_D©agøm
[0] & 0xC0)) >> 6);

67 
i_P
 = (((
uöt16_t
Ë(
pw16_D©agøm
[0] & 0x20)) >> 5);

68 
i_X
 = (((
uöt16_t
Ë(
pw16_D©agøm
[0] & 0x10)) >> 4);

69 
i_CC
 = (
uöt16_t
Ë(
pw16_D©agøm
[0] & 0xF);

70 
RTPhódî
->
∑ylﬂdTy≥
 = (
pw16_D©agøm
[0] >> 8) & 0x7F;

71 
RTPhódî
->
£qNumbî
 = (((((
uöt16_t
Ë
pw16_D©agøm
[1]) >> 8) & 0xFF)

72 | (((
uöt16_t
Ë(
pw16_D©agøm
[1] & 0xFF)) << 8));

73 
RTPhódî
->
timeSèmp
 = ((((
uöt16_t
Ë
pw16_D©agøm
[2]) & 0xFF) << 24)

74 | ((((
uöt16_t
Ë
pw16_D©agøm
[2]) & 0xFF00) << 8)

75 | ((((
uöt16_t
Ë
pw16_D©agøm
[3]) >> 8) & 0xFF)

76 | ((((
uöt16_t
Ë
pw16_D©agøm
[3]) & 0xFF) << 8);

77 
RTPhódî
->
s§c
 = ((((
uöt16_t
Ë
pw16_D©agøm
[4]) & 0xFF) << 24)

78 | ((((
uöt16_t
Ë
pw16_D©agøm
[4]) & 0xFF00) << 8)

79 | ((((
uöt16_t
Ë
pw16_D©agøm
[5]) >> 8) & 0xFF)

80 | ((((
uöt16_t
Ë
pw16_D©agøm
[5]) & 0xFF) << 8);

82 i‡(
i_X
 == 1)

85 
i_exéígth
 = (((((
uöt16_t
Ë
pw16_D©agøm
[7 + 2 * 
i_CC
]) >> 8) & 0xFF)

86 | (((
uöt16_t
Ë(
pw16_D©agøm
[7 + 2 * 
i_CC
] & 0xFF)) << 8));

88 i‡(
i_P
 == 1)

91 i‡(
i_D©agømLí
 & 0x1)

94 
i_∑dÀngth
 = (
pw16_D©agøm
[
i_D©agømLí
 >> 1] & 0xFF);

99 
i_∑dÀngth
 = (((
uöt16_t
Ë
pw16_D©agøm
[(
i_D©agømLí
 >> 1) - 1]) >> 8);

104 
i_°¨tPosôi⁄
 = 12 + 4 * (
i_exéígth
 + 1Ë+ 4 * 
i_CC
;

105 
RTPhódî
->
∑ylﬂd
 = &
pw16_D©agøm
[
i_°¨tPosôi⁄
 >> 1];

106 
RTPhódî
->
∑ylﬂdLí
 = 
i_D©agømLí
 - (
i_°¨tPosôi⁄
 >> 1Ë- 
i_∑dÀngth
;

107 
RTPhódî
->
°¨ts_byã1
 = 0;

109 i‡((
i_IPvî
 !2Ë|| (
RTPhódî
->
∑ylﬂdLí
 <= 0) || (RTPheader->payloadLen >= 16000)

110 || (
i_°¨tPosôi⁄
 < 12Ë|| (i_°¨tPosôi⁄ > 
i_D©agømLí
))

112  
RTP_CORRUPT_PACKET
;

116 
	}
}

118 #ifde‡
NETEQ_RED_CODEC


120 
	$WebRtcNëEQ_Redund™cyS∂ô
(
RTPPackë_t
* 
RTPhódî
[], 
i_MaximumPaylﬂds
,

121 *
i_No_Of_Paylﬂds
)

123 c⁄° 
öt16_t
 *
pw16_d©a
 = 
RTPhódî
[0]->
∑ylﬂd
;

124 
uöt16_t
 
uw16_off£tTimeSèmp
 = 65535, 
uw16_£c⁄dPaylﬂd
 = 65535;

125 
i_blockLígth
, 
i_k
;

126 
i_disˇrdedBlockLígth
 = 0;

127 
sögÀPaylﬂd
 = 0;

129 #ifde‡
WEBRTC_BIG_ENDIAN


130 i‡((
pw16_d©a
[0] & 0x8000) == 0)

133 
sögÀPaylﬂd
 = 1;

135 
i_blockLígth
 = -4;

136 
RTPhódî
[0]->
∑ylﬂdTy≥
 = ((((
uöt16_t
)
pw16_d©a
[0]) & 0x7F00) >> 8);

141 ((
pw16_d©a
[2] & 0x8000) != 0) &&

142 (
pw16_d©a
<((
RTPhódî
[0]->
∑ylﬂd
)+((RTPhódî[0]->
∑ylﬂdLí
+1)>>1))))

144 
i_disˇrdedBlockLígth
 +(4+(((
uöt16_t
)
pw16_d©a
[1]) & 0x3FF));

145 
pw16_d©a
+=2;

147 i‡(
pw16_d©a
>=(
RTPhódî
[0]->
∑ylﬂd
+((RTPhódî[0]->
∑ylﬂdLí
+1)>>1)))

149  
RED_SPLIT_ERROR2
;

151 
sögÀPaylﬂd
 = 0;

152 
uw16_£c⁄dPaylﬂd
 = ((((
uöt16_t
)
pw16_d©a
[0]) & 0x7F00) >> 8);

153 
RTPhódî
[0]->
∑ylﬂdTy≥
 = ((((
uöt16_t
)
pw16_d©a
[2]) & 0x7F00) >> 8);

154 
uw16_off£tTimeSèmp
 = ((((
uöt16_t
)
pw16_d©a
[0]) & 0xFF) << 6) +

155 ((((
uöt16_t
)
pw16_d©a
[1]) & 0xFC00) >> 10);

156 
i_blockLígth
 = (((
uöt16_t
)
pw16_d©a
[1]) & 0x3FF);

159 i‡((
pw16_d©a
[0] & 0x80) == 0)

162 
sögÀPaylﬂd
 = 1;

164 
i_blockLígth
 = -4;

165 
RTPhódî
[0]->
∑ylﬂdTy≥
 = (((
uöt16_t
Ë
pw16_d©a
[0]) & 0x7F);

170 ((
pw16_d©a
[2] & 0x80Ë!0Ë&& (pw16_d©®< ((
RTPhódî
[0]->
∑ylﬂd
)

171 + ((
RTPhódî
[0]->
∑ylﬂdLí
 + 1) >> 1))))

173 
i_disˇrdedBlockLígth
 +(4 + ((((
uöt16_t
Ë
pw16_d©a
[1]) & 0x3) << 8)

174 + ((((
uöt16_t
Ë
pw16_d©a
[1]) & 0xFF00) >> 8));

175 
pw16_d©a
 += 2;

177 i‡(
pw16_d©a
 >(
RTPhódî
[0]->
∑ylﬂd
 + ((RTPhódî[0]->
∑ylﬂdLí
 + 1) >> 1)))

179  
RED_SPLIT_ERROR2
; ;

181 
sögÀPaylﬂd
 = 0;

182 
uw16_£c⁄dPaylﬂd
 = (((
uöt16_t
Ë
pw16_d©a
[0]) & 0x7F);

183 
RTPhódî
[0]->
∑ylﬂdTy≥
 = (((
uöt16_t
Ë
pw16_d©a
[2]) & 0x7F);

184 
uw16_off£tTimeSèmp
 = ((((
uöt16_t
Ë
pw16_d©a
[0]) & 0xFF00) >> 2)

185 + ((((
uöt16_t
Ë
pw16_d©a
[1]) & 0xFC) >> 2);

186 
i_blockLígth
 = ((((
uöt16_t
Ë
pw16_d©a
[1]) & 0x3) << 8)

187 + ((((
uöt16_t
Ë
pw16_d©a
[1]) & 0xFF00) >> 8);

191 i‡(
i_MaximumPaylﬂds
 < 2 || 
sögÀPaylﬂd
 == 1)

194 
i_k
 = 1; i_k < 
i_MaximumPaylﬂds
; i_k++)

196 
RTPhódî
[
i_k
]->
∑ylﬂdTy≥
 = -1;

197 
RTPhódî
[
i_k
]->
∑ylﬂdLí
 = 0;

201 
pw16_d©a
 = &pw16_d©a[(5 + 
i_blockLígth
) >> 1];

202 
RTPhódî
[0]->
°¨ts_byã1
 = (5 + 
i_blockLígth
) & 0x1;

203 
RTPhódî
[0]->
∑ylﬂdLí
 = RTPhódî[0]->∑ylﬂdLí - (
i_blockLígth
 + 5)

204 - 
i_disˇrdedBlockLígth
;

205 
RTPhódî
[0]->
∑ylﬂd
 = 
pw16_d©a
;

207 *
i_No_Of_Paylﬂds
 = 1;

213 
RTPhódî
[1]->
∑ylﬂdTy≥
 = 
uw16_£c⁄dPaylﬂd
;

214 
RTPhódî
[1]->
∑ylﬂd
 = &
pw16_d©a
[5 >> 1];

215 
RTPhódî
[1]->
°¨ts_byã1
 = 5 & 0x1;

216 
RTPhódî
[1]->
£qNumbî
 = RTPheader[0]->seqNumber;

217 
RTPhódî
[1]->
timeSèmp
 = RTPhódî[0]->timeSèm∞- 
uw16_off£tTimeSèmp
;

218 
RTPhódî
[1]->
s§c
 = RTPheader[0]->ssrc;

219 
RTPhódî
[1]->
∑ylﬂdLí
 = 
i_blockLígth
;

222 
RTPhódî
[0]->
∑ylﬂd
 = &
pw16_d©a
[(5 + 
i_blockLígth
) >> 1];

223 
RTPhódî
[0]->
°¨ts_byã1
 = (5 + 
i_blockLígth
) & 0x1;

224 
RTPhódî
[0]->
∑ylﬂdLí
 = RTPhódî[0]->∑ylﬂdLí - (
i_blockLígth
 + 5)

225 - 
i_disˇrdedBlockLígth
;

228 
i_k
 = 2; i_k < 
i_MaximumPaylﬂds
; i_k++)

230 
RTPhódî
[
i_k
]->
∑ylﬂdTy≥
 = -1;

231 
RTPhódî
[
i_k
]->
∑ylﬂdLí
 = 0;

234 *
i_No_Of_Paylﬂds
 = 2;

237 
	}
}

	@rtp.h

15 #i‚de‡
RTP_H


16 
	#RTP_H


	)

18 
	~"ty≥defs.h
"

20 
	~"codec_db.h
"

24 
uöt16_t
 
	m£qNumbî
;

25 
uöt32_t
 
	mtimeSèmp
;

26 
uöt32_t
 
	ms§c
;

27 
	m∑ylﬂdTy≥
;

28 c⁄° 
öt16_t
 *
	m∑ylﬂd
;

29 
öt16_t
 
	m∑ylﬂdLí
;

30 
öt16_t
 
	m°¨ts_byã1
;

31 
öt16_t
 
	mrcuPlC¡r
;

32 } 
	tRTPPackë_t
;

50 
WebRtcNëEQ_RTPPaylﬂdInfo
(
öt16_t
* 
pw16_D©agøm
, 
i_D©agømLí
,

51 
RTPPackë_t
* 
RTPhódî
);

75 
WebRtcNëEQ_Redund™cyS∂ô
(
RTPPackë_t
* 
RTPhódî
[], 
i_MaximumPaylﬂds
,

76 *
i_No_Of_Paylﬂds
);

	@set_fs.c

15 
	~"mcu.h
"

17 
	~"dtmf_buf„r.h
"

18 
	~"√ãq_îr‹_codes.h
"

20 
	$WebRtcNëEQ_McuSëFs
(
MCUIn°_t
 *
ö°
, 
uöt16_t
 
fs
)

22 
öt16_t
 
ok
 = 0;

24 
fs
)

28 #ifde‡
NETEQ_ATEVENT_DECODE


29 
ok
 = 
	`WebRtcNëEQ_DtmfDecodîInô
(&
ö°
->
DTMF_ö°
, 8000, 560);

31 
ö°
->
time°ampsPîCÆl
 = in°->
mûli£c⁄dsPîCÆl
 * 8;

35 #ifde‡
NETEQ_WIDEBAND


38 #ifde‡
NETEQ_ATEVENT_DECODE


39 
ok
 = 
	`WebRtcNëEQ_DtmfDecodîInô
(&
ö°
->
DTMF_ö°
, 16000, 1120);

41 
ö°
->
time°ampsPîCÆl
 = in°->
mûli£c⁄dsPîCÆl
 * 16;

46 #ifde‡
NETEQ_32KHZ_WIDEBAND


49 #ifde‡
NETEQ_ATEVENT_DECODE


50 
ok
 = 
	`WebRtcNëEQ_DtmfDecodîInô
(&
ö°
->
DTMF_ö°
, 32000, 2240);

52 
ö°
->
time°ampsPîCÆl
 = in°->
mûli£c⁄dsPîCÆl
 * 32;

57 #ifde‡
NETEQ_48KHZ_WIDEBAND


60 #ifde‡
NETEQ_ATEVENT_DECODE


61 
ok
 = 
	`WebRtcNëEQ_DtmfDecodîInô
(&
ö°
->
DTMF_ö°
, 48000, 3360);

63 
ö°
->
time°ampsPîCÆl
 = in°->
mûli£c⁄dsPîCÆl
 * 48;

71  
CODEC_DB_UNSUPPORTED_FS
;

75 
ö°
->
fs
 = fs;

77  
ok
;

78 
	}
}

	@signal_mcu.c

15 
	~"mcu.h
"

17 
	~<°rög.h
>

19 
	~"sig«l_¥o˚ssög_libøry.h
"

21 
	~"automode.h
"

22 
	~"dtmf_buf„r.h
"

23 
	~"mcu_d•_comm⁄.h
"

24 
	~"√ãq_îr‹_codes.h
"

26 #ifde‡
NETEQ_DELAY_LOGGING


27 
	~"dñay_loggög.h
"

28 
	~<°dio.h
>

30 
FILE
 *
dñay_fid2
;

37 
	$WebRtcNëEQ_Upd©ePackSizeSam∂es
(
MCUIn°_t
* 
ö°
, 
buf„r_pos
,

38 
∑ylﬂd_ty≥
,

39 
∑ck_size_ßm∂es
) {

40 i‡(
buf„r_pos
 >= 0) {

41 
codec_pos
;

42 
codec_pos
 = 
	`WebRtcNëEQ_DbGëCodec
(&
ö°
->
codec_DB_ö°
, 
∑ylﬂd_ty≥
);

43 i‡(
codec_pos
 >= 0) {

44 
codec_pos
 = 
ö°
->
codec_DB_ö°
.
posôi⁄
[codec_pos];

45 i‡(
codec_pos
 >= 0) {

46 
ãmp_∑ckë_size_ßm∂es
 = 
	`WebRtcNëEQ_PackëBuf„rGëPackëSize
(

47 &
ö°
->
PackëBuf„r_ö°
, 
buf„r_pos
, &ö°->
codec_DB_ö°
,

48 
codec_pos
, 
∑ck_size_ßm∂es
, 
ö°
->
av_sync
);

49 i‡(
ãmp_∑ckë_size_ßm∂es
 > 0)

50  
ãmp_∑ckë_size_ßm∂es
;

51  
∑ck_size_ßm∂es
;

55  
∑ck_size_ßm∂es
;

56 
	}
}

61 
	$WebRtcNëEQ_Sig«lMcu
(
MCUIn°_t
 *
ö°
)

64 
i_buf„Ωos
, 
i_ªs
;

65 
uöt16_t
 
uw16_ö°r
;

66 
DSP2MCU_öfo_t
 
d•Info
;

67 
öt16_t
 *
blockPå
, 
blockLí
;

68 
uöt32_t
 
uw32_avaûabÀTS
;

69 
RTPPackë_t
 
ãmp_pkt
;

70 
öt32_t
 
w32_bufsize
, 
w32_tmp
;

71 
öt16_t
 
∑ylﬂdTy≥
 = -1;

72 
öt16_t
 
w™ãdNoOfTimeSèmps
;

73 
öt32_t
 
tŸÆTS
;

74 
öt16_t
 
ﬁdPT
, 
œãPackëExi°
 = 0;

75 
uöt32_t
 
ﬁdTS
, 
¥evTS
, 
uw32_tmp
;

76 
uöt16_t
 
¥evSeqNo
;

77 
öt16_t
 
√xtSeqNoAvaû
;

78 
öt16_t
 
fs_mu…
, 
w16_tmp
;

79 
öt16_t
 
œ°ModeBGN⁄ly
 = 0;

80 #ifde‡
NETEQ_DELAY_LOGGING


81 
ãmp_v¨
;

83 
∂ayDtmf
 = 0;

85 
fs_mu…
 = 
	`WebRtcS∂_DivW32W16ResW16
(
ö°
->
fs
, 8000);

88 
ö°
->
œ°Rï‹tTS
 +ö°->
time°ampsPîCÆl
;

91 
	`WebRtcNëEQ_In¸emítWaôögTimes
(&
ö°
->
PackëBuf„r_ö°
);

95 
	`WEBRTC_SPL_MEMCPY_W8
(&
d•Info
,
ö°
->
pw16_ªadAddªss
,(
DSP2MCU_öfo_t
));

98 
blockPå
 = &
ö°
->
pw16_wrôeAddªss
[3];

101 
ö°
->
pw16_wrôeAddªss
[0] = 0;

102 
ö°
->
pw16_wrôeAddªss
[1] = 0;

103 
ö°
->
pw16_wrôeAddªss
[2] = 0;

105 i‡((
d•Info
.
œ°Mode
 & 
MODE_AWAITING_CODEC_PTR
) != 0)

111 i‡(
ö°
->
√w_codec
 != 1)

113 
ö°
->
cuºít_Codec
 = -1;

115 
d•Info
.
œ°Mode
 = (d•Info.œ°Modê^ 
MODE_AWAITING_CODEC_PTR
);

118 #ifde‡
NETEQ_STEREO


119 i‡((
d•Info
.
œ°Mode
 & 
MODE_MASTER_DTMF_SIGNAL
) != 0)

121 
∂ayDtmf
 = 1;

122 
d•Info
.
œ°Mode
 = (d•Info.œ°Modê^ 
MODE_MASTER_DTMF_SIGNAL
);

125 i‡((
d•Info
.
œ°Mode
 & 
MODE_USING_STEREO
) != 0)

127 i‡(
ö°
->
usögSãªo
 == 0)

130 
	`WebRtcNëEQ_Re£tAutomode
(&(
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
),

131 
ö°
->
PackëBuf„r_ö°
.
maxIn£πPosôi⁄s
);

133 
ö°
->
usögSãªo
 = 1;

134 
d•Info
.
œ°Mode
 = (d•Info.œ°Modê^ 
MODE_USING_STEREO
);

138 
ö°
->
usögSãªo
 = 0;

143 i‡((
d•Info
.
œ°Mode
 & 
MODE_BGN_ONLY
) != 0)

145 
œ°ModeBGN⁄ly
 = 1;

146 
d•Info
.
œ°Mode
 ^
MODE_BGN_ONLY
;

149 i‡((
d•Info
.
œ°Mode
 =
MODE_RFC3389CNG
Ë|| (d•Info.œ°Modê=
MODE_CODEC_INTERNAL_CNG
)

150 || (
d•Info
.
œ°Mode
 =
MODE_EXPAND
))

156 
ö°
->
Buf„rSèt_ö°
.
uw32_CNG∂ayedTS
 +ö°->
time°ampsPîCÆl
;

158 i‡(
d•Info
.
œ°Mode
 =
MODE_RFC3389CNG
)

161 
ö°
->
Buf„rSèt_ö°
.
w16_˙gOn
 = 
CNG_RFC3389_ON
;

163 i‡(
d•Info
.
œ°Mode
 =
MODE_CODEC_INTERNAL_CNG
)

166 
ö°
->
Buf„rSèt_ö°
.
w16_˙gOn
 = 
CNG_INTERNAL_ON
;

172 i‡(
d•Info
.
‰ameLí
 > 0)

174 
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
 = 
d•Info
.
‰ameLí
;

178 i‡(
ö°
->
√w_codec
 != 1)

180 i‡(
	`WebRtcNëEQ_DbIsMDCodec
((
WebRtcNëEQDecodî
Ë
ö°
->
cuºít_Codec
))

182 
	`WebRtcNëEQ_PackëBuf„rFödLowe°Time°amp
(&
ö°
->
PackëBuf„r_ö°
,

183 
ö°
->
timeSèmp
, &
uw32_avaûabÀTS
, &
i_buf„Ωos
, 1, &
∑ylﬂdTy≥
);

184 i‡((
ö°
->
√w_codec
 !1Ë&& (ö°->
timeSèmp
 =
uw32_avaûabÀTS
)

185 && (
ö°
->
timeSèmp
 < 
d•Info
.
∂ayedOutTS
Ë&& (
i_buf„Ωos
 != -1)

186 && (
	`WebRtcNëEQ_DbGëPaylﬂd
(&(
ö°
->
codec_DB_ö°
),

187 (
WebRtcNëEQDecodî
Ë
ö°
->
cuºít_Codec
Ë=
∑ylﬂdTy≥
))

189 
waôögTime
;

190 
ãmp_pkt
.
∑ylﬂd
 = 
blockPå
 + 1;

191 
i_ªs
 = 
	`WebRtcNëEQ_PackëBuf„rExåa˘
(&
ö°
->
PackëBuf„r_ö°
, &
ãmp_pkt
,

192 
i_buf„Ωos
, &
waôögTime
);

193 i‡(
i_ªs
 < 0)

195  
i_ªs
;

197 
	`WebRtcNëEQ_St‹eWaôögTime
(
ö°
, 
waôögTime
);

198 *
blockPå
 = 
ãmp_pkt
.
∑ylﬂdLí
;

200 i‡(
ãmp_pkt
.
rcuPlC¡r
 > 0)

202 *
blockPå
 = (*blockPåË| (
DSP_CODEC_RED_FLAG
);

204 
blockPå
 +((
ãmp_pkt
.
∑ylﬂdLí
 + 1) >> 1) + 1;

210 *
blockPå
 = 0;

211 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0xf0ff)

212 | 
DSP_CODEC_ADD_LATE_PKT
;

213 
œãPackëExi°
 = 1;

218 
i_ªs
 = 
	`WebRtcNëEQ_PackëBuf„rFödLowe°Time°amp
(&
ö°
->
PackëBuf„r_ö°
,

219 
d•Info
.
∂ayedOutTS
, &
uw32_avaûabÀTS
, &
i_buf„Ωos
, (
ö°
->
√w_codec
 == 0),

220 &
∑ylﬂdTy≥
);

221 i‡(
i_ªs
 < 0)

223  
i_ªs
;

226 i‡(
ö°
->
Buf„rSèt_ö°
.
w16_˙gOn
 =
CNG_RFC3389_ON
)

233 
i_buf„Ωos
 !-1 && 
	`WebRtcNëEQ_DbIsCNGPaylﬂd
(&
ö°
->
codec_DB_ö°
,

234 
∑ylﬂdTy≥
Ë&& 
d•Info
.
∂ayedOutTS
 >
uw32_avaûabÀTS
)

238 
ö°
->
PackëBuf„r_ö°
.
∑ylﬂdTy≥
[
i_buf„Ωos
] = -1;

239 
ö°
->
PackëBuf„r_ö°
.
∑ylﬂdLígthByãs
[
i_buf„Ωos
] = 0;

240 
ö°
->
PackëBuf„r_ö°
.
numPackësInBuf„r
--;

243 
	`WebRtcNëEQ_PackëBuf„rFödLowe°Time°amp
(&
ö°
->
PackëBuf„r_ö°
,

244 
d•Info
.
∂ayedOutTS
, &
uw32_avaûabÀTS
, &
i_buf„Ωos
, (
ö°
->
√w_codec
 == 0),

245 &
∑ylﬂdTy≥
);

250 
w32_bufsize
 = 
	`WebRtcNëEQ_PackëBuf„rGëSize
(&
ö°
->
PackëBuf„r_ö°
,

251 &
ö°
->
codec_DB_ö°
, in°->
av_sync
);

253 i‡(
d•Info
.
œ°Mode
 =
MODE_SUCCESS_ACCELERATE
 || dspInfo.lastMode

254 =
MODE_LOWEN_ACCELERATE
 || 
d•Info
.
œ°Mode
 =
MODE_SUCCESS_PREEMPTIVE


255 || 
d•Info
.
œ°Mode
 =
MODE_LOWEN_PREEMPTIVE
)

258 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
ßm∂eMem‹y
 -
d•Info
.
ßm∂esLe·


259 + 
ö°
->
time°ampsPîCÆl
;

263 
w32_bufsize
 = 
	`WebRtcS∂_DivW32W16
((w32_bufsizê+ 
d•Info
.
ßm∂esLe·
), 
fs_mu…
);

265 #ifde‡
NETEQ_ATEVENT_DECODE


267 i‡(
	`WebRtcNëEQ_DtmfDecode
(&
ö°
->
DTMF_ö°
, 
blockPå
 + 1, blockPtr + 2,

268 
d•Info
.
∂ayedOutTS
 + 
ö°
->
Buf„rSèt_ö°
.
uw32_CNG∂ayedTS
) > 0)

270 
∂ayDtmf
 = 1;

273 
ö°
->
pw16_wrôeAddªss
[0] = in°->pw16_wrôeAddªss[0] | 
DSP_DTMF_PAYLOAD
;

276 
blockPå
[0] = 4;

278 
blockPå
 += 3;

283 
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
 =

284 
	`WebRtcNëEQ_Upd©ePackSizeSam∂es
(
ö°
, 
i_buf„Ωos
, 
∑ylﬂdTy≥
,

285 
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
);

287 
uw16_ö°r
 = 
	`WebRtcNëEQ_Buf°©sDecisi⁄
(&
ö°
->
Buf„rSèt_ö°
,

288 
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
, 
w32_bufsize
, 
d•Info
.
∂ayedOutTS
,

289 
uw32_avaûabÀTS
, 
i_buf„Ωos
 == -1,

290 
	`WebRtcNëEQ_DbIsCNGPaylﬂd
(&
ö°
->
codec_DB_ö°
, 
∑ylﬂdTy≥
), 
d•Info
.
œ°Mode
,

291 
ö°
->
NëEqPœyoutMode
, in°->
time°ampsPîCÆl
, in°->
NoOfEx∑ndCÆls
, 
fs_mu…
,

292 
œ°ModeBGN⁄ly
, 
∂ayDtmf
);

295 i‡(
ö°
->
œ°Rï‹tTS
 > 
	`WEBRTC_SPL_UMUL
(ö°->
fs
, 
MAX_LOSS_REPORT_PERIOD
))

298 
	`WebRtcNëEQ_Re£tMcuInCÆlSèts
(
ö°
);

302 i‡((
d•Info
.
ßm∂esLe·
 >
ö°
->
time°ampsPîCÆl
Ë&& (
uw16_ö°r


303 !
BUFSTATS_DO_ACCELERATE
Ë&& (
uw16_ö°r
 !
BUFSTATS_DO_MERGE
) && (uw16_instr

304 !
BUFSTATS_DO_PREEMPTIVE_EXPAND
))

306 *
blockPå
 = 0;

307 
ö°
->
pw16_wrôeAddªss
[0] = (ö°->pw16_wrôeAddªss[0] & 0x0fffË| 
DSP_INSTR_NORMAL
;

311 i‡(
uw16_ö°r
 =
BUFSTATS_DO_EXPAND
)

313 
ö°
->
NoOfEx∑ndCÆls
++;

318 
ö°
->
NoOfEx∑ndCÆls
 = 0;

322 i‡((
ö°
->
√w_codec
Ë|| (
uw16_ö°r
 =
BUFSTAT_REINIT
))

324 
CodecFuncIn°_t
 
cö°
;

327 
blockPå
 = &
ö°
->
pw16_wrôeAddªss
[3];

329 
ö°
->
pw16_wrôeAddªss
[0] = 0;

331 
ö°
->
timeSèmp
 = 
uw32_avaûabÀTS
;

332 
d•Info
.
∂ayedOutTS
 = 
uw32_avaûabÀTS
;

333 i‡(
ö°
->
cuºít_Codec
 != -1)

335 
i_ªs
 = 
	`WebRtcNëEQ_DbGëPås
(&
ö°
->
codec_DB_ö°
,

336 (
WebRtcNëEQDecodî
Ë
ö°
->
cuºít_Codec
, &
cö°
);

337 i‡(
i_ªs
 < 0)

339  
i_ªs
;

345 i‡(
	`WebRtcNëEQ_DbIsCNGPaylﬂd
(&
ö°
->
codec_DB_ö°
, 
∑ylﬂdTy≥
))

348 
uöt16_t
 
ãmpFs
;

350 
ãmpFs
 = 
	`WebRtcNëEQ_DbGëSam∂eR©e
(&
ö°
->
codec_DB_ö°
, 
∑ylﬂdTy≥
);

353 i‡(
ãmpFs
 > 32000)

355 
ö°
->
fs
 = 32000;

357 i‡(
ãmpFs
 > 0)

359 
ö°
->
fs
 = 
ãmpFs
;

362 
	`WebRtcS∂_MemSëW16
((
öt16_t
*Ë&
cö°
, 0,

363 (
CodecFuncIn°_t
Ë/ (
öt16_t
));

364 
cö°
.
codec_fs
 = 
ö°
->
fs
;

366 
cö°
.
timeSèmp
 = 
ö°
->timeStamp;

367 
blockLí
 = ((
CodecFuncIn°_t
)Ë>> ((
öt16_t
) - 1);

368 *
blockPå
 = 
blockLí
 * 2;

369 
blockPå
++;

370 
	`WEBRTC_SPL_MEMCPY_W8
(
blockPå
,&
cö°
,(
CodecFuncIn°_t
));

371 
blockPå
 +
blockLí
;

372 
ö°
->
√w_codec
 = 0;

375 
i_ªs
 = 
	`WebRtcNëEQ_McuSëFs
(
ö°
, 
cö°
.
codec_fs
);

376 i‡(
i_ªs
 < 0)

378  
i_ªs
;

382 
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
 =

383 
	`WebRtcNëEQ_Upd©ePackSizeSam∂es
(
ö°
, 
i_buf„Ωos
, 
∑ylﬂdTy≥
,

384 
ö°
->
time°ampsPîCÆl
 * 3);

386 
	`WebRtcNëEQ_Re£tAutomode
(&(
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
),

387 
ö°
->
PackëBuf„r_ö°
.
maxIn£πPosôi⁄s
);

389 #ifde‡
NETEQ_CNG_CODEC


391 
i_ªs
 = 
	`WebRtcNëEQ_DbGëPås
(&
ö°
->
codec_DB_ö°
, 
kDecodîCNG
, &
cö°
);

392 i‡((
i_ªs
 < 0Ë&& (i_ª†!
CODEC_DB_NOT_EXIST1
))

396  
i_ªs
;

401 
blockLí
 = ((
cö°
.
codec_°©e
)Ë>> ((
öt16_t
) - 1);

402 *
blockPå
 = 
blockLí
 * 2;

403 
blockPå
++;

404 
	`WEBRTC_SPL_MEMCPY_W8
(
blockPå
,&
cö°
.
codec_°©e
,(cinst.codec_state));

405 
blockPå
 +
blockLí
;

409 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0xf0ff)

410 | 
DSP_CODEC_NEW_CODEC
;

412 i‡(
uw16_ö°r
 =
BUFSTATS_DO_RFC3389CNG_NOPACKET
)

418 
uw16_ö°r
 = 
BUFSTATS_DO_RFC3389CNG_PACKET
;

420 i‡(
uw16_ö°r
 !
BUFSTATS_DO_RFC3389CNG_PACKET
)

422 
uw16_ö°r
 = 
BUFSTATS_DO_NORMAL
;

426 
	`WebRtcNëEQ_Re£tMcuInCÆlSèts
(
ö°
);

430 i‡(
uw16_ö°r
 =
BUFSTAT_REINIT_DECODER
)

433 
uw16_ö°r
 = 
BUFSTATS_DO_NORMAL
;

434 
ö°
->
pw16_wrôeAddªss
[0] = (ö°->pw16_wrôeAddªss[0] & 0xf0ffË| 
DSP_CODEC_RESET
;

438 i‡(
uw16_ö°r
 =
BUFSTATS_DO_EXPAND
)

441 
ö°
->
timeSèmp
 = 
d•Info
.
∂ayedOutTS
;

444 i‡(
	`WebRtcNëEQ_DbIsMDCodec
((
WebRtcNëEQDecodî
Ë
ö°
->
cuºít_Codec
)

445 && (
d•Info
.
MD
 || 
œãPackëExi°
))

448 i‡(
d•Info
.
œ°Mode
 !
MODE_ONE_DESCRIPTOR
)

451 
ö°
->
⁄e_desc
 = 0;

453 i‡(
ö°
->
⁄e_desc
 < 
MAX_ONE_DESC
)

456 
ö°
->
⁄e_desc
++;

457 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

458 | 
DSP_INSTR_NORMAL_ONE_DESC
;

461 
ö°
->
NoOfEx∑ndCÆls
 = 
	`WEBRTC_SPL_MAX
(inst->NoOfExpandCalls - 1, 0);

467 
ö°
->
⁄e_desc
 = 0;

472 
ö°
->
pw16_wrôeAddªss
[0] = (ö°->pw16_wrôeAddªss[0] & 0x0fffË| 
DSP_INSTR_EXPAND
;

477 i‡((
uw16_ö°r
 =
BUFSTATS_DO_MERGE
Ë&& (
d•Info
.
MD
 != 0))

479 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

480 | 
DSP_INSTR_NORMAL_ONE_DESC
;

481 *
blockPå
 = 0;

486 i‡(
uw16_ö°r
 =
BUFSTATS_DO_RFC3389CNG_NOPACKET
)

488 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

489 | 
DSP_INSTR_DO_RFC3389CNG
;

490 *
blockPå
 = 0;

495 i‡(
uw16_ö°r
 =
BUFSTATS_DO_INTERNAL_CNG_NOPACKET
)

497 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

498 | 
DSP_INSTR_DO_CODEC_INTERNAL_CNG
;

499 *
blockPå
 = 0;

504 i‡(
uw16_ö°r
 =
BUFSTATS_DO_DTMF_ONLY
)

506 
uöt32_t
 
timeSèmpJump
 = 0;

509 i‡((
ö°
->
Buf„rSèt_ö°
.
uw32_CNG∂ayedTS
 > 0Ë&& (
d•Info
.
œ°Mode
 !
MODE_DTMF
))

512 
timeSèmpJump
 = 
ö°
->
Buf„rSèt_ö°
.
uw32_CNG∂ayedTS
;

513 
ö°
->
pw16_wrôeAddªss
[1] = (
uöt16_t
Ë(
timeSèmpJump
 >> 16);

514 
ö°
->
pw16_wrôeAddªss
[2] = (
uöt16_t
Ë(
timeSèmpJump
 & 0xFFFF);

517 
ö°
->
timeSèmp
 = 
d•Info
.
∂ayedOutTS
 + 
timeSèmpJump
;

519 
ö°
->
Buf„rSèt_ö°
.
uw32_CNG∂ayedTS
 = 0;

520 
ö°
->
NoOfEx∑ndCÆls
 = 0;

522 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

523 | 
DSP_INSTR_DTMF_GENERATE
;

524 *
blockPå
 = 0;

528 i‡(
uw16_ö°r
 =
BUFSTATS_DO_ACCELERATE
)

531 i‡(
d•Info
.
ßm∂esLe·
 >(3 * 80 * 
fs_mu…
))

534 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

535 | 
DSP_INSTR_ACCELERATE
;

536 *
blockPå
 = 0;

537 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
ßm∂eMem‹y


538 (
öt32_t
Ë
d•Info
.
ßm∂esLe·
;

539 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
¥evTimeSˇÀ
 = 1;

542 i‡((
d•Info
.
ßm∂esLe·
 >(1 * 80 * 
fs_mu…
))

543 && (
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
 >(240 * 
fs_mu…
)))

546 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

547 | 
DSP_INSTR_NORMAL
;

548 *
blockPå
 = 0;

551 i‡((
d•Info
.
ßm∂esLe·
 < (1 * 80 * 
fs_mu…
))

552 && (
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
 >(240 * 
fs_mu…
)))

555 
w™ãdNoOfTimeSèmps
 = 
ö°
->
time°ampsPîCÆl
;

557 i‡(
d•Info
.
ßm∂esLe·
 >(2 * 80 * 
fs_mu…
))

560 
w™ãdNoOfTimeSèmps
 = 
ö°
->
time°ampsPîCÆl
;

568 
w™ãdNoOfTimeSèmps
 = 2 * 
ö°
->
time°ampsPîCÆl
;

569 
uw16_ö°r
 = 
BUFSTATS_DO_NORMAL
;

572 i‡(
uw16_ö°r
 =
BUFSTATS_DO_PREEMPTIVE_EXPAND
)

575 i‡(
d•Info
.
ßm∂esLe·
 >(3 * 80 * 
fs_mu…
))

578 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

579 | 
DSP_INSTR_PREEMPTIVE_EXPAND
;

580 *
blockPå
 = 0;

581 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
ßm∂eMem‹y


582 (
öt32_t
Ë
d•Info
.
ßm∂esLe·
;

583 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
¥evTimeSˇÀ
 = 1;

586 i‡((
d•Info
.
ßm∂esLe·
 >(1 * 80 * 
fs_mu…
))

587 && (
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
 >(240 * 
fs_mu…
)))

593 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

594 | 
DSP_INSTR_PREEMPTIVE_EXPAND
;

595 *
blockPå
 = 0;

596 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
ßm∂eMem‹y


597 (
öt32_t
Ë
d•Info
.
ßm∂esLe·
;

598 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
¥evTimeSˇÀ
 = 1;

601 i‡((
d•Info
.
ßm∂esLe·
 < (1 * 80 * 
fs_mu…
))

602 && (
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
 >(240 * 
fs_mu…
)))

608 
w™ãdNoOfTimeSèmps
 = 
ö°
->
time°ampsPîCÆl
;

610 i‡(
d•Info
.
ßm∂esLe·
 >(2 * 80 * 
fs_mu…
))

613 
w™ãdNoOfTimeSèmps
 = 
ö°
->
time°ampsPîCÆl
;

621 
w™ãdNoOfTimeSèmps
 = 2 * 
ö°
->
time°ampsPîCÆl
;

626 
w™ãdNoOfTimeSèmps
 = 
ö°
->
time°ampsPîCÆl
;

630 
tŸÆTS
 = 0;

631 
ﬁdTS
 = 
uw32_avaûabÀTS
;

632 i‡((
i_buf„Ωos
 > -1Ë&& (
uw16_ö°r
 !
BUFSTATS_DO_ALTERNATIVE_PLC
) && (uw16_instr

633 !
BUFSTATS_DO_ALTERNATIVE_PLC_INC_TS
Ë&& (
uw16_ö°r
 !
BUFSTATS_DO_AUDIO_REPETITION
)

634 && (
uw16_ö°r
 !
BUFSTATS_DO_AUDIO_REPETITION_INC_TS
))

636 
uw32_tmp
 = (
uw32_avaûabÀTS
 - 
d•Info
.
∂ayedOutTS
);

637 
ö°
->
pw16_wrôeAddªss
[1] = (
uöt16_t
Ë(
uw32_tmp
 >> 16);

638 
ö°
->
pw16_wrôeAddªss
[2] = (
uöt16_t
Ë(
uw32_tmp
 & 0xFFFF);

639 i‡(
ö°
->
Buf„rSèt_ö°
.
w16_˙gOn
 =
CNG_OFF
)

647 
ö°
->
lo°TS
 +
uw32_tmp
;

650 i‡(
uw16_ö°r
 !
BUFSTATS_DO_RFC3389CNG_PACKET
)

653 
ö°
->
Buf„rSèt_ö°
.
w16_˙gOn
 = 
CNG_OFF
;

660 
ö°
->
Buf„rSèt_ö°
.
uw32_CNG∂ayedTS
 = 0;

662 
¥evSeqNo
 = 
ö°
->
PackëBuf„r_ö°
.
£qNumbî
[
i_buf„Ωos
];

663 
¥evTS
 = 
ö°
->
PackëBuf„r_ö°
.
timeSèmp
[
i_buf„Ωos
];

664 
ﬁdPT
 = 
ö°
->
PackëBuf„r_ö°
.
∑ylﬂdTy≥
[
i_buf„Ωos
];

674 
ö°
->
decoded_∑ckë_£quí˚_numbî
 = 
¥evSeqNo
;

675 
ö°
->
decoded_∑ckë_time°amp
 = 
¥evTS
;

678 
ö°
->
pw16_wrôeAddªss
[0] = inst->pw16_writeAddress[0] & 0xFF3F;

681 
waôögTime
;

682 
ö°
->
timeSèmp
 = 
uw32_avaûabÀTS
;

684 
ãmp_pkt
.
∑ylﬂd
 = 
blockPå
 + 1;

685 
i_ªs
 = 
	`WebRtcNëEQ_PackëBuf„rExåa˘
(&
ö°
->
PackëBuf„r_ö°
, &
ãmp_pkt
,

686 
i_buf„Ωos
, &
waôögTime
);

688 i‡(
i_ªs
 < 0)

691  
i_ªs
;

693 
	`WebRtcNëEQ_St‹eWaôögTime
(
ö°
, 
waôögTime
);

695 #ifde‡
NETEQ_DELAY_LOGGING


696 
ãmp_v¨
 = 
NETEQ_DELAY_LOGGING_SIGNAL_DECODE
;

697 i‡((
	`fwrôe
(&
ãmp_v¨
, (),

698 1, 
dñay_fid2
) != 1) ||

699 (
	`fwrôe
(&
ãmp_pkt
.
timeSèmp
, (
uöt32_t
),

700 1, 
dñay_fid2
) != 1) ||

701 (
	`fwrôe
(&
d•Info
.
ßm∂esLe·
, (
uöt16_t
),

702 1, 
dñay_fid2
) != 1)) {

707 *
blockPå
 = 
ãmp_pkt
.
∑ylﬂdLí
;

709 i‡(
ãmp_pkt
.
rcuPlC¡r
 > 0)

711 *
blockPå
 = (*blockPåË| (
DSP_CODEC_RED_FLAG
);

713 
blockPå
 +((
ãmp_pkt
.
∑ylﬂdLí
 + 1) >> 1) + 1;

715 i‡(
i_buf„Ωos
 > -1)

721 
tŸÆTS
 = 
uw32_avaûabÀTS
 - 
ﬁdTS
 + 
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
;

724 
	`WebRtcNëEQ_PackëBuf„rFödLowe°Time°amp
(&
ö°
->
PackëBuf„r_ö°
,

725 
ö°
->
timeSèmp
, &
uw32_avaûabÀTS
, &
i_buf„Ωos
, 0, &
∑ylﬂdTy≥
);

727 
√xtSeqNoAvaû
 = 0;

728 i‡((
i_buf„Ωos
 > -1Ë&& (
ﬁdPT


729 =
ö°
->
PackëBuf„r_ö°
.
∑ylﬂdTy≥
[
i_buf„Ωos
]))

731 
w16_tmp
 = 
ö°
->
PackëBuf„r_ö°
.
£qNumbî
[
i_buf„Ωos
] - 
¥evSeqNo
;

732 
w32_tmp
 = 
ö°
->
PackëBuf„r_ö°
.
timeSèmp
[
i_buf„Ωos
] - 
¥evTS
;

733 i‡((
w16_tmp
 == 1) ||

734 ((
w16_tmp
 =0Ë&& (
w32_tmp
 =
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
)))

736 
√xtSeqNoAvaû
 = 1;

738 
¥evSeqNo
 = 
ö°
->
PackëBuf„r_ö°
.
£qNumbî
[
i_buf„Ωos
];

741 
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
 =

742 
	`WebRtcNëEQ_Upd©ePackSizeSam∂es
(
ö°
, 
i_buf„Ωos
,

743 
∑ylﬂdTy≥
, 
ö°
->
PackëBuf„r_ö°
.
∑ckSizeSam∂es
);

745 (
tŸÆTS
 < 
w™ãdNoOfTimeSèmps
Ë&& (
√xtSeqNoAvaû
 == 1));

748 i‡((
uw16_ö°r
 =
BUFSTATS_DO_ACCELERATE
)

749 || (
uw16_ö°r
 =
BUFSTATS_DO_PREEMPTIVE_EXPAND
))

752 i‡((
tŸÆTS
 + 
d•Info
.
ßm∂esLe·
Ë< 
	`WEBRTC_SPL_MUL
(3,
ö°
->
time°ampsPîCÆl
)

753 && (
uw16_ö°r
 =
BUFSTATS_DO_ACCELERATE
))

756 
uw16_ö°r
 = 
BUFSTATS_DO_NORMAL
;

760 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
ßm∂eMem‹y


761 (
öt32_t
Ë
d•Info
.
ßm∂esLe·
 + 
tŸÆTS
;

762 
ö°
->
Buf„rSèt_ö°
.
Automode_ö°
.
¥evTimeSˇÀ
 = 1;

767 *
blockPå
 = 0;

770 
uw16_ö°r
)

772 
BUFSTATS_DO_NORMAL
:

774 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

775 | 
DSP_INSTR_NORMAL
;

777 
BUFSTATS_DO_ACCELERATE
:

778 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

779 | 
DSP_INSTR_ACCELERATE
;

781 
BUFSTATS_DO_MERGE
:

782 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

783 | 
DSP_INSTR_MERGE
;

785 
BUFSTATS_DO_RFC3389CNG_PACKET
:

786 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

787 | 
DSP_INSTR_DO_RFC3389CNG
;

789 
BUFSTATS_DO_ALTERNATIVE_PLC
:

790 
ö°
->
pw16_wrôeAddªss
[1] = 0;

791 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

792 | 
DSP_INSTR_DO_ALTERNATIVE_PLC
;

794 
BUFSTATS_DO_ALTERNATIVE_PLC_INC_TS
:

795 
ö°
->
pw16_wrôeAddªss
[1] = 0;

796 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

797 | 
DSP_INSTR_DO_ALTERNATIVE_PLC_INC_TS
;

799 
BUFSTATS_DO_AUDIO_REPETITION
:

800 
ö°
->
pw16_wrôeAddªss
[1] = 0;

801 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

802 | 
DSP_INSTR_DO_AUDIO_REPETITION
;

804 
BUFSTATS_DO_AUDIO_REPETITION_INC_TS
:

805 
ö°
->
pw16_wrôeAddªss
[1] = 0;

806 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

807 | 
DSP_INSTR_DO_AUDIO_REPETITION_INC_TS
;

809 
BUFSTATS_DO_PREEMPTIVE_EXPAND
:

810 
ö°
->
pw16_wrôeAddªss
[0] = (inst->pw16_writeAddress[0] & 0x0fff)

811 | 
DSP_INSTR_PREEMPTIVE_EXPAND
;

814  
UNKNOWN_BUFSTAT_DECISION
;

817 
ö°
->
timeSèmp
 = 
d•Info
.
∂ayedOutTS
;

820 
	}
}

	@signal_processing_library.h

18 #i‚de‡
WEBRTC_SPL_SIGNAL_PROCESSING_LIBRARY_H_


19 
	#WEBRTC_SPL_SIGNAL_PROCESSING_LIBRARY_H_


	)

21 
	~<°rög.h
>

22 
	~"ty≥defs.h
"

25 
	#WEBRTC_SPL_WORD16_MAX
 32767

	)

26 
	#WEBRTC_SPL_WORD16_MIN
 -32768

	)

27 
	#WEBRTC_SPL_WORD32_MAX
 (
öt32_t
)0x7fffffff

	)

28 
	#WEBRTC_SPL_WORD32_MIN
 (
öt32_t
)0x80000000

	)

29 
	#WEBRTC_SPL_MAX_LPC_ORDER
 14

	)

30 
	#WEBRTC_SPL_MAX_SEED_USED
 0x80000000L

	)

31 
	#WEBRTC_SPL_MIN
(
A
, 
B
) (A < B ? A : B)

32 
	#WEBRTC_SPL_MAX
(
A
, 
B
) (A > B ? A : B)

35 
	#WEBRTC_SPL_ABS_W16
(
a
) \

36 (((
öt16_t
)
a
 >0Ë? ((öt16_tÔË: -((öt16_tÔ))

	)

37 
	#WEBRTC_SPL_ABS_W32
(
a
) \

38 (((
öt32_t
)
a
 >0Ë? ((öt32_tÔË: -((öt32_tÔ))

	)

40 #ifde‡
WEBRTC_ARCH_LITTLE_ENDIAN


41 
	#WEBRTC_SPL_GET_BYTE
(
a
, 
ƒ
Ë(((
öt8_t
 *Ô)[ƒ])

	)

42 
	#WEBRTC_SPL_SET_BYTE
(
d_±r
, 
vÆ
, 
ödex
) \

43 (((
öt8_t
 *)
d_±r
)[
ödex
] = (
vÆ
))

	)

45 
	#WEBRTC_SPL_GET_BYTE
(
a
, 
ƒ
) \

46 ((((
öt16_t
 *)
a
)[
ƒ
 >> 1]Ë>> ((“∏+ 1Ë& 0x1Ë* 8Ë& 0x00ff)

	)

47 
	#WEBRTC_SPL_SET_BYTE
(
d_±r
, 
vÆ
, 
ödex
) \

48 ((
öt16_t
 *)
d_±r
)[
ödex
 >> 1] = \

49 ((((
öt16_t
 *)
d_±r
)[
ödex
 >> 1]) \

50 & (0x00f‡<< (8 * ((
ödex
Ë& 0x1)))Ë| (
vÆ
 << (8 * ((ödex + 1Ë& 0x1)))

	)

53 
	#WEBRTC_SPL_MUL
(
a
, 
b
) \

54 ((
öt32_t
Ë((öt32_t)(
a
Ë* (öt32_t)(
b
)))

	)

55 
	#WEBRTC_SPL_UMUL
(
a
, 
b
) \

56 ((
uöt32_t
Ë((uöt32_t)(
a
Ë* (uöt32_t)(
b
)))

	)

57 
	#WEBRTC_SPL_UMUL_RSFT16
(
a
, 
b
) \

58 ((
uöt32_t
Ë((uöt32_t)(
a
Ë* (uöt32_t)(
b
)Ë>> 16)

	)

59 
	#WEBRTC_SPL_UMUL_16_16
(
a
, 
b
) \

60 ((
uöt32_t
Ë(
uöt16_t
)(
a
Ë* (uöt16_t)(
b
))

	)

61 
	#WEBRTC_SPL_UMUL_16_16_RSFT16
(
a
, 
b
) \

62 (((
uöt32_t
Ë(
uöt16_t
)(
a
Ë* (uöt16_t)(
b
)Ë>> 16)

	)

63 
	#WEBRTC_SPL_UMUL_32_16
(
a
, 
b
) \

64 ((
uöt32_t
Ë((uöt32_t)(
a
Ë* (
uöt16_t
)(
b
)))

	)

65 
	#WEBRTC_SPL_UMUL_32_16_RSFT16
(
a
, 
b
) \

66 ((
uöt32_t
Ë((uöt32_t)(
a
Ë* (
uöt16_t
)(
b
)Ë>> 16)

	)

67 
	#WEBRTC_SPL_MUL_16_U16
(
a
, 
b
) \

68 ((
öt32_t
)(
öt16_t
)(
a
Ë* (
uöt16_t
)(
b
))

	)

69 
	#WEBRTC_SPL_DIV
(
a
, 
b
) \

70 ((
öt32_t
Ë((öt32_t)(
a
Ë/ (öt32_t)(
b
)))

	)

71 
	#WEBRTC_SPL_UDIV
(
a
, 
b
) \

72 ((
uöt32_t
Ë((uöt32_t)(
a
Ë/ (uöt32_t)(
b
)))

	)

74 #i‚de‡
WEBRTC_ARCH_ARM_V7


76 
	#WEBRTC_SPL_MUL_16_16
(
a
, 
b
) \

77 ((
öt32_t
Ë(((
öt16_t
)(
a
)Ë* ((öt16_t)(
b
))))

	)

78 
	#WEBRTC_SPL_MUL_16_32_RSFT16
(
a
, 
b
) \

79 (
	`WEBRTC_SPL_MUL_16_16
(
a
, 
b
 >> 16) \

80 + ((
	`WEBRTC_SPL_MUL_16_16
(
a
, (
b
 & 0xffffË>> 1Ë+ 0x4000Ë>> 15))

	)

81 
	#WEBRTC_SPL_MUL_32_32_RSFT32
(
a32a
, 
a32b
, 
b32
) \

82 ((
öt32_t
)(
	`WEBRTC_SPL_MUL_16_32_RSFT16
(
a32a
, 
b32
) \

83 + (
	`WEBRTC_SPL_MUL_16_32_RSFT16
(
a32b
, 
b32
Ë>> 16)))

	)

84 
	#WEBRTC_SPL_MUL_32_32_RSFT32BI
(
a32
, 
b32
) \

85 ((
öt32_t
)(
	`WEBRTC_SPL_MUL_16_32_RSFT16
(( \

86 (
öt16_t
)(
a32
 >> 16)), 
b32
) + \

87 (
	`WEBRTC_SPL_MUL_16_32_RSFT16
(( \

88 (
öt16_t
)((
a32
 & 0x0000FFFFË>> 1)), 
b32
Ë>> 15)))

	)

91 
	#WEBRTC_SPL_MUL_16_32_RSFT11
(
a
, 
b
) \

92 ((
	`WEBRTC_SPL_MUL_16_16
(
a
, (
b
) >> 16) << 5) \

93 + (((
	`WEBRTC_SPL_MUL_16_U16
(
a
, (
uöt16_t
)(
b
)Ë>> 1Ë+ 0x0200Ë>> 10))

	)

94 
	#WEBRTC_SPL_MUL_16_32_RSFT14
(
a
, 
b
) \

95 ((
	`WEBRTC_SPL_MUL_16_16
(
a
, (
b
) >> 16) << 2) \

96 + (((
	`WEBRTC_SPL_MUL_16_U16
(
a
, (
uöt16_t
)(
b
)Ë>> 1Ë+ 0x1000Ë>> 13))

	)

97 
	#WEBRTC_SPL_MUL_16_32_RSFT15
(
a
, 
b
) \

98 ((
	`WEBRTC_SPL_MUL_16_16
(
a
, (
b
) >> 16) << 1) \

99 + (((
	`WEBRTC_SPL_MUL_16_U16
(
a
, (
uöt16_t
)(
b
)Ë>> 1Ë+ 0x2000Ë>> 14))

	)

101 
	#WEBRTC_SPL_MUL_16_16_RSFT
(
a
, 
b
, 
c
) \

102 (
	`WEBRTC_SPL_MUL_16_16
(
a
, 
b
Ë>> (
c
))

	)

104 
	#WEBRTC_SPL_MUL_16_16_RSFT_WITH_ROUND
(
a
, 
b
, 
c
) \

105 ((
	`WEBRTC_SPL_MUL_16_16
(
a
, 
b
Ë+ ((
öt32_t
) \

106 (((
öt32_t
)1Ë<< ((
c
Ë- 1)))Ë>> (c))

	)

107 
	#WEBRTC_SPL_MUL_16_16_RSFT_WITH_FIXROUND
(
a
, 
b
) \

108 ((
	`WEBRTC_SPL_MUL_16_16
(
a
, 
b
Ë+ ((
öt32_t
Ë(1 << 14))Ë>> 15)

	)

111 
	#WEBRTC_SPL_SCALEDIFF32
(
A
, 
B
, 
C
) \

112 (
C
 + (
B
 >> 16Ë* 
A
 + (((
uöt32_t
)(0x0000FFFF & BË* AË>> 16))

	)

114 
	#WEBRTC_SPL_ADD_SAT_W32
(
a
, 
b
Ë
	`WebRtcS∂_AddS©W32
◊, b)

	)

115 
	#WEBRTC_SPL_SAT
(
a
, 
b
, 
c
Ë(b >á ?á : b < c ? c : b)

	)

116 
	#WEBRTC_SPL_MUL_32_16
(
a
, 
b
Ë(◊Ë* (b))

	)

118 
	#WEBRTC_SPL_SUB_SAT_W32
(
a
, 
b
Ë
	`WebRtcS∂_SubS©W32
◊, b)

	)

119 
	#WEBRTC_SPL_ADD_SAT_W16
(
a
, 
b
Ë
	`WebRtcS∂_AddS©W16
◊, b)

	)

120 
	#WEBRTC_SPL_SUB_SAT_W16
(
a
, 
b
Ë
	`WebRtcS∂_SubS©W16
◊, b)

	)

123 
	#WEBRTC_SPL_IS_NEG
(
a
Ë(◊Ë& 0x80000000)

	)

126 
	#WEBRTC_SPL_SHIFT_W16
(
x
, 
c
) \

127 (((
c
Ë>0Ë? ((
x
Ë<< (c)Ë: ((xË>> (-(c))))

	)

128 
	#WEBRTC_SPL_SHIFT_W32
(
x
, 
c
) \

129 (((
c
Ë>0Ë? ((
x
Ë<< (c)Ë: ((xË>> (-(c))))

	)

133 
	#WEBRTC_SPL_RSHIFT_W16
(
x
, 
c
Ë((xË>> (c))

	)

134 
	#WEBRTC_SPL_LSHIFT_W16
(
x
, 
c
Ë((xË<< (c))

	)

135 
	#WEBRTC_SPL_RSHIFT_W32
(
x
, 
c
Ë((xË>> (c))

	)

136 
	#WEBRTC_SPL_LSHIFT_W32
(
x
, 
c
Ë((xË<< (c))

	)

138 
	#WEBRTC_SPL_RSHIFT_U16
(
x
, 
c
Ë((
uöt16_t
)(xË>> (c))

	)

139 
	#WEBRTC_SPL_LSHIFT_U16
(
x
, 
c
Ë((
uöt16_t
)(xË<< (c))

	)

140 
	#WEBRTC_SPL_RSHIFT_U32
(
x
, 
c
Ë((
uöt32_t
)(xË>> (c))

	)

141 
	#WEBRTC_SPL_LSHIFT_U32
(
x
, 
c
Ë((
uöt32_t
)(xË<< (c))

	)

143 
	#WEBRTC_SPL_VNEW
(
t
, 
n
Ë— *Ë
	`mÆloc
 ( (tË* (n))

	)

144 
	#WEBRTC_SPL_FREE
 
‰ì


	)

146 
	#WEBRTC_SPL_RAND
(
a
) \

147 ((
öt16_t
)(
	`WEBRTC_SPL_MUL_16_16_RSFT
((
a
), 18816, 7Ë& 0x00007fff))

	)

149 #ifde‡
__˝lu•lus


153 
	#WEBRTC_SPL_MEMCPY_W8
(
v1
, 
v2
, 
Àngth
) \

154 
	`mem˝y
(
v1
, 
v2
, (
Àngth
Ë* ())

	)

155 
	#WEBRTC_SPL_MEMCPY_W16
(
v1
, 
v2
, 
Àngth
) \

156 
	`mem˝y
(
v1
, 
v2
, (
Àngth
Ë* (
öt16_t
))

	)

158 
	#WEBRTC_SPL_MEMMOVE_W16
(
v1
, 
v2
, 
Àngth
) \

159 
	`memmove
(
v1
, 
v2
, (
Àngth
Ë* (
öt16_t
))

	)

162 
	~"•l_öl.h
"

172 
WebRtcS∂_Inô
();

175 
öt16_t
 
WebRtcS∂_gë_vîsi⁄
(* 
vîsi⁄
, i¡16_à
Àngth_ö_byãs
);

177 
WebRtcS∂_GëSˇlögSqu¨e
(
öt16_t
* 
ö_ve˘‹
,

178 
ö_ve˘‹_Àngth
,

179 
times
);

183 
WebRtcS∂_MemSëW16
(
öt16_t
* 
ve˘‹
,

184 
öt16_t
 
£t_vÆue
,

185 
ve˘‹_Àngth
);

186 
WebRtcS∂_MemSëW32
(
öt32_t
* 
ve˘‹
,

187 
öt32_t
 
£t_vÆue
,

188 
ve˘‹_Àngth
);

189 
WebRtcS∂_MemCpyRevî£dOrdî
(
öt16_t
* 
out_ve˘‹
,

190 
öt16_t
* 
ö_ve˘‹
,

191 
ve˘‹_Àngth
);

192 
öt16_t
 
WebRtcS∂_C›yFromEndW16
(c⁄° i¡16_t* 
ö_ve˘‹
,

193 
öt16_t
 
ö_ve˘‹_Àngth
,

194 
öt16_t
 
ßm∂es
,

195 
öt16_t
* 
out_ve˘‹
);

196 
öt16_t
 
WebRtcS∂_ZîosAºayW16
(öt16_t* 
ve˘‹
,

197 
öt16_t
 
ve˘‹_Àngth
);

198 
öt16_t
 
WebRtcS∂_ZîosAºayW32
(
öt32_t
* 
ve˘‹
,

199 
öt16_t
 
ve˘‹_Àngth
);

200 
öt16_t
 
WebRtcS∂_O√sAºayW16
(öt16_t* 
ve˘‹
,

201 
öt16_t
 
ve˘‹_Àngth
);

202 
öt16_t
 
WebRtcS∂_O√sAºayW32
(
öt32_t
* 
ve˘‹
,

203 
öt16_t
 
ve˘‹_Àngth
);

218 
öt16_t
 (*
	tMaxAbsVÆueW16
)(c⁄° 
	töt16_t
* 
	tve˘‹
, 
	tÀngth
);

219 
MaxAbsVÆueW16
 
WebRtcS∂_MaxAbsVÆueW16
;

220 
öt16_t
 
WebRtcS∂_MaxAbsVÆueW16C
(c⁄° i¡16_t* 
ve˘‹
, 
Àngth
);

221 #i‡(
deföed
 
WEBRTC_DETECT_ARM_NEON
Ë|| (deföed 
WEBRTC_ARCH_ARM_NEON
)

222 
öt16_t
 
WebRtcS∂_MaxAbsVÆueW16Ne⁄
(c⁄° i¡16_t* 
ve˘‹
, 
Àngth
);

224 #i‡
deföed
(
MIPS32_LE
)

225 
öt16_t
 
WebRtcS∂_MaxAbsVÆueW16_mùs
(c⁄° i¡16_t* 
ve˘‹
, 
Àngth
);

236 
öt32_t
 (*
	tMaxAbsVÆueW32
)(c⁄° 
	töt32_t
* 
	tve˘‹
, 
	tÀngth
);

237 
MaxAbsVÆueW32
 
WebRtcS∂_MaxAbsVÆueW32
;

238 
öt32_t
 
WebRtcS∂_MaxAbsVÆueW32C
(c⁄° i¡32_t* 
ve˘‹
, 
Àngth
);

239 #i‡(
deföed
 
WEBRTC_DETECT_ARM_NEON
Ë|| (deföed 
WEBRTC_ARCH_ARM_NEON
)

240 
öt32_t
 
WebRtcS∂_MaxAbsVÆueW32Ne⁄
(c⁄° i¡32_t* 
ve˘‹
, 
Àngth
);

242 #i‡
deföed
(
MIPS_DSP_R1_LE
)

243 
öt32_t
 
WebRtcS∂_MaxAbsVÆueW32_mùs
(c⁄° i¡32_t* 
ve˘‹
, 
Àngth
);

256 
öt16_t
 (*
	tMaxVÆueW16
)(c⁄° 
	töt16_t
* 
	tve˘‹
, 
	tÀngth
);

257 
MaxVÆueW16
 
WebRtcS∂_MaxVÆueW16
;

258 
öt16_t
 
WebRtcS∂_MaxVÆueW16C
(c⁄° i¡16_t* 
ve˘‹
, 
Àngth
);

259 #i‡(
deföed
 
WEBRTC_DETECT_ARM_NEON
Ë|| (deföed 
WEBRTC_ARCH_ARM_NEON
)

260 
öt16_t
 
WebRtcS∂_MaxVÆueW16Ne⁄
(c⁄° i¡16_t* 
ve˘‹
, 
Àngth
);

262 #i‡
deföed
(
MIPS32_LE
)

263 
öt16_t
 
WebRtcS∂_MaxVÆueW16_mùs
(c⁄° i¡16_t* 
ve˘‹
, 
Àngth
);

276 
öt32_t
 (*
	tMaxVÆueW32
)(c⁄° 
	töt32_t
* 
	tve˘‹
, 
	tÀngth
);

277 
MaxVÆueW32
 
WebRtcS∂_MaxVÆueW32
;

278 
öt32_t
 
WebRtcS∂_MaxVÆueW32C
(c⁄° i¡32_t* 
ve˘‹
, 
Àngth
);

279 #i‡(
deföed
 
WEBRTC_DETECT_ARM_NEON
Ë|| (deföed 
WEBRTC_ARCH_ARM_NEON
)

280 
öt32_t
 
WebRtcS∂_MaxVÆueW32Ne⁄
(c⁄° i¡32_t* 
ve˘‹
, 
Àngth
);

282 #i‡
deföed
(
MIPS32_LE
)

283 
öt32_t
 
WebRtcS∂_MaxVÆueW32_mùs
(c⁄° i¡32_t* 
ve˘‹
, 
Àngth
);

296 
öt16_t
 (*
	tMöVÆueW16
)(c⁄° 
	töt16_t
* 
	tve˘‹
, 
	tÀngth
);

297 
MöVÆueW16
 
WebRtcS∂_MöVÆueW16
;

298 
öt16_t
 
WebRtcS∂_MöVÆueW16C
(c⁄° i¡16_t* 
ve˘‹
, 
Àngth
);

299 #i‡(
deföed
 
WEBRTC_DETECT_ARM_NEON
Ë|| (deföed 
WEBRTC_ARCH_ARM_NEON
)

300 
öt16_t
 
WebRtcS∂_MöVÆueW16Ne⁄
(c⁄° i¡16_t* 
ve˘‹
, 
Àngth
);

302 #i‡
deföed
(
MIPS32_LE
)

303 
öt16_t
 
WebRtcS∂_MöVÆueW16_mùs
(c⁄° i¡16_t* 
ve˘‹
, 
Àngth
);

316 
öt32_t
 (*
	tMöVÆueW32
)(c⁄° 
	töt32_t
* 
	tve˘‹
, 
	tÀngth
);

317 
MöVÆueW32
 
WebRtcS∂_MöVÆueW32
;

318 
öt32_t
 
WebRtcS∂_MöVÆueW32C
(c⁄° i¡32_t* 
ve˘‹
, 
Àngth
);

319 #i‡(
deföed
 
WEBRTC_DETECT_ARM_NEON
Ë|| (deföed 
WEBRTC_ARCH_ARM_NEON
)

320 
öt32_t
 
WebRtcS∂_MöVÆueW32Ne⁄
(c⁄° i¡32_t* 
ve˘‹
, 
Àngth
);

322 #i‡
deföed
(
MIPS32_LE
)

323 
öt32_t
 
WebRtcS∂_MöVÆueW32_mùs
(c⁄° i¡32_t* 
ve˘‹
, 
Àngth
);

337 
WebRtcS∂_MaxAbsIndexW16
(c⁄° 
öt16_t
* 
ve˘‹
, 
Àngth
);

348 
WebRtcS∂_MaxIndexW16
(c⁄° 
öt16_t
* 
ve˘‹
, 
Àngth
);

359 
WebRtcS∂_MaxIndexW32
(c⁄° 
öt32_t
* 
ve˘‹
, 
Àngth
);

370 
WebRtcS∂_MöIndexW16
(c⁄° 
öt16_t
* 
ve˘‹
, 
Àngth
);

381 
WebRtcS∂_MöIndexW32
(c⁄° 
öt32_t
* 
ve˘‹
, 
Àngth
);

388 
WebRtcS∂_Ve˘‹BôShi·W16
(
öt16_t
* 
out_ve˘‹
,

389 
öt16_t
 
ve˘‹_Àngth
,

390 c⁄° 
öt16_t
* 
ö_ve˘‹
,

391 
öt16_t
 
right_shi·s
);

392 
WebRtcS∂_Ve˘‹BôShi·W32
(
öt32_t
* 
out_ve˘‹
,

393 
öt16_t
 
ve˘‹_Àngth
,

394 c⁄° 
öt32_t
* 
ö_ve˘‹
,

395 
öt16_t
 
right_shi·s
);

396 
WebRtcS∂_Ve˘‹BôShi·W32ToW16
(
öt16_t
* 
out_ve˘‹
,

397 
ve˘‹_Àngth
,

398 c⁄° 
öt32_t
* 
ö_ve˘‹
,

399 
right_shi·s
);

400 
WebRtcS∂_SˇÀVe˘‹
(c⁄° 
öt16_t
* 
ö_ve˘‹
,

401 
öt16_t
* 
out_ve˘‹
,

402 
öt16_t
 
gaö
,

403 
öt16_t
 
ve˘‹_Àngth
,

404 
öt16_t
 
right_shi·s
);

405 
WebRtcS∂_SˇÀVe˘‹WôhS©
(c⁄° 
öt16_t
* 
ö_ve˘‹
,

406 
öt16_t
* 
out_ve˘‹
,

407 
öt16_t
 
gaö
,

408 
öt16_t
 
ve˘‹_Àngth
,

409 
öt16_t
 
right_shi·s
);

410 
WebRtcS∂_SˇÀAndAddVe˘‹s
(c⁄° 
öt16_t
* 
ö_ve˘‹1
,

411 
öt16_t
 
gaö1
, 
right_shi·s1
,

412 c⁄° 
öt16_t
* 
ö_ve˘‹2
,

413 
öt16_t
 
gaö2
, 
right_shi·s2
,

414 
öt16_t
* 
out_ve˘‹
,

415 
ve˘‹_Àngth
);

435 (*
	gSˇÀAndAddVe˘‹sWôhRound
)(c⁄° 
	töt16_t
* 
	tö_ve˘‹1
,

436 
	töt16_t
 
	tö_ve˘‹1_sˇÀ
,

437 c⁄° 
	töt16_t
* 
	tö_ve˘‹2
,

438 
	töt16_t
 
	tö_ve˘‹2_sˇÀ
,

439 
	tright_shi·s
,

440 
	töt16_t
* 
	tout_ve˘‹
,

441 
	tÀngth
);

442 
SˇÀAndAddVe˘‹sWôhRound
 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRound
;

443 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRoundC
(c⁄° 
öt16_t
* 
ö_ve˘‹1
,

444 
öt16_t
 
ö_ve˘‹1_sˇÀ
,

445 c⁄° 
öt16_t
* 
ö_ve˘‹2
,

446 
öt16_t
 
ö_ve˘‹2_sˇÀ
,

447 
right_shi·s
,

448 
öt16_t
* 
out_ve˘‹
,

449 
Àngth
);

450 #i‡(
deföed
 
WEBRTC_DETECT_ARM_NEON
Ë|| (deföed 
WEBRTC_ARCH_ARM_NEON
)

451 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRoundNe⁄
(c⁄° 
öt16_t
* 
ö_ve˘‹1
,

452 
öt16_t
 
ö_ve˘‹1_sˇÀ
,

453 c⁄° 
öt16_t
* 
ö_ve˘‹2
,

454 
öt16_t
 
ö_ve˘‹2_sˇÀ
,

455 
right_shi·s
,

456 
öt16_t
* 
out_ve˘‹
,

457 
Àngth
);

463 
WebRtcS∂_Revî£OrdîMu…AºayEÀmíts
(
öt16_t
* 
out_ve˘‹
,

464 c⁄° 
öt16_t
* 
ö_ve˘‹
,

465 c⁄° 
öt16_t
* 
wödow
,

466 
öt16_t
 
ve˘‹_Àngth
,

467 
öt16_t
 
right_shi·s
);

468 
WebRtcS∂_EÀmítwi£Ve˘‹Mu…
(
öt16_t
* 
out_ve˘‹
,

469 c⁄° 
öt16_t
* 
ö_ve˘‹
,

470 c⁄° 
öt16_t
* 
wödow
,

471 
öt16_t
 
ve˘‹_Àngth
,

472 
öt16_t
 
right_shi·s
);

473 
WebRtcS∂_AddVe˘‹sAndShi·
(
öt16_t
* 
out_ve˘‹
,

474 c⁄° 
öt16_t
* 
ö_ve˘‹1
,

475 c⁄° 
öt16_t
* 
ö_ve˘‹2
,

476 
öt16_t
 
ve˘‹_Àngth
,

477 
öt16_t
 
right_shi·s
);

478 
WebRtcS∂_AddAfföeVe˘‹ToVe˘‹
(
öt16_t
* 
out_ve˘‹
,

479 
öt16_t
* 
ö_ve˘‹
,

480 
öt16_t
 
gaö
,

481 
öt32_t
 
add_c⁄°™t
,

482 
öt16_t
 
right_shi·s
,

483 
ve˘‹_Àngth
);

484 
WebRtcS∂_AfföeTønsf‹mVe˘‹
(
öt16_t
* 
out_ve˘‹
,

485 
öt16_t
* 
ö_ve˘‹
,

486 
öt16_t
 
gaö
,

487 
öt32_t
 
add_c⁄°™t
,

488 
öt16_t
 
right_shi·s
,

489 
ve˘‹_Àngth
);

513 
WebRtcS∂_AutoC‹ªœti⁄
(c⁄° 
öt16_t
* 
ö_ve˘‹
,

514 
ö_ve˘‹_Àngth
,

515 
‹dî
,

516 
öt32_t
* 
ªsu…
,

517 * 
sˇÀ
);

533 
öt16_t
 
WebRtcS∂_Levös⁄Durbö
(
öt32_t
* 
auto_c‹r
,

534 
öt16_t
* 
Õc_c€f
,

535 
öt16_t
* 
ªÊ_c€f
,

536 
öt16_t
 
‹dî
);

552 
WebRtcS∂_ReÊC€fToLpc
(c⁄° 
öt16_t
* 
ªÊ_c€f
,

553 
u£_‹dî
,

554 
öt16_t
* 
Õc_c€f
);

567 
WebRtcS∂_LpcToReÊC€f
(
öt16_t
* 
Õc_c€f
,

568 
u£_‹dî
,

569 
öt16_t
* 
ªÊ_c€f
);

579 
WebRtcS∂_AutoC‹rToReÊC€f
(c⁄° 
öt32_t
* 
auto_c‹r
,

580 
u£_‹dî
,

581 
öt16_t
* 
ªÊ_c€f
);

606 (*
	gCrossC‹ªœti⁄
)(
	töt32_t
* 
	t¸oss_c‹ªœti⁄
,

607 c⁄° 
	töt16_t
* 
	t£q1
,

608 c⁄° 
	töt16_t
* 
	t£q2
,

609 
	töt16_t
 
	tdim_£q
,

610 
	töt16_t
 
	tdim_¸oss_c‹ªœti⁄
,

611 
	töt16_t
 
	tright_shi·s
,

612 
	töt16_t
 
	t°ï_£q2
);

613 
CrossC‹ªœti⁄
 
WebRtcS∂_CrossC‹ªœti⁄
;

614 
WebRtcS∂_CrossC‹ªœti⁄C
(
öt32_t
* 
¸oss_c‹ªœti⁄
,

615 c⁄° 
öt16_t
* 
£q1
,

616 c⁄° 
öt16_t
* 
£q2
,

617 
öt16_t
 
dim_£q
,

618 
öt16_t
 
dim_¸oss_c‹ªœti⁄
,

619 
öt16_t
 
right_shi·s
,

620 
öt16_t
 
°ï_£q2
);

621 #i‡(
deföed
 
WEBRTC_DETECT_ARM_NEON
Ë|| (deföed 
WEBRTC_ARCH_ARM_NEON
)

622 
WebRtcS∂_CrossC‹ªœti⁄Ne⁄
(
öt32_t
* 
¸oss_c‹ªœti⁄
,

623 c⁄° 
öt16_t
* 
£q1
,

624 c⁄° 
öt16_t
* 
£q2
,

625 
öt16_t
 
dim_£q
,

626 
öt16_t
 
dim_¸oss_c‹ªœti⁄
,

627 
öt16_t
 
right_shi·s
,

628 
öt16_t
 
°ï_£q2
);

639 
WebRtcS∂_GëH™nögWödow
(
öt16_t
* 
wödow
, i¡16_à
size
);

650 
WebRtcS∂_SqπOfO√MöusXSqu¨ed
(
öt16_t
* 
ö_ve˘‹
,

651 
ve˘‹_Àngth
,

652 
öt16_t
* 
out_ve˘‹
);

657 
uöt32_t
 
WebRtcS∂_In¸ó£Sìd
(uöt32_t* 
£ed
);

658 
öt16_t
 
WebRtcS∂_R™dU
(
uöt32_t
* 
£ed
);

659 
öt16_t
 
WebRtcS∂_R™dN
(
uöt32_t
* 
£ed
);

660 
öt16_t
 
WebRtcS∂_R™dUAºay
(öt16_t* 
ve˘‹
,

661 
öt16_t
 
ve˘‹_Àngth
,

662 
uöt32_t
* 
£ed
);

666 
öt32_t
 
WebRtcS∂_Sqπ
(öt32_à
vÆue
);

667 
öt32_t
 
WebRtcS∂_SqπFlo‹
(öt32_à
vÆue
);

671 
uöt32_t
 
WebRtcS∂_DivU32U16
(uöt32_à
num
, 
uöt16_t
 
dí
);

672 
öt32_t
 
WebRtcS∂_DivW32W16
(öt32_à
num
, 
öt16_t
 
dí
);

673 
öt16_t
 
WebRtcS∂_DivW32W16ResW16
(
öt32_t
 
num
, i¡16_à
dí
);

674 
öt32_t
 
WebRtcS∂_DivResu…InQ31
(öt32_à
num
, i¡32_à
dí
);

675 
öt32_t
 
WebRtcS∂_DivW32HiLow
(öt32_à
num
, 
öt16_t
 
dí_hi
, i¡16_à
dí_low
);

678 
öt32_t
 
WebRtcS∂_E√rgy
(
öt16_t
* 
ve˘‹
, 
ve˘‹_Àngth
, * 
sˇÀ_Á˘‹
);

691 
öt32_t
 
WebRtcS∂_DŸProdu˘WôhSˇÀ
(c⁄° 
öt16_t
* 
ve˘‹1
,

692 c⁄° 
öt16_t
* 
ve˘‹2
,

693 
Àngth
,

694 
sˇlög
);

697 
WebRtcS∂_FûãrAR
(c⁄° 
öt16_t
* 
¨_c€f
,

698 
¨_c€f_Àngth
,

699 c⁄° 
öt16_t
* 
ö_ve˘‹
,

700 
ö_ve˘‹_Àngth
,

701 
öt16_t
* 
fûãr_°©e
,

702 
fûãr_°©e_Àngth
,

703 
öt16_t
* 
fûãr_°©e_low
,

704 
fûãr_°©e_low_Àngth
,

705 
öt16_t
* 
out_ve˘‹
,

706 
öt16_t
* 
out_ve˘‹_low
,

707 
out_ve˘‹_low_Àngth
);

709 
WebRtcS∂_FûãrMAFa°Q12
(
öt16_t
* 
ö_ve˘‹
,

710 
öt16_t
* 
out_ve˘‹
,

711 
öt16_t
* 
ma_c€f
,

712 
öt16_t
 
ma_c€f_Àngth
,

713 
öt16_t
 
ve˘‹_Àngth
);

725 
WebRtcS∂_FûãrARFa°Q12
(c⁄° 
öt16_t
* 
d©a_ö
,

726 
öt16_t
* 
d©a_out
,

727 c⁄° 
öt16_t
* 
__ª°ri˘
 
c€fficõ¡s
,

728 
c€fficõ¡s_Àngth
,

729 
d©a_Àngth
);

747 (*
	gDownßm∂eFa°
)(c⁄° 
	töt16_t
* 
	td©a_ö
,

748 
	td©a_ö_Àngth
,

749 
	töt16_t
* 
	td©a_out
,

750 
	td©a_out_Àngth
,

751 c⁄° 
	töt16_t
* 
	t__ª°ri˘
 
	tc€fficõ¡s
,

752 
	tc€fficõ¡s_Àngth
,

753 
	tÁ˘‹
,

754 
	tdñay
);

755 
Downßm∂eFa°
 
WebRtcS∂_Downßm∂eFa°
;

756 
WebRtcS∂_Downßm∂eFa°C
(c⁄° 
öt16_t
* 
d©a_ö
,

757 
d©a_ö_Àngth
,

758 
öt16_t
* 
d©a_out
,

759 
d©a_out_Àngth
,

760 c⁄° 
öt16_t
* 
__ª°ri˘
 
c€fficõ¡s
,

761 
c€fficõ¡s_Àngth
,

762 
Á˘‹
,

763 
dñay
);

764 #i‡(
deföed
 
WEBRTC_DETECT_ARM_NEON
Ë|| (deföed 
WEBRTC_ARCH_ARM_NEON
)

765 
WebRtcS∂_Downßm∂eFa°Ne⁄
(c⁄° 
öt16_t
* 
d©a_ö
,

766 
d©a_ö_Àngth
,

767 
öt16_t
* 
d©a_out
,

768 
d©a_out_Àngth
,

769 c⁄° 
öt16_t
* 
__ª°ri˘
 
c€fficõ¡s
,

770 
c€fficõ¡s_Àngth
,

771 
Á˘‹
,

772 
dñay
);

774 #i‡
deföed
(
MIPS32_LE
)

775 
WebRtcS∂_Downßm∂eFa°_mùs
(c⁄° 
öt16_t
* 
d©a_ö
,

776 
d©a_ö_Àngth
,

777 
öt16_t
* 
d©a_out
,

778 
d©a_out_Àngth
,

779 c⁄° 
öt16_t
* 
__ª°ri˘
 
c€fficõ¡s
,

780 
c€fficõ¡s_Àngth
,

781 
Á˘‹
,

782 
dñay
);

789 
WebRtcS∂_Com∂exFFT
(
öt16_t
 
ve˘‹
[], 
°ages
, 
mode
);

790 
WebRtcS∂_Com∂exIFFT
(
öt16_t
 
ve˘‹
[], 
°ages
, 
mode
);

806 
WebRtcS∂_Com∂exBôRevî£
(
öt16_t
* 
__ª°ri˘
 
com∂ex_d©a
, 
°ages
);

829 
öt32_t
 
	gS_22_44
[8];

830 
öt32_t
 
	gS_44_32
[8];

831 
öt32_t
 
	gS_32_16
[8];

832 } 
	tWebRtcS∂_Sèã22khzTo16khz
;

834 
WebRtcS∂_Reßm∂e22khzTo16khz
(c⁄° 
öt16_t
* 
ö
,

835 
öt16_t
* 
out
,

836 
WebRtcS∂_Sèã22khzTo16khz
* 
°©e
,

837 
öt32_t
* 
tmpmem
);

839 
WebRtcS∂_Re£tReßm∂e22khzTo16khz
(
WebRtcS∂_Sèã22khzTo16khz
* 
°©e
);

843 
öt32_t
 
	gS_16_32
[8];

844 
öt32_t
 
	gS_32_22
[8];

845 } 
	tWebRtcS∂_Sèã16khzTo22khz
;

847 
WebRtcS∂_Reßm∂e16khzTo22khz
(c⁄° 
öt16_t
* 
ö
,

848 
öt16_t
* 
out
,

849 
WebRtcS∂_Sèã16khzTo22khz
* 
°©e
,

850 
öt32_t
* 
tmpmem
);

852 
WebRtcS∂_Re£tReßm∂e16khzTo22khz
(
WebRtcS∂_Sèã16khzTo22khz
* 
°©e
);

856 
öt32_t
 
	gS_22_22
[16];

857 
öt32_t
 
	gS_22_16
[8];

858 
öt32_t
 
	gS_16_8
[8];

859 } 
	tWebRtcS∂_Sèã22khzTo8khz
;

861 
WebRtcS∂_Reßm∂e22khzTo8khz
(c⁄° 
öt16_t
* 
ö
, i¡16_t* 
out
,

862 
WebRtcS∂_Sèã22khzTo8khz
* 
°©e
,

863 
öt32_t
* 
tmpmem
);

865 
WebRtcS∂_Re£tReßm∂e22khzTo8khz
(
WebRtcS∂_Sèã22khzTo8khz
* 
°©e
);

869 
öt32_t
 
	gS_8_16
[8];

870 
öt32_t
 
	gS_16_11
[8];

871 
öt32_t
 
	gS_11_22
[8];

872 } 
	tWebRtcS∂_Sèã8khzTo22khz
;

874 
WebRtcS∂_Reßm∂e8khzTo22khz
(c⁄° 
öt16_t
* 
ö
, i¡16_t* 
out
,

875 
WebRtcS∂_Sèã8khzTo22khz
* 
°©e
,

876 
öt32_t
* 
tmpmem
);

878 
WebRtcS∂_Re£tReßm∂e8khzTo22khz
(
WebRtcS∂_Sèã8khzTo22khz
* 
°©e
);

891 
WebRtcS∂_Reßm∂e48khzTo32khz
(c⁄° 
öt32_t
* 
In
, i¡32_t* 
Out
,

892 
öt32_t
 
K
);

894 
WebRtcS∂_Reßm∂e32khzTo24khz
(c⁄° 
öt32_t
* 
In
, i¡32_t* 
Out
,

895 
öt32_t
 
K
);

897 
WebRtcS∂_Reßm∂e44khzTo32khz
(c⁄° 
öt32_t
* 
In
, i¡32_t* 
Out
,

898 
öt32_t
 
K
);

912 
öt32_t
 
	gS_48_48
[16];

913 
öt32_t
 
	gS_48_32
[8];

914 
öt32_t
 
	gS_32_16
[8];

915 } 
	tWebRtcS∂_Sèã48khzTo16khz
;

917 
WebRtcS∂_Reßm∂e48khzTo16khz
(c⁄° 
öt16_t
* 
ö
, i¡16_t* 
out
,

918 
WebRtcS∂_Sèã48khzTo16khz
* 
°©e
,

919 
öt32_t
* 
tmpmem
);

921 
WebRtcS∂_Re£tReßm∂e48khzTo16khz
(
WebRtcS∂_Sèã48khzTo16khz
* 
°©e
);

924 
öt32_t
 
	gS_16_32
[8];

925 
öt32_t
 
	gS_32_24
[8];

926 
öt32_t
 
	gS_24_48
[8];

927 } 
	tWebRtcS∂_Sèã16khzTo48khz
;

929 
WebRtcS∂_Reßm∂e16khzTo48khz
(c⁄° 
öt16_t
* 
ö
, i¡16_t* 
out
,

930 
WebRtcS∂_Sèã16khzTo48khz
* 
°©e
,

931 
öt32_t
* 
tmpmem
);

933 
WebRtcS∂_Re£tReßm∂e16khzTo48khz
(
WebRtcS∂_Sèã16khzTo48khz
* 
°©e
);

936 
öt32_t
 
	gS_48_24
[8];

937 
öt32_t
 
	gS_24_24
[16];

938 
öt32_t
 
	gS_24_16
[8];

939 
öt32_t
 
	gS_16_8
[8];

940 } 
	tWebRtcS∂_Sèã48khzTo8khz
;

942 
WebRtcS∂_Reßm∂e48khzTo8khz
(c⁄° 
öt16_t
* 
ö
, i¡16_t* 
out
,

943 
WebRtcS∂_Sèã48khzTo8khz
* 
°©e
,

944 
öt32_t
* 
tmpmem
);

946 
WebRtcS∂_Re£tReßm∂e48khzTo8khz
(
WebRtcS∂_Sèã48khzTo8khz
* 
°©e
);

949 
öt32_t
 
	gS_8_16
[8];

950 
öt32_t
 
	gS_16_12
[8];

951 
öt32_t
 
	gS_12_24
[8];

952 
öt32_t
 
	gS_24_48
[8];

953 } 
	tWebRtcS∂_Sèã8khzTo48khz
;

955 
WebRtcS∂_Reßm∂e8khzTo48khz
(c⁄° 
öt16_t
* 
ö
, i¡16_t* 
out
,

956 
WebRtcS∂_Sèã8khzTo48khz
* 
°©e
,

957 
öt32_t
* 
tmpmem
);

959 
WebRtcS∂_Re£tReßm∂e8khzTo48khz
(
WebRtcS∂_Sèã8khzTo48khz
* 
°©e
);

968 
WebRtcS∂_Downßm∂eBy2
(c⁄° 
öt16_t
* 
ö
, i¡16_à
Àn
,

969 
öt16_t
* 
out
, 
öt32_t
* 
fûtSèã
);

971 
WebRtcS∂_Upßm∂eBy2
(c⁄° 
öt16_t
* 
ö
, i¡16_à
Àn
,

972 
öt16_t
* 
out
, 
öt32_t
* 
fûtSèã
);

977 
WebRtcS∂_A«lysisQMF
(c⁄° 
öt16_t
* 
ö_d©a
,

978 
öt16_t
* 
low_b™d
,

979 
öt16_t
* 
high_b™d
,

980 
öt32_t
* 
fûãr_°©e1
,

981 
öt32_t
* 
fûãr_°©e2
);

982 
WebRtcS∂_Sy¡hesisQMF
(c⁄° 
öt16_t
* 
low_b™d
,

983 c⁄° 
öt16_t
* 
high_b™d
,

984 
öt16_t
* 
out_d©a
,

985 
öt32_t
* 
fûãr_°©e1
,

986 
öt32_t
* 
fûãr_°©e2
);

988 #ifde‡
__˝lu•lus


	@spl_init.c

17 
	~"ªÆ_f·.h
"

18 
	~"sig«l_¥o˚ssög_libøry.h
"

19 
	~"˝u_„©uªs_wøµî.h
"

22 
MaxAbsVÆueW16
 
	gWebRtcS∂_MaxAbsVÆueW16
;

23 
MaxAbsVÆueW32
 
	gWebRtcS∂_MaxAbsVÆueW32
;

24 
MaxVÆueW16
 
	gWebRtcS∂_MaxVÆueW16
;

25 
MaxVÆueW32
 
	gWebRtcS∂_MaxVÆueW32
;

26 
MöVÆueW16
 
	gWebRtcS∂_MöVÆueW16
;

27 
MöVÆueW32
 
	gWebRtcS∂_MöVÆueW32
;

28 
CrossC‹ªœti⁄
 
	gWebRtcS∂_CrossC‹ªœti⁄
;

29 
Downßm∂eFa°
 
	gWebRtcS∂_Downßm∂eFa°
;

30 
SˇÀAndAddVe˘‹sWôhRound
 
	gWebRtcS∂_SˇÀAndAddVe˘‹sWôhRound
;

31 
RólF‹w¨dFFT
 
	gWebRtcS∂_RólF‹w¨dFFT
;

32 
RólInvî£FFT
 
	gWebRtcS∂_RólInvî£FFT
;

34 #i‡(
deföed
(
WEBRTC_DETECT_ARM_NEON
Ë|| !deföed(
WEBRTC_ARCH_ARM_NEON
)) && \

35 !
	$deföed
(
MIPS32_LE
)

37 
	$InôPoöãrsToC
() {

38 
WebRtcS∂_MaxAbsVÆueW16
 = 
WebRtcS∂_MaxAbsVÆueW16C
;

39 
WebRtcS∂_MaxAbsVÆueW32
 = 
WebRtcS∂_MaxAbsVÆueW32C
;

40 
WebRtcS∂_MaxVÆueW16
 = 
WebRtcS∂_MaxVÆueW16C
;

41 
WebRtcS∂_MaxVÆueW32
 = 
WebRtcS∂_MaxVÆueW32C
;

42 
WebRtcS∂_MöVÆueW16
 = 
WebRtcS∂_MöVÆueW16C
;

43 
WebRtcS∂_MöVÆueW32
 = 
WebRtcS∂_MöVÆueW32C
;

44 
WebRtcS∂_CrossC‹ªœti⁄
 = 
WebRtcS∂_CrossC‹ªœti⁄C
;

45 
WebRtcS∂_Downßm∂eFa°
 = 
WebRtcS∂_Downßm∂eFa°C
;

46 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRound
 =

47 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRoundC
;

48 
WebRtcS∂_RólF‹w¨dFFT
 = 
WebRtcS∂_RólF‹w¨dFFTC
;

49 
WebRtcS∂_RólInvî£FFT
 = 
WebRtcS∂_RólInvî£FFTC
;

50 
	}
}

53 #i‡
deföed
(
WEBRTC_DETECT_ARM_NEON
Ë|| deföed(
WEBRTC_ARCH_ARM_NEON
)

55 
	$InôPoöãrsToNe⁄
() {

56 
WebRtcS∂_MaxAbsVÆueW16
 = 
WebRtcS∂_MaxAbsVÆueW16Ne⁄
;

57 
WebRtcS∂_MaxAbsVÆueW32
 = 
WebRtcS∂_MaxAbsVÆueW32Ne⁄
;

58 
WebRtcS∂_MaxVÆueW16
 = 
WebRtcS∂_MaxVÆueW16Ne⁄
;

59 
WebRtcS∂_MaxVÆueW32
 = 
WebRtcS∂_MaxVÆueW32Ne⁄
;

60 
WebRtcS∂_MöVÆueW16
 = 
WebRtcS∂_MöVÆueW16Ne⁄
;

61 
WebRtcS∂_MöVÆueW32
 = 
WebRtcS∂_MöVÆueW32Ne⁄
;

62 
WebRtcS∂_CrossC‹ªœti⁄
 = 
WebRtcS∂_CrossC‹ªœti⁄Ne⁄
;

63 
WebRtcS∂_Downßm∂eFa°
 = 
WebRtcS∂_Downßm∂eFa°Ne⁄
;

64 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRound
 =

65 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRoundNe⁄
;

66 
WebRtcS∂_RólF‹w¨dFFT
 = 
WebRtcS∂_RólF‹w¨dFFTNe⁄
;

67 
WebRtcS∂_RólInvî£FFT
 = 
WebRtcS∂_RólInvî£FFTNe⁄
;

68 
	}
}

71 #i‡
deföed
(
MIPS32_LE
)

73 
	$InôPoöãrsToMIPS
() {

74 
WebRtcS∂_MaxAbsVÆueW16
 = 
WebRtcS∂_MaxAbsVÆueW16_mùs
;

75 
WebRtcS∂_MaxVÆueW16
 = 
WebRtcS∂_MaxVÆueW16_mùs
;

76 
WebRtcS∂_MaxVÆueW32
 = 
WebRtcS∂_MaxVÆueW32_mùs
;

77 
WebRtcS∂_MöVÆueW16
 = 
WebRtcS∂_MöVÆueW16_mùs
;

78 
WebRtcS∂_MöVÆueW32
 = 
WebRtcS∂_MöVÆueW32_mùs
;

79 
WebRtcS∂_CrossC‹ªœti⁄
 = 
WebRtcS∂_CrossC‹ªœti⁄C
;

80 
WebRtcS∂_Downßm∂eFa°
 = 
WebRtcS∂_Downßm∂eFa°_mùs
;

81 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRound
 =

82 
WebRtcS∂_SˇÀAndAddVe˘‹sWôhRoundC
;

83 
WebRtcS∂_RólF‹w¨dFFT
 = 
WebRtcS∂_RólF‹w¨dFFTC
;

84 
WebRtcS∂_RólInvî£FFT
 = 
WebRtcS∂_RólInvî£FFTC
;

85 #i‡
	`deföed
(
MIPS_DSP_R1_LE
)

86 
WebRtcS∂_MaxAbsVÆueW32
 = 
WebRtcS∂_MaxAbsVÆueW32_mùs
;

88 
WebRtcS∂_MaxAbsVÆueW32
 = 
WebRtcS∂_MaxAbsVÆueW32C
;

90 
	}
}

93 
	$InôFun˘i⁄Poöãrs
() {

94 #i‡
	`deföed
(
WEBRTC_DETECT_ARM_NEON
)

95 i‡((
	`WebRtc_GëCPUFótuªsARM
(Ë& 
kCPUFótuªNEON
) != 0) {

96 
	`InôPoöãrsToNe⁄
();

98 
	`InôPoöãrsToC
();

100 #ñi‡
	`deföed
(
WEBRTC_ARCH_ARM_NEON
)

101 
	`InôPoöãrsToNe⁄
();

102 #ñi‡
	`deföed
(
MIPS32_LE
)

103 
	`InôPoöãrsToMIPS
();

105 
	`InôPoöãrsToC
();

107 
	}
}

109 #i‡
deföed
(
WEBRTC_POSIX
)

110 
	~<±hªad.h
>

112 
⁄˚
((*
func
)()) {

113 
±hªad_⁄˚_t
 
lock
 = 
PTHREAD_ONCE_INIT
;

114 
	`±hªad_⁄˚
(&
lock
, 
func
);

115 
	}
}

117 #ñi‡
deföed
(
_WIN32
)

118 
	~<wödows.h
>

120 
⁄˚
((*
func
)()) {

128 
CRITICAL_SECTION
 
lock
 = {(*)((
size_t
)-1), -1, 0, 0, 0, 0};

129 
d⁄e
 = 0;

131 
	`E¡îCrôiˇlSe˘i⁄
(&
lock
);

132 i‡(!
d⁄e
) {

133 
	`func
();

134 
d⁄e
 = 1;

136 
	`LóveCrôiˇlSe˘i⁄
(&
lock
);

137 
	}
}

145 
	$WebRtcS∂_Inô
() {

146 
	`⁄˚
(
InôFun˘i⁄Poöãrs
);

147 
	}
}

	@spl_inl.h

15 #i‚de‡
WEBRTC_SPL_SPL_INL_H_


16 
	#WEBRTC_SPL_SPL_INL_H_


	)

18 #ifde‡
WEBRTC_ARCH_ARM_V7


19 
	~"webπc/comm⁄_audio/sig«l_¥o˚ssög/ö˛ude/•l_öl_¨mv7.h
"

22 
__ölöe
 
öt16_t
 
	$WebRtcS∂_S©W32ToW16
(
öt32_t
 
vÆue32
) {

23 
öt16_t
 
out16
 = (öt16_tË
vÆue32
;

25 i‡(
vÆue32
 > 32767)

26 
out16
 = 32767;

27 i‡(
vÆue32
 < -32768)

28 
out16
 = -32768;

30  
out16
;

31 
	}
}

33 
__ölöe
 
öt16_t
 
	$WebRtcS∂_AddS©W16
(
öt16_t
 
a
, i¡16_à
b
) {

34  
	`WebRtcS∂_S©W32ToW16
((
öt32_t
Ë
a
 + (öt32_tË
b
);

35 
	}
}

37 
__ölöe
 
öt16_t
 
	$WebRtcS∂_SubS©W16
(
öt16_t
 
v¨1
, i¡16_à
v¨2
) {

38  
	`WebRtcS∂_S©W32ToW16
((
öt32_t
Ë
v¨1
 - (öt32_tË
v¨2
);

39 
	}
}

41 
__ölöe
 
öt16_t
 
	$WebRtcS∂_GëSizeInBôs
(
uöt32_t
 
n
) {

42 
bôs
;

44 i‡(0xFFFF0000 & 
n
) {

45 
bôs
 = 16;

47 
bôs
 = 0;

49 i‡(0x0000FF00 & (
n
 >> 
bôs
)) bits += 8;

50 i‡(0x000000F0 & (
n
 >> 
bôs
)) bits += 4;

51 i‡(0x0000000C & (
n
 >> 
bôs
)) bits += 2;

52 i‡(0x00000002 & (
n
 >> 
bôs
)) bits += 1;

53 i‡(0x00000001 & (
n
 >> 
bôs
)) bits += 1;

55  
bôs
;

56 
	}
}

58 
__ölöe
 
	$WebRtcS∂_N‹mW32
(
öt32_t
 
a
) {

59 
zîos
;

61 i‡(
a
 == 0) {

64 i‡(
a
 < 0) {

65 
a
 = ~a;

68 i‡(!(0xFFFF8000 & 
a
)) {

69 
zîos
 = 16;

71 
zîos
 = 0;

73 i‡(!(0xFF800000 & (
a
 << 
zîos
))) zeros += 8;

74 i‡(!(0xF8000000 & (
a
 << 
zîos
))) zeros += 4;

75 i‡(!(0xE0000000 & (
a
 << 
zîos
))) zeros += 2;

76 i‡(!(0xC0000000 & (
a
 << 
zîos
))) zeros += 1;

78  
zîos
;

79 
	}
}

81 
__ölöe
 
	$WebRtcS∂_N‹mU32
(
uöt32_t
 
a
) {

82 
zîos
;

84 i‡(
a
 == 0)  0;

86 i‡(!(0xFFFF0000 & 
a
)) {

87 
zîos
 = 16;

89 
zîos
 = 0;

91 i‡(!(0xFF000000 & (
a
 << 
zîos
))) zeros += 8;

92 i‡(!(0xF0000000 & (
a
 << 
zîos
))) zeros += 4;

93 i‡(!(0xC0000000 & (
a
 << 
zîos
))) zeros += 2;

94 i‡(!(0x80000000 & (
a
 << 
zîos
))) zeros += 1;

96  
zîos
;

97 
	}
}

99 
__ölöe
 
	$WebRtcS∂_N‹mW16
(
öt16_t
 
a
) {

100 
zîos
;

102 i‡(
a
 == 0) {

105 i‡(
a
 < 0) {

106 
a
 = ~a;

109 i‡(!(0xFF80 & 
a
)) {

110 
zîos
 = 8;

112 
zîos
 = 0;

114 i‡(!(0xF800 & (
a
 << 
zîos
))) zeros += 4;

115 i‡(!(0xE000 & (
a
 << 
zîos
))) zeros += 2;

116 i‡(!(0xC000 & (
a
 << 
zîos
))) zeros += 1;

118  
zîos
;

119 
	}
}

121 
__ölöe
 
öt32_t
 
	$WebRtc_MulAccumW16
(
öt16_t
 
a
, i¡16_à
b
, 
öt32_t
 
c
) {

122  (
a
 * 
b
 + 
c
);

123 
	}
}

129 
__ölöe
 
öt32_t
 
	$WebRtcS∂_AddS©W32
(
öt32_t
 
l_v¨1
, i¡32_à
l_v¨2
) {

130 
öt32_t
 
l_sum
;

133 
l_sum
 = 
l_v¨1
 + 
l_v¨2
;

135 i‡(
l_v¨1
 < 0) {

136 i‡((
l_v¨2
 < 0Ë&& (
l_sum
 >= 0)) {

137 
l_sum
 = (
öt32_t
)0x80000000;

140 i‡((
l_v¨2
 > 0Ë&& (
l_sum
 < 0)) {

141 
l_sum
 = (
öt32_t
)0x7FFFFFFF;

145  
l_sum
;

146 
	}
}

148 
__ölöe
 
öt32_t
 
	$WebRtcS∂_SubS©W32
(
öt32_t
 
l_v¨1
, i¡32_à
l_v¨2
) {

149 
öt32_t
 
l_diff
;

152 
l_diff
 = 
l_v¨1
 - 
l_v¨2
;

154 i‡(
l_v¨1
 < 0) {

155 i‡((
l_v¨2
 > 0Ë&& (
l_diff
 > 0)) {

156 
l_diff
 = (
öt32_t
)0x80000000;

159 i‡((
l_v¨2
 < 0Ë&& (
l_diff
 < 0)) {

160 
l_diff
 = (
öt32_t
)0x7FFFFFFF;

164  
l_diff
;

165 
	}
}

	@spl_sqrt_floor.c

31 
	~"sig«l_¥o˚ssög_libøry.h
"

47 
	#WEBRTC_SPL_SQRT_ITER
(
N
) \

48 
åy1
 = 
roŸ
 + (1 << (
N
)); \

49 i‡(
vÆue
 >
åy1
 << (
N
)) \

51 
vÆue
 -
åy1
 << (
N
); \

52 
roŸ
 |2 << (
N
); \

53 }

	)

55 
öt32_t
 
	$WebRtcS∂_SqπFlo‹
(
öt32_t
 
vÆue
)

57 
öt32_t
 
roŸ
 = 0, 
åy1
;

59 
	`WEBRTC_SPL_SQRT_ITER
 (15);

60 
	`WEBRTC_SPL_SQRT_ITER
 (14);

61 
	`WEBRTC_SPL_SQRT_ITER
 (13);

62 
	`WEBRTC_SPL_SQRT_ITER
 (12);

63 
	`WEBRTC_SPL_SQRT_ITER
 (11);

64 
	`WEBRTC_SPL_SQRT_ITER
 (10);

65 
	`WEBRTC_SPL_SQRT_ITER
 ( 9);

66 
	`WEBRTC_SPL_SQRT_ITER
 ( 8);

67 
	`WEBRTC_SPL_SQRT_ITER
 ( 7);

68 
	`WEBRTC_SPL_SQRT_ITER
 ( 6);

69 
	`WEBRTC_SPL_SQRT_ITER
 ( 5);

70 
	`WEBRTC_SPL_SQRT_ITER
 ( 4);

71 
	`WEBRTC_SPL_SQRT_ITER
 ( 3);

72 
	`WEBRTC_SPL_SQRT_ITER
 ( 2);

73 
	`WEBRTC_SPL_SQRT_ITER
 ( 1);

74 
	`WEBRTC_SPL_SQRT_ITER
 ( 0);

76  
roŸ
 >> 1;

77 
	}
}

	@split_and_insert.c

15 
	~"mcu.h
"

17 
	~<°rög.h
>

19 
	~"mcu_d•_comm⁄.h
"

20 
	~"√ãq_îr‹_codes.h
"

21 
	~"sig«l_¥o˚ssög_libøry.h
"

23 
	$WebRtcNëEQ_S∂ôAndIn£πPaylﬂd
(
RTPPackë_t
* 
∑ckë
,

24 
PackëBuf_t
* 
Buf„r_ö°
,

25 
S∂ôInfo_t
* 
•lô_ö°
,

26 
öt16_t
* 
Êushed
,

27 
av_sync
)

30 
i_ok
;

31 
Àn
;

32 
i
;

33 
RTPPackë_t
 
ãmp_∑ckë
;

34 
öt16_t
 
loˇlFlushed
 = 0;

35 c⁄° 
öt16_t
 *
pw16_°¨tPaylﬂd
;

36 c⁄° 
is_sync_πp
 = 
av_sync
 &&

37 
	`WebRtcNëEQ_IsSyncPaylﬂd
(
∑ckë
->
∑ylﬂd
,Öackë->
∑ylﬂdLí
);

38 *
Êushed
 = 0;

40 
Àn
 = 
∑ckë
->
∑ylﬂdLí
;

44 
	`WEBRTC_SPL_MEMCPY_W8
(&
ãmp_∑ckë
,
∑ckë
,(
RTPPackë_t
));

46 i‡(
•lô_ö°
->
dñèByãs
 =
NO_SPLIT
 ||

47 
is_sync_πp
)

50 
i_ok
 = 
	`WebRtcNëEQ_PackëBuf„rIn£π
(
Buf„r_ö°
, 
∑ckë
,

51 &
loˇlFlushed
, 
av_sync
);

52 *
Êushed
 |
loˇlFlushed
;

53 i‡(
i_ok
 < 0)

55  
PBUFFER_INSERT_ERROR5
;

58 i‡(
•lô_ö°
->
dñèByãs
 < -10)

61 
•lô_size
 = 
∑ckë
->
∑ylﬂdLí
;

62 
mu…
 = 
	`WEBRTC_SPL_ABS_W32
(
•lô_ö°
->
dñèByãs
) - 10;

68 
•lô_size
 >((80 << 
•lô_ö°
->
dñèTime
Ë* 
mu…
))

70 
•lô_size
 >>= 1;

74 i‡(
•lô_size
 > 1)

76 
•lô_size
 >>= 1;

77 
•lô_size
 *= 2;

80 
ãmp_∑ckë
.
∑ylﬂdLí
 = 
•lô_size
;

81 
pw16_°¨tPaylﬂd
 = 
ãmp_∑ckë
.
∑ylﬂd
;

82 
i
 = 0;

83 
Àn
 >(2 * 
•lô_size
))

86 
i_ok
 = 
	`WebRtcNëEQ_PackëBuf„rIn£π
(
Buf„r_ö°
, &
ãmp_∑ckë
,

87 &
loˇlFlushed
, 
av_sync
);

88 *
Êushed
 |
loˇlFlushed
;

89 
ãmp_∑ckë
.
timeSèmp
 +((2 * 
•lô_size
Ë>> 
•lô_ö°
->
dñèTime
);

90 
i
++;

91 
ãmp_∑ckë
.
∑ylﬂd
 = &(
pw16_°¨tPaylﬂd
[(
i
 * 
•lô_size
) >> 1]);

92 
ãmp_∑ckë
.
°¨ts_byã1
 =Åemp_∑ckë.°¨ts_byã1 ^ (
•lô_size
 & 0x1);

94 
Àn
 -
•lô_size
;

95 i‡(
i_ok
 < 0)

97  
PBUFFER_INSERT_ERROR1
;

102 
ãmp_∑ckë
.
∑ylﬂdLí
 = 
Àn
;

103 
i_ok
 = 
	`WebRtcNëEQ_PackëBuf„rIn£π
(
Buf„r_ö°
, &
ãmp_∑ckë
,

104 &
loˇlFlushed
, 
av_sync
);

105 *
Êushed
 |
loˇlFlushed
;

106 i‡(
i_ok
 < 0)

108  
PBUFFER_INSERT_ERROR2
;

114 
i
 = 0;

115 
pw16_°¨tPaylﬂd
 = 
ãmp_∑ckë
.
∑ylﬂd
;

116 
Àn
 >
•lô_ö°
->
dñèByãs
)

119 
ãmp_∑ckë
.
∑ylﬂdLí
 = 
•lô_ö°
->
dñèByãs
;

120 
i_ok
 = 
	`WebRtcNëEQ_PackëBuf„rIn£π
(
Buf„r_ö°
, &
ãmp_∑ckë
,

121 &
loˇlFlushed
, 
av_sync
);

122 *
Êushed
 |
loˇlFlushed
;

123 
i
++;

124 
ãmp_∑ckë
.
∑ylﬂd
 = &(
pw16_°¨tPaylﬂd
[(
i
 * 
•lô_ö°
->
dñèByãs
) >> 1]);

125 
ãmp_∑ckë
.
timeSèmp
 +
•lô_ö°
->
dñèTime
;

126 
ãmp_∑ckë
.
°¨ts_byã1
 =Åemp_∑ckë.°¨ts_byã1 ^ (
•lô_ö°
->
dñèByãs


129 i‡(
i_ok
 < 0)

131  
PBUFFER_INSERT_ERROR3
;

133 
Àn
 -
•lô_ö°
->
dñèByãs
;

136 i‡(
Àn
 > 0)

139 
ãmp_∑ckë
.
∑ylﬂdLí
 = 
Àn
;

140 
i_ok
 = 
	`WebRtcNëEQ_PackëBuf„rIn£π
(
Buf„r_ö°
, &
ãmp_∑ckë
,

141 &
loˇlFlushed
, 
av_sync
);

142 *
Êushed
 |
loˇlFlushed
;

143 i‡(
i_ok
 < 0)

145  
PBUFFER_INSERT_ERROR4
;

151 
	}
}

	@typedefs.h

14 #i‚de‡
WEBRTC_TYPEDEFS_H_


15 
	#WEBRTC_TYPEDEFS_H_


	)

19 #i‡
deföed
(
WEBRTC_MAC
Ë|| deföed(
WEBRTC_LINUX
) || \

20 
	$deföed
(
WEBRTC_ANDROID
)

21 
	#WEBRTC_POSIX


	)

29 #i‡
	`deföed
(
_M_X64
Ë|| deföed(
__x86_64__
)

30 
	#WEBRTC_ARCH_X86_FAMILY


	)

31 
	#WEBRTC_ARCH_X86_64


	)

32 
	#WEBRTC_ARCH_64_BITS


	)

33 
	#WEBRTC_ARCH_LITTLE_ENDIAN


	)

34 
	#WEBRTC_LITTLE_ENDIAN


	)

35 #ñi‡
	`deföed
(
_M_IX86
Ë|| deföed(
__i386__
)

36 
	#WEBRTC_ARCH_X86_FAMILY


	)

37 
	#WEBRTC_ARCH_X86


	)

38 
	#WEBRTC_ARCH_32_BITS


	)

39 
	#WEBRTC_ARCH_LITTLE_ENDIAN


	)

40 
	#WEBRTC_LITTLE_ENDIAN


	)

41 #ñi‡
	`deföed
(
__ARMEL__
)

49 
	#WEBRTC_ARCH_32_BITS


	)

50 
	#WEBRTC_ARCH_LITTLE_ENDIAN


	)

51 
	#WEBRTC_LITTLE_ENDIAN


	)

52 #ñi‡
	`deföed
(
__MIPSEL__
)

53 
	#WEBRTC_ARCH_32_BITS


	)

54 
	#WEBRTC_ARCH_LITTLE_ENDIAN


	)

55 
	#WEBRTC_LITTLE_ENDIAN


	)

57 #îr‹ 
PÀa£
 
add
 
suµ‹t
 
your
 
¨chôe˘uª
 
ö
 
ty≥defs
.
h


60 #i‡
	`deföed
(
__SSE2__
Ë|| deföed(
_MSC_VER
)

61 
	#WEBRTC_USE_SSE2


	)

64 #i‡!
	`deföed
(
_MSC_VER
)

65 
	~<°döt.h
>

68 sig√d 
	töt8_t
;

69 sig√d 
	töt16_t
;

70 sig√d 
	töt32_t
;

71 
__öt64
 
	töt64_t
;

72 
	tuöt8_t
;

73 
	tuöt16_t
;

74 
	tuöt32_t
;

75 
	t__öt64
 
	tuöt64_t
;

83 #i‡
	`deföed
(
_MSC_VER
)

84 
	#OVERRIDE
 
ovîride


	)

85 #ñi‡
	`deföed
(
__˛™g__
)

90 #¥agm®
˛™g
 
dügno°ic
 
ign‹ed
 "-Wc++11-extensions"

91 
	#OVERRIDE
 
ovîride


	)

93 
	#OVERRIDE


	)

	@unmute_signal.c

15 
	~"d•_hñpfun˘i⁄s.h
"

17 
	~"sig«l_¥o˚ssög_libøry.h
"

20 
	$WebRtcNëEQ_UnmuãSig«l
(
öt16_t
 *
pw16_öVec
, i¡16_à*
°¨tMuãFa˘
,

21 
öt16_t
 *
pw16_outVec
, i¡16_à
unmuãFa˘
,

22 
öt16_t
 
N
)

24 
i
;

25 
uöt16_t
 
w16_tmp
;

26 
öt32_t
 
w32_tmp
;

28 
w16_tmp
 = (
uöt16_t
Ë*
°¨tMuãFa˘
;

29 
w32_tmp
 = 
	`WEBRTC_SPL_LSHIFT_W32
((
öt32_t
)
w16_tmp
,6) + 32;

30 
i
 = 0; i < 
N
; i++)

32 
pw16_outVec
[
i
]

33 (
öt16_t
Ë((
	`WEBRTC_SPL_MUL_16_16
(
w16_tmp
, 
pw16_öVec
[
i
]) + 8192) >> 14);

34 
w32_tmp
 +
unmuãFa˘
;

35 
w32_tmp
 = 
	`WEBRTC_SPL_MAX
(0, w32_tmp);

36 
w16_tmp
 = (
uöt16_t
Ë
	`WEBRTC_SPL_RSHIFT_W32
(
w32_tmp
, 6);

37 
w16_tmp
 = 
	`WEBRTC_SPL_MIN
(16384, w16_tmp);

39 *
°¨tMuãFa˘
 = (
öt16_t
Ë
w16_tmp
;

40 
	}
}

	@vector_scaling_operations.c

23 
	~"sig«l_¥o˚ssög_libøry.h
"

25 
	$WebRtcS∂_Ve˘‹BôShi·W16
(
öt16_t
 *
ªs
, i¡16_à
Àngth
,

26 c⁄° 
öt16_t
 *
ö
, i¡16_à
right_shi·s
)

28 
i
;

30 i‡(
right_shi·s
 > 0)

32 
i
 = 
Àngth
; i > 0; i--)

34 (*
ªs
++Ë((*
ö
++Ë>> 
right_shi·s
);

38 
i
 = 
Àngth
; i > 0; i--)

40 (*
ªs
++Ë((*
ö
++Ë<< (-
right_shi·s
));

43 
	}
}

45 
	$WebRtcS∂_Ve˘‹BôShi·W32
(
öt32_t
 *
out_ve˘‹
,

46 
öt16_t
 
ve˘‹_Àngth
,

47 c⁄° 
öt32_t
 *
ö_ve˘‹
,

48 
öt16_t
 
right_shi·s
)

50 
i
;

52 i‡(
right_shi·s
 > 0)

54 
i
 = 
ve˘‹_Àngth
; i > 0; i--)

56 (*
out_ve˘‹
++Ë((*
ö_ve˘‹
++Ë>> 
right_shi·s
);

60 
i
 = 
ve˘‹_Àngth
; i > 0; i--)

62 (*
out_ve˘‹
++Ë((*
ö_ve˘‹
++Ë<< (-
right_shi·s
));

65 
	}
}

67 
	$WebRtcS∂_Ve˘‹BôShi·W32ToW16
(
öt16_t
* 
out
, 
Àngth
,

68 c⁄° 
öt32_t
* 
ö
, 
right_shi·s
) {

69 
i
;

70 
öt32_t
 
tmp_w32
;

72 i‡(
right_shi·s
 >= 0) {

73 
i
 = 
Àngth
; i > 0; i--) {

74 
tmp_w32
 = (*
ö
++Ë>> 
right_shi·s
;

75 (*
out
++Ë
	`WebRtcS∂_S©W32ToW16
(
tmp_w32
);

78 
öt16_t
 
À·_shi·s
 = -
right_shi·s
;

79 
i
 = 
Àngth
; i > 0; i--) {

80 
tmp_w32
 = (*
ö
++Ë<< 
À·_shi·s
;

81 (*
out
++Ë
	`WebRtcS∂_S©W32ToW16
(
tmp_w32
);

84 
	}
}

86 
	$WebRtcS∂_SˇÀVe˘‹
(c⁄° 
öt16_t
 *
ö_ve˘‹
, i¡16_à*
out_ve˘‹
,

87 
öt16_t
 
gaö
, i¡16_à
ö_ve˘‹_Àngth
,

88 
öt16_t
 
right_shi·s
)

91 
i
;

92 c⁄° 
öt16_t
 *
ö±r
;

93 
öt16_t
 *
ouçå
;

95 
ö±r
 = 
ö_ve˘‹
;

96 
ouçå
 = 
out_ve˘‹
;

98 
i
 = 0; i < 
ö_ve˘‹_Àngth
; i++)

100 (*
ouçå
++Ë(
öt16_t
)
	`WEBRTC_SPL_MUL_16_16_RSFT
(*
ö±r
++, 
gaö
, 
right_shi·s
);

102 
	}
}

104 
	$WebRtcS∂_SˇÀVe˘‹WôhS©
(c⁄° 
öt16_t
 *
ö_ve˘‹
, i¡16_à*
out_ve˘‹
,

105 
öt16_t
 
gaö
, i¡16_à
ö_ve˘‹_Àngth
,

106 
öt16_t
 
right_shi·s
)

109 
i
;

110 
öt32_t
 
tmpW32
;

111 c⁄° 
öt16_t
 *
ö±r
;

112 
öt16_t
 *
ouçå
;

114 
ö±r
 = 
ö_ve˘‹
;

115 
ouçå
 = 
out_ve˘‹
;

117 
i
 = 0; i < 
ö_ve˘‹_Àngth
; i++)

119 
tmpW32
 = 
	`WEBRTC_SPL_MUL_16_16_RSFT
(*
ö±r
++, 
gaö
, 
right_shi·s
);

120 (*
ouçå
++Ë
	`WebRtcS∂_S©W32ToW16
(
tmpW32
);

122 
	}
}

124 
	$WebRtcS∂_SˇÀAndAddVe˘‹s
(c⁄° 
öt16_t
 *
ö1
, i¡16_à
gaö1
, 
shi·1
,

125 c⁄° 
öt16_t
 *
ö2
, i¡16_à
gaö2
, 
shi·2
,

126 
öt16_t
 *
out
, 
ve˘‹_Àngth
)

129 
i
;

130 c⁄° 
öt16_t
 *
ö1±r
;

131 c⁄° 
öt16_t
 *
ö2±r
;

132 
öt16_t
 *
ouçå
;

134 
ö1±r
 = 
ö1
;

135 
ö2±r
 = 
ö2
;

136 
ouçå
 = 
out
;

138 
i
 = 0; i < 
ve˘‹_Àngth
; i++)

140 (*
ouçå
++Ë(
öt16_t
)
	`WEBRTC_SPL_MUL_16_16_RSFT
(
gaö1
, *
ö1±r
++, 
shi·1
)

141 + (
öt16_t
)
	`WEBRTC_SPL_MUL_16_16_RSFT
(
gaö2
, *
ö2±r
++, 
shi·2
);

143 
	}
}

146 
	$WebRtcS∂_SˇÀAndAddVe˘‹sWôhRoundC
(c⁄° 
öt16_t
* 
ö_ve˘‹1
,

147 
öt16_t
 
ö_ve˘‹1_sˇÀ
,

148 c⁄° 
öt16_t
* 
ö_ve˘‹2
,

149 
öt16_t
 
ö_ve˘‹2_sˇÀ
,

150 
right_shi·s
,

151 
öt16_t
* 
out_ve˘‹
,

152 
Àngth
) {

153 
i
 = 0;

154 
round_vÆue
 = (1 << 
right_shi·s
) >> 1;

156 i‡(
ö_ve˘‹1
 =
NULL
 || 
ö_ve˘‹2
 =NULL || 
out_ve˘‹
 == NULL ||

157 
Àngth
 <0 || 
right_shi·s
 < 0) {

161 
i
 = 0; i < 
Àngth
; i++) {

162 
out_ve˘‹
[
i
] = (
öt16_t
)((

163 
	`WEBRTC_SPL_MUL_16_16
(
ö_ve˘‹1
[
i
], 
ö_ve˘‹1_sˇÀ
)

164 + 
	`WEBRTC_SPL_MUL_16_16
(
ö_ve˘‹2
[
i
], 
ö_ve˘‹2_sˇÀ
)

165 + 
round_vÆue
Ë>> 
right_shi·s
);

169 
	}
}

	@webrtc_cng.h

12 #i‚de‡
WEBRTC_MODULES_AUDIO_CODING_CODECS_CNG_MAIN_INTERFACE_WEBRTC_CNG_H_


13 
	#WEBRTC_MODULES_AUDIO_CODING_CODECS_CNG_MAIN_INTERFACE_WEBRTC_CNG_H_


	)

15 
	~"ty≥defs.h
"

17 #ifde‡
__˝lu•lus


21 
	#WEBRTC_CNG_MAX_LPC_ORDER
 12

	)

22 
	#WEBRTC_CNG_MAX_OUTSIZE_ORDER
 640

	)

27 
	#CNG_ENCODER_NOT_INITIATED
 6120

	)

28 
	#CNG_DISALLOWED_LPC_ORDER
 6130

	)

29 
	#CNG_DISALLOWED_FRAME_SIZE
 6140

	)

30 
	#CNG_DISALLOWED_SAMPLING_FREQUENCY
 6150

	)

32 
	#CNG_DECODER_NOT_INITIATED
 6220

	)

34 
WebRtcCngEncIn°
 
	tCNG_íc_ö°
;

35 
WebRtcCngDecIn°
 
	tCNG_dec_ö°
;

48 
öt16_t
 
WebRtcCng_Cª©eEnc
(
CNG_íc_ö°
** 
˙g_ö°
);

49 
öt16_t
 
WebRtcCng_Cª©eDec
(
CNG_dec_ö°
** 
˙g_ö°
);

70 
öt16_t
 
WebRtcCng_InôEnc
(
CNG_íc_ö°
* 
˙g_ö°
, 
uöt16_t
 
fs
, i¡16_à
öãrvÆ
,

71 
öt16_t
 
quÆôy
);

72 
öt16_t
 
WebRtcCng_InôDec
(
CNG_dec_ö°
* 
˙g_ö°
);

85 
öt16_t
 
WebRtcCng_FªeEnc
(
CNG_íc_ö°
* 
˙g_ö°
);

86 
öt16_t
 
WebRtcCng_FªeDec
(
CNG_dec_ö°
* 
˙g_ö°
);

105 
öt16_t
 
WebRtcCng_Encode
(
CNG_íc_ö°
* 
˙g_ö°
, i¡16_t* 
•ìch
,

106 
öt16_t
 
ƒOfSam∂es
, 
uöt8_t
* 
SIDd©a
,

107 
öt16_t
* 
byãsOut
, i¡16_à
f‹˚SID
);

122 
öt16_t
 
WebRtcCng_Upd©eSid
(
CNG_dec_ö°
* 
˙g_ö°
, 
uöt8_t
* 
SID
,

123 
öt16_t
 
Àngth
);

139 
öt16_t
 
WebRtcCng_Gíî©e
(
CNG_dec_ö°
* 
˙g_ö°
, i¡16_t* 
outD©a
,

140 
öt16_t
 
ƒOfSam∂es
, i¡16_à
√w_≥riod
);

155 
öt16_t
 
WebRtcCng_GëEº‹CodeEnc
(
CNG_íc_ö°
* 
˙g_ö°
);

156 
öt16_t
 
WebRtcCng_GëEº‹CodeDec
(
CNG_dec_ö°
* 
˙g_ö°
);

158 #ifde‡
__˝lu•lus


	@webrtc_neteq.c

15 
	~"öãrÁ˚/webπc_√ãq.h
"

16 
	~"öãrÁ˚/webπc_√ãq_öã∫Æ.h
"

18 
	~<as£π.h
>

19 
	~<°rög.h
>

21 
	~"ty≥defs.h
"

22 
	~"sig«l_¥o˚ssög_libøry.h
"

24 
	~"√ãq_îr‹_codes.h
"

25 
	~"mcu_d•_comm⁄.h
"

26 
	~"π˝.h
"

28 
	#RETURN_ON_ERROR
–
ma¸oEx¥
, 
ma¸oIn°På
 ) { \

29 i‡((
ma¸oEx¥
) != 0) { \

30 i‡((
ma¸oEx¥
) == -1) { \

31 (
ma¸oIn°På
)->
Eº‹Code
 = - (
NETEQ_OTHER_ERROR
); \

33 (
ma¸oIn°På
)->
Eº‹Code
 = -((
öt16_t
Ë(
ma¸oEx¥
)); \

36 } }

	)

38 
	$WebRtcNëEQ_°∫˝y
(*
°rDe°
, 
numbîOfEÀmíts
,

39 c⁄° *
°rSour˚
, 
cou¡
)

42 i‡(
cou¡
 > 
numbîOfEÀmíts
)

44 
°rDe°
[0] = '\0';

49 
	`°∫˝y
(
°rDe°
, 
°rSour˚
, 
cou¡
);

52 
	}
}

62 
	$WebRtcNëEQ_GëEº‹Code
(*
ö°
)

64 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

65 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

66  (
NëEqMaöIn°
->
Eº‹Code
);

67 
	}
}

69 
	$WebRtcNëEQ_GëEº‹Name
(
îr‹Code
, *
îr‹Name
, 
maxSåLí
)

71 i‡((
îr‹Name
 =
NULL
Ë|| (
maxSåLí
 <= 0))

76 i‡(
îr‹Code
 < 0)

78 
îr‹Code
 = -errorCode;

81 
îr‹Code
)

85 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "OTHER_ERROR", maxStrLen);

90 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "FAULTY_INSTRUCTION", maxStrLen);

95 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "FAULTY_NETWORK_TYPE", maxStrLen);

100 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "FAULTY_DELAYVALUE", maxStrLen);

105 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "FAULTY_PLAYOUTMODE", maxStrLen);

110 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "CORRUPT_INSTANCE", maxStrLen);

115 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "ILLEGAL_MASTER_SLAVE_SWITCH", maxStrLen);

120 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "MASTER_SLAVE_ERROR", maxStrLen);

125 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "UNKNOWN_BUFSTAT_DECISION", maxStrLen);

130 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "RECOUT_ERROR_DECODING", maxStrLen);

135 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "RECOUT_ERROR_SAMPLEUNDERRUN", maxStrLen);

140 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "RECOUT_ERROR_DECODED_TOO_MUCH",

141 
maxSåLí
);

146 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "RECIN_CNG_ERROR", maxStrLen);

151 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "RECIN_UNKNOWNPAYLOAD", maxStrLen);

156 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "RECIN_BUFFERINSERT_ERROR", maxStrLen);

161 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "PBUFFER_INIT_ERROR", maxStrLen);

170 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "PBUFFER_INSERT_ERROR1", maxStrLen);

175 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "UNKNOWN_G723_HEADER", maxStrLen);

180 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "PBUFFER_NONEXISTING_PACKET", maxStrLen);

185 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "PBUFFER_NOT_INITIALIZED", maxStrLen);

190 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "AMBIGUOUS_ILBC_FRAME_SIZE", maxStrLen);

195 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "CODEC_DB_FULL", maxStrLen);

203 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "CODEC_DB_NOT_EXIST", maxStrLen);

208 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "CODEC_DB_UNKNOWN_CODEC", maxStrLen);

213 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "CODEC_DB_PAYLOAD_TAKEN", maxStrLen);

218 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "CODEC_DB_UNSUPPORTED_CODEC", maxStrLen);

223 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "CODEC_DB_UNSUPPORTED_FS", maxStrLen);

228 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "DTMF_DEC_PARAMETER_ERROR", maxStrLen);

233 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "DTMF_INSERT_ERROR", maxStrLen);

238 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "DTMF_GEN_UNKNOWN_SAMP_FREQ", maxStrLen);

243 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "DTMF_NOT_SUPPORTED", maxStrLen);

249 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "RED_SPLIT_ERROR", maxStrLen);

254 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "RTP_TOO_SHORT_PACKET", maxStrLen);

259 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "RTP_CORRUPT_PACKET", maxStrLen);

265 i‡(
îr‹Code
 >= 6010 &&ÉrrorCode <= 6810)

268 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "iSAC ERROR", maxStrLen);

272 
	`WebRtcNëEQ_°∫˝y
(
îr‹Name
, 
maxSåLí
, "UNKNOWN_ERROR", maxStrLen);

278 
	}
}

281 
	$WebRtcNëEQ_AssignSize
(*
sizeöbyãs
)

283 *
sizeöbyãs
 = ((
MaöIn°_t
Ë* 2Ë/ (
öt16_t
);

285 
	}
}

287 
	$WebRtcNëEQ_Assign
(**
ö°
, *
NETEQ_ö°_Addr
)

289 
ok
 = 0;

290 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
NETEQ_ö°_Addr
;

291 *
ö°
 = 
NETEQ_ö°_Addr
;

292 i‡(*
ö°
 =
NULL
)  (-1);

294 
	`WebRtcS∂_Inô
();

297 
	`WebRtcS∂_MemSëW16
((
öt16_t
*Ë
NëEqMaöIn°
, 0,

298 ((
MaöIn°_t
Ë/ (
öt16_t
)));

299 
ok
 = 
	`WebRtcNëEQ_McuRe£t
(&
NëEqMaöIn°
->
MCUö°
);

300 i‡(
ok
 != 0)

302 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

306 
	}
}

308 
	$WebRtcNëEQ_GëRecommídedBuf„rSize
(*
ö°
, c⁄° 
WebRtcNëEQDecodî
 *
codec
,

309 
noOfCodecs
, 
WebRtcNëEQNëw‹kTy≥
 
nwTy≥
,

310 *
MaxNoOfPackës
, *
sizeöbyãs
,

311 * 
≥r_∑ckë_ovîhód_byãs
)

313 
ok
 = 0;

314 
mu…ùlõr
;

315 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

316 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

317 *
MaxNoOfPackës
 = 0;

318 *
sizeöbyãs
 = 0;

319 
ok
 = 
	`WebRtcNëEQ_GëDeÁu…CodecSëtögs
(
codec
, 
noOfCodecs
, 
sizeöbyãs
,

320 
MaxNoOfPackës
,

321 
≥r_∑ckë_ovîhód_byãs
);

322 i‡(
ok
 != 0)

324 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

327 i‡(
nwTy≥
 =
kUDPN‹mÆ
)

329 
mu…ùlõr
 = 1;

331 i‡(
nwTy≥
 =
kUDPVideoSync
)

333 
mu…ùlõr
 = 4;

335 i‡(
nwTy≥
 =
kTCPN‹mÆ
)

337 
mu…ùlõr
 = 4;

339 i‡(
nwTy≥
 =
kTCPL¨geJôãr
)

341 
mu…ùlõr
 = 8;

343 i‡(
nwTy≥
 =
kTCPXL¨geJôãr
)

345 
mu…ùlõr
 = 12;

349 
NëEqMaöIn°
->
Eº‹Code
 = -
FAULTY_NETWORK_TYPE
;

352 *
MaxNoOfPackës
 = (*MaxNoOfPackësË* 
mu…ùlõr
;

353 *
sizeöbyãs
 = (*sizeöbyãsË* 
mu…ùlõr
;

355 
	}
}

357 
	$WebRtcNëEQ_AssignBuf„r
(*
ö°
, 
MaxNoOfPackës
, *
NETEQ_Buf„r_Addr
,

358 
sizeöbyãs
)

360 
ok
;

361 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

362 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

363 
ok
 = 
	`WebRtcNëEQ_PackëBuf„rInô
(&
NëEqMaöIn°
->
MCUö°
.
PackëBuf„r_ö°
,

364 
MaxNoOfPackës
, (
öt16_t
*Ë
NETEQ_Buf„r_Addr
, (
sizeöbyãs
 >> 1));

365 i‡(
ok
 != 0)

367 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

370  (
ok
);

371 
	}
}

393 
	$WebRtcNëEQ_Inô
(*
ö°
, 
uöt16_t
 
fs
, uöt16_à
∑ckë_ms
)

395 
ok
 = 0;

398 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

400 i‡(
NëEqMaöIn°
 =
NULL
)

405 #ifde‡
NETEQ_VAD


407 
NëEqMaöIn°
->
DSPö°
.
VADIn°
.
VADSèã
 = 
NULL
;

409 
NëEqMaöIn°
->
DSPö°
.
VADIn°
.
öôFun˘i⁄
 = 
NULL
;

410 
NëEqMaöIn°
->
DSPö°
.
VADIn°
.
£tmodeFun˘i⁄
 = 
NULL
;

411 
NëEqMaöIn°
->
DSPö°
.
VADIn°
.
VADFun˘i⁄
 = 
NULL
;

414 
ok
 = 
	`WebRtcNëEQ_DSPöô
(
NëEqMaöIn°
);

415 
	`RETURN_ON_ERROR
(
ok
, 
NëEqMaöIn°
);

417 
ok
 = 
	`WebRtcNëEQ_SëPackëSize
(
NëEqMaöIn°
, 
∑ckë_ms
);

418 
	`RETURN_ON_ERROR
(
ok
, 
NëEqMaöIn°
);

420 
ok
 = 
	`WebRtcNëEQ_DSPInô
(&
NëEqMaöIn°
->
DSPö°
, 
fs
);

421 
	`RETURN_ON_ERROR
(
ok
, 
NëEqMaöIn°
);

423 
NëEqMaöIn°
->
DSPö°
.
BGNIn°
.
bgnMode
 = 
BGN_ON
;

426 
ok
 = 
	`WebRtcNëEQ_CÀ¨InCÆlSèts
(&
NëEqMaöIn°
->
DSPö°
);

427 
	`RETURN_ON_ERROR
(
ok
, 
NëEqMaöIn°
);

428 
ok
 = 
	`WebRtcNëEQ_CÀ¨Po°CÆlSèts
(&
NëEqMaöIn°
->
DSPö°
);

429 
	`RETURN_ON_ERROR
(
ok
, 
NëEqMaöIn°
);

430 
ok
 = 
	`WebRtcNëEQ_Re£tMcuJôãrSèt
(&
NëEqMaöIn°
->
MCUö°
);

431 
	`RETURN_ON_ERROR
(
ok
, 
NëEqMaöIn°
);

434 
ok
 = 
	`WebRtcNëEQ_PackëBuf„rFlush
(&
NëEqMaöIn°
->
MCUö°
.
PackëBuf„r_ö°
);

435 
	`RETURN_ON_ERROR
(
ok
, 
NëEqMaöIn°
);

438 
NëEqMaöIn°
->
MCUö°
.
cuºít_Codec
 = -1;

439 
NëEqMaöIn°
->
MCUö°
.
cuºít_Paylﬂd
 = -1;

440 
NëEqMaöIn°
->
MCUö°
.
fú°_∑ckë
 = 1;

441 
NëEqMaöIn°
->
MCUö°
.
⁄e_desc
 = 0;

442 
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
.
exåaDñayMs
 = 0;

443 
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
.
möimum_dñay_ms
 = 0;

444 
NëEqMaöIn°
->
MCUö°
.
NoOfEx∑ndCÆls
 = 0;

445 
NëEqMaöIn°
->
MCUö°
.
fs
 = fs;

448 
NëEqMaöIn°
->
MCUö°
.
av_sync
 = 0;

450 #ifde‡
NETEQ_ATEVENT_DECODE


452 
ok
 = 
	`WebRtcNëEQ_DtmfDecodîInô
(&(
NëEqMaöIn°
->
MCUö°
.
DTMF_ö°
),
fs
,560);

453 
	`RETURN_ON_ERROR
(
ok
, 
NëEqMaöIn°
);

457 
	`WebRtcNëEQ_RTCPInô
(&(
NëEqMaöIn°
->
MCUö°
.
RTCP_ö°
), 0);

460 
	`WebRtcS∂_MemSëW16
((
öt16_t
*Ë&(
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
), 0,

461 (
Buf°©sIn°_t
Ë/ (
öt16_t
));

464 
	`WebRtcNëEQ_Re£tAutomode
(&(
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
),

465 
NëEqMaöIn°
->
MCUö°
.
PackëBuf„r_ö°
.
maxIn£πPosôi⁄s
);

467 
NëEqMaöIn°
->
Eº‹Code
 = 0;

469 #ifde‡
NETEQ_STEREO


471 
NëEqMaöIn°
->
ma°îSœve
 = 0;

475 
NëEqMaöIn°
->
MCUö°
.
decoded_∑ckë_£quí˚_numbî
 = -1;

476 
NëEqMaöIn°
->
MCUö°
.
decoded_∑ckë_time°amp
 = 0;

478  (
ok
);

479 
	}
}

481 
	$WebRtcNëEQ_FlushBuf„rs
(*
ö°
)

483 
ok
 = 0;

486 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

488 i‡(
NëEqMaöIn°
 =
NULL
)

494 
ok
 = 
	`WebRtcNëEQ_PackëBuf„rFlush
(&
NëEqMaöIn°
->
MCUö°
.
PackëBuf„r_ö°
);

495 
	`RETURN_ON_ERROR
(
ok
, 
NëEqMaöIn°
);

498 
NëEqMaöIn°
->
MCUö°
.
fú°_∑ckë
 = 1;

501 
ok
 = 
	`WebRtcNëEQ_FlushS≥echBuf„r
(&
NëEqMaöIn°
->
DSPö°
);

502 
	`RETURN_ON_ERROR
(
ok
, 
NëEqMaöIn°
);

505 
	}
}

507 
	$WebRtcNëEQ_SëAVTPœyout
(*
ö°
, 
PœyoutAVT⁄
)

509 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

510 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

511 #ifde‡
NETEQ_ATEVENT_DECODE


512 
NëEqMaöIn°
->
MCUö°
.
AVT_PœyoutOn
 = 
PœyoutAVT⁄
;

515 i‡(
PœyoutAVT⁄
 != 0)

517 
NëEqMaöIn°
->
Eº‹Code
 = -
DTMF_NOT_SUPPORTED
;

525 
	}
}

527 
	$WebRtcNëEQ_SëExåaDñay
(*
ö°
, 
DñayInMs
)

529 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

530 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

531 i‡((
DñayInMs
 < 0) || (DelayInMs > 10000))

533 
NëEqMaöIn°
->
Eº‹Code
 = -
FAULTY_DELAYVALUE
;

536 
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
.
exåaDñayMs
 = 
DñayInMs
;

538 
	}
}

540 
	$WebRtcNëEQ_SëMöimumDñay
(*
ö°
, 
möimum_dñay_ms
) {

541 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

542 i‡(
NëEqMaöIn°
 =
NULL
)

544 i‡(
möimum_dñay_ms
 < 0 || minimum_delay_ms > 10000) {

545 
NëEqMaöIn°
->
Eº‹Code
 = -
FAULTY_DELAYVALUE
;

548 
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
.
möimum_dñay_ms
 =

549 
möimum_dñay_ms
;

551 
	}
}

553 
	$WebRtcNëEQ_SëPœyoutMode
(*
ö°
, 
WebRtcNëEQPœyoutMode
 
∂ayoutMode
)

555 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

556 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

557 i‡((
∂ayoutMode
 !
kPœyoutOn
Ë&& (∂ayoutModê!
kPœyoutOff
) && (playoutMode

558 !
kPœyoutFax
Ë&& (
∂ayoutMode
 !
kPœyoutSåómög
))

560 
NëEqMaöIn°
->
Eº‹Code
 = -
FAULTY_PLAYOUTMODE
;

565 
NëEqMaöIn°
->
MCUö°
.
NëEqPœyoutMode
 = 
∂ayoutMode
;

568 
	}
}

570 
	$WebRtcNëEQ_SëBGNMode
(*
ö°
, 
WebRtcNëEQBGNMode
 
bgnMode
)

573 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

576 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

579 i‡(
NëEqMaöIn°
->
MCUö°
.
maö_ö°
 != NetEqMainInst)

582 
NëEqMaöIn°
->
Eº‹Code
 = 
CORRUPT_INSTANCE
;

586 
NëEqMaöIn°
->
DSPö°
.
BGNIn°
.
bgnMode
 = (
BGNMode
) bgnMode;

589 
	}
}

591 
	$WebRtcNëEQ_GëBGNMode
(c⁄° *
ö°
, 
WebRtcNëEQBGNMode
 *
bgnMode
)

594 c⁄° 
MaöIn°_t
 *
NëEqMaöIn°
 = (c⁄° MaöIn°_t*Ë
ö°
;

597 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

599 *
bgnMode
 = (
WebRtcNëEQBGNMode
Ë
NëEqMaöIn°
->
DSPö°
.
BGNIn°
.bgnMode;

602 
	}
}

608 
	$WebRtcNëEQ_CodecDbRe£t
(*
ö°
)

610 
ok
 = 0;

611 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

612 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

613 
ok
 = 
	`WebRtcNëEQ_DbRe£t
(&
NëEqMaöIn°
->
MCUö°
.
codec_DB_ö°
);

614 i‡(
ok
 != 0)

616 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

621 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcDecode
 = 
NULL
;

622 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcDecodeRCU
 = 
NULL
;

623 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcAddL©ePkt
 = 
NULL
;

624 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcDecode
 = 
NULL
;

625 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcDecodeInô
 = 
NULL
;

626 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcDecodePLC
 = 
NULL
;

627 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcGëMDöfo
 = 
NULL
;

628 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcUpdBWE°
 = 
NULL
;

629 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcGëEº‹Code
 = 
NULL
;

632 
	}
}

634 
	$WebRtcNëEQ_CodecDbGëSizeInfo
(*
ö°
, 
öt16_t
 *
U£dE¡rõs
,

635 
öt16_t
 *
MaxE¡rõs
)

637 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

638 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

639 *
MaxE¡rõs
 = 
NUM_CODECS
;

640 *
U£dE¡rõs
 = 
NëEqMaöIn°
->
MCUö°
.
codec_DB_ö°
.
ƒOfCodecs
;

642 
	}
}

644 
	$WebRtcNëEQ_CodecDbGëCodecInfo
(*
ö°
, 
öt16_t
 
E¡ry
,

645 
WebRtcNëEQDecodî
 *
codec
)

647 
i
;

648 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

649 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

650 *
codec
 = (
WebRtcNëEQDecodî
) 0;

651 i‡((
E¡ry
 >0Ë&& (E¡ry < 
NëEqMaöIn°
->
MCUö°
.
codec_DB_ö°
.
ƒOfCodecs
))

653 
i
 = 0; i < 
NUM_TOTAL_CODECS
; i++)

655 i‡(
NëEqMaöIn°
->
MCUö°
.
codec_DB_ö°
.
posôi⁄
[
i
] =
E¡ry
)

657 *
codec
 = (
WebRtcNëEQDecodî
Ë
i
;

663 
NëEqMaöIn°
->
Eº‹Code
 = -(
CODEC_DB_NOT_EXIST1
);

667 
	}
}

669 
	$WebRtcNëEQ_CodecDbAdd
(*
ö°
, 
WebRtcNëEQ_CodecDef
 *
codecIn°
)

671 
ok
 = 0;

672 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

673 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

674 
ok
 = 
	`WebRtcNëEQ_DbAdd
(&
NëEqMaöIn°
->
MCUö°
.
codec_DB_ö°
, 
codecIn°
->
codec
,

675 
codecIn°
->
∑ylﬂdTy≥
, codecIn°->
funcDecode
, codecIn°->
funcDecodeRCU
,

676 
codecIn°
->
funcDecodePLC
, codecIn°->
funcDecodeInô
, codecIn°->
funcAddL©ePkt
,

677 
codecIn°
->
funcGëMDöfo
, codecIn°->
funcGëPôch
, codecIn°->
funcUpdBWE°
,

678 
codecIn°
->
funcDuøti⁄E°
, codecIn°->
funcGëEº‹Code
,

679 
codecIn°
->
codec_°©e
, codecIn°->
codec_fs
);

680 i‡(
ok
 != 0)

682 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

685  (
ok
);

686 
	}
}

688 
	$WebRtcNëEQ_CodecDbRemove
(*
ö°
, 
WebRtcNëEQDecodî
 
codec
)

690 
ok
 = 0;

691 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

692 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

695 i‡(
NëEqMaöIn°
->
MCUö°
.
cuºít_Codec
 =(
öt16_t
Ë
codec
)

698 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcDecode
 = 
NULL
;

699 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcDecodeRCU
 = 
NULL
;

700 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcAddL©ePkt
 = 
NULL
;

701 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcDecode
 = 
NULL
;

702 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcDecodeInô
 = 
NULL
;

703 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcDecodePLC
 = 
NULL
;

704 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcGëMDöfo
 = 
NULL
;

705 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcUpdBWE°
 = 
NULL
;

706 
NëEqMaöIn°
->
DSPö°
.
codec_±r_ö°
.
funcGëEº‹Code
 = 
NULL
;

709 
ok
 = 
	`WebRtcNëEQ_DbRemove
(&
NëEqMaöIn°
->
MCUö°
.
codec_DB_ö°
, 
codec
);

710 i‡(
ok
 != 0)

712 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

715  (
ok
);

716 
	}
}

722 
	$WebRtcNëEQ_RecIn
(*
ö°
, 
öt16_t
 *
p_w16d©agøm°¨t
, i¡16_à
w16_RTPÀn
,

723 
uöt32_t
 
uw32_timeRec
)

725 
ok
 = 0;

726 
RTPPackë_t
 
RTP∑ckë
;

727 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

728 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

731 i‡(
NëEqMaöIn°
->
MCUö°
.
maö_ö°
 != NetEqMainInst)

734 
NëEqMaöIn°
->
Eº‹Code
 = 
CORRUPT_INSTANCE
;

739 
ok
 = 
	`WebRtcNëEQ_RTPPaylﬂdInfo
(
p_w16d©agøm°¨t
, 
w16_RTPÀn
, &
RTP∑ckë
);

740 i‡(
ok
 != 0)

742 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

746 
ok
 = 
	`WebRtcNëEQ_RecInI¡î«l
(&
NëEqMaöIn°
->
MCUö°
, &
RTP∑ckë
, 
uw32_timeRec
);

747 i‡(
ok
 != 0)

749 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

752  (
ok
);

753 
	}
}

771 
	$WebRtcNëEQ_RecInRTPSåu˘
(*
ö°
, 
WebRtcNëEQ_RTPInfo
 *
πpInfo
,

772 c⁄° 
uöt8_t
 *
∑ylﬂdPå
, 
öt16_t
 
∑ylﬂdLíByãs
,

773 
uöt32_t
 
uw32_timeRec
)

775 
ok
 = 0;

776 
RTPPackë_t
 
RTP∑ckë
;

777 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

778 i‡(
NëEqMaöIn°
 =
NULL
)

784 i‡(
NëEqMaöIn°
->
MCUö°
.
maö_ö°
 != NetEqMainInst)

787 
NëEqMaöIn°
->
Eº‹Code
 = 
CORRUPT_INSTANCE
;

792 
RTP∑ckë
.
∑ylﬂdTy≥
 = 
πpInfo
->payloadType;

793 
RTP∑ckë
.
£qNumbî
 = 
πpInfo
->
£quí˚Numbî
;

794 
RTP∑ckë
.
timeSèmp
 = 
πpInfo
->timeStamp;

795 
RTP∑ckë
.
s§c
 = 
πpInfo
->
SSRC
;

796 
RTP∑ckë
.
∑ylﬂd
 = (c⁄° 
öt16_t
*Ë
∑ylﬂdPå
;

797 
RTP∑ckë
.
∑ylﬂdLí
 = 
∑ylﬂdLíByãs
;

798 
RTP∑ckë
.
°¨ts_byã1
 = 0;

800 
ok
 = 
	`WebRtcNëEQ_RecInI¡î«l
(&
NëEqMaöIn°
->
MCUö°
, &
RTP∑ckë
, 
uw32_timeRec
);

801 i‡(
ok
 != 0)

803 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

807 
NëEqMaöIn°
->
£íRecIn
 = 1;

808  (
ok
);

809 
	}
}

811 
	$WebRtcNëEQ_RecOut
(*
ö°
, 
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_Àn
)

813 
ok
 = 0;

814 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

815 #ifde‡
NETEQ_STEREO


816 
Ma°îSœveInfo
 
msInfo
;

817 
msInfo
.
msMode
 = 
NETEQ_MONO
;

820 i‡(
NëEqMaöIn°
 =
NULL
) {

821 *
pw16_Àn
 = 0;

825 i‡(!
NëEqMaöIn°
->
£íRecIn
) {

826 *
pw16_Àn
 = 0;

831 i‡(
NëEqMaöIn°
->
DSPö°
.
maö_ö°
 != NetEqMainInst)

834 
NëEqMaöIn°
->
Eº‹Code
 = 
CORRUPT_INSTANCE
;

838 #ifde‡
NETEQ_STEREO


839 
NëEqMaöIn°
->
DSPö°
.
msInfo
 = &msInfo;

842 
ok
 = 
	`WebRtcNëEQ_RecOutI¡î«l
(&
NëEqMaöIn°
->
DSPö°
, 
pw16_outD©a
,

843 
pw16_Àn
, 0 , 
NëEqMaöIn°
->
MCUö°
.
av_sync
);

844 i‡(
ok
 != 0)

846 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

849  (
ok
);

850 
	}
}

873 
	$WebRtcNëEQ_RecOutMa°îSœve
(*
ö°
, 
öt16_t
 *
pw16_outD©a
,

874 
öt16_t
 *
pw16_Àn
, *
msInfo
,

875 
öt16_t
 
isMa°î
)

877 #i‚de‡
NETEQ_STEREO


881 
ok
 = 0;

882 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

884 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

887 i‡(
NëEqMaöIn°
->
DSPö°
.
maö_ö°
 != NetEqMainInst)

890 
NëEqMaöIn°
->
Eº‹Code
 = 
CORRUPT_INSTANCE
;

894 i‡(
msInfo
 =
NULL
)

897 
NëEqMaöIn°
->
Eº‹Code
 = 
NETEQ_OTHER_ERROR
;

902 
NëEqMaöIn°
->
DSPö°
.
msInfo
 = (
Ma°îSœveInfo
 *) msInfo;

905 i‡((
NëEqMaöIn°
->
ma°îSœve
 =1 && !
isMa°î
) ||

906 (
NëEqMaöIn°
->
ma°îSœve
 =2 && 
isMa°î
))

908 
NëEqMaöIn°
->
Eº‹Code
 = 
ILLEGAL_MASTER_SLAVE_SWITCH
;

912 i‡(!
isMa°î
)

915 
NëEqMaöIn°
->
ma°îSœve
 = 2;

916 
NëEqMaöIn°
->
DSPö°
.
msInfo
->
msMode
 = 
NETEQ_SLAVE
;

920 
NëEqMaöIn°
->
DSPö°
.
msInfo
->
msMode
 = 
NETEQ_MASTER
;

923 
ok
 = 
	`WebRtcNëEQ_RecOutI¡î«l
(&
NëEqMaöIn°
->
DSPö°
, 
pw16_outD©a
,

924 
pw16_Àn
, 0 , 
NëEqMaöIn°
->
MCUö°
.
av_sync
);

925 i‡(
ok
 != 0)

927 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

931 i‡(
isMa°î
)

934 
NëEqMaöIn°
->
ma°îSœve
 = 1;

937  (
ok
);

939 
	}
}

941 
	$WebRtcNëEQ_GëMa°îSœveInfoSize
()

943 #ifde‡
NETEQ_STEREO


944  ((
Ma°îSœveInfo
));

948 
	}
}

951 
	$WebRtcNëEQ_RecOutNoDecode
(*
ö°
, 
öt16_t
 *
pw16_outD©a
,

952 
öt16_t
 *
pw16_Àn
)

954 
ok
 = 0;

955 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

956 #ifde‡
NETEQ_STEREO


957 
Ma°îSœveInfo
 
msInfo
;

960 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

963 i‡(
NëEqMaöIn°
->
DSPö°
.
maö_ö°
 != NetEqMainInst)

966 
NëEqMaöIn°
->
Eº‹Code
 = 
CORRUPT_INSTANCE
;

970 #ifde‡
NETEQ_STEREO


972 
NëEqMaöIn°
->
ma°îSœve
)

976 
msInfo
.
msMode
 = 
NETEQ_MASTER
;

981 
msInfo
.
msMode
 = 
NETEQ_SLAVE
;

986 
msInfo
.
msMode
 = 
NETEQ_MONO
;

991 
NëEqMaöIn°
->
DSPö°
.
msInfo
 = &msInfo;

994 
ok
 = 
	`WebRtcNëEQ_RecOutI¡î«l
(&
NëEqMaöIn°
->
DSPö°
, 
pw16_outD©a
,

995 
pw16_Àn
, 1 , 
NëEqMaöIn°
->
MCUö°
.
av_sync
);

996 i‡(
ok
 != 0)

998 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

1001  (
ok
);

1002 
	}
}

1004 
	$WebRtcNëEQ_GëRTCPSèts
(*
ö°
, 
WebRtcNëEQ_RTCPSèt
 *
RTCP_ö°
)

1006 
ok
 = 0;

1007 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

1008 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

1009 
ok
 = 
	`WebRtcNëEQ_RTCPGëSèts
(&
NëEqMaöIn°
->
MCUö°
.
RTCP_ö°
,

1010 &
RTCP_ö°
->
‰a˘i⁄_lo°
, &RTCP_ö°->
cum_lo°
, &RTCP_ö°->
ext_max
,

1011 &
RTCP_ö°
->
jôãr
, 0);

1012 i‡(
ok
 != 0)

1014 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

1017  (
ok
);

1018 
	}
}

1020 
	$WebRtcNëEQ_GëRTCPSètsNoRe£t
(*
ö°
, 
WebRtcNëEQ_RTCPSèt
 *
RTCP_ö°
)

1022 
ok
 = 0;

1023 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

1024 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

1025 
ok
 = 
	`WebRtcNëEQ_RTCPGëSèts
(&
NëEqMaöIn°
->
MCUö°
.
RTCP_ö°
,

1026 &
RTCP_ö°
->
‰a˘i⁄_lo°
, &RTCP_ö°->
cum_lo°
, &RTCP_ö°->
ext_max
,

1027 &
RTCP_ö°
->
jôãr
, 1);

1028 i‡(
ok
 != 0)

1030 
NëEqMaöIn°
->
Eº‹Code
 = -
ok
;

1033  (
ok
);

1034 
	}
}

1036 
	$WebRtcNëEQ_GëS≥echTimeSèmp
(*
ö°
, 
uöt32_t
 *
time°amp
)

1038 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

1039 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

1041 i‡(
NëEqMaöIn°
->
MCUö°
.
TSsˇlögInôülized
)

1043 *
time°amp
 = 
	`WebRtcNëEQ_SˇÀTime°ampI¡î«lToExã∫Æ
(&
NëEqMaöIn°
->
MCUö°
,

1044 
NëEqMaöIn°
->
DSPö°
.
videoSyncTime°amp
);

1048 *
time°amp
 = 
NëEqMaöIn°
->
DSPö°
.
videoSyncTime°amp
;

1052 
	}
}

1076 
	$WebRtcNëEQ_GëS≥echOuçutTy≥
(*
ö°
, 
WebRtcNëEQOuçutTy≥
 *
ouçutTy≥
)

1079 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

1081 i‡(
NëEqMaöIn°
 =
NULL
)

1086 i‡((
NëEqMaöIn°
->
DSPö°
.
w16_mode
 & 
MODE_BGN_ONLY
) != 0)

1089 *
ouçutTy≥
 = 
kOuçutPLCtoCNG
;

1092 i‡((
NëEqMaöIn°
->
DSPö°
.
w16_mode
 =
MODE_CODEC_INTERNAL_CNG
)

1093 || (
NëEqMaöIn°
->
DSPö°
.
w16_mode
 =
MODE_RFC3389CNG
))

1096 *
ouçutTy≥
 = 
kOuçutCNG
;

1098 #ifde‡
NETEQ_VAD


1100 i‡–
NëEqMaöIn°
->
DSPö°
.
VADIn°
.
VADDecisi⁄
 == 0 )

1103 *
ouçutTy≥
 = 
kOuçutVADPassive
;

1107 i‡((
NëEqMaöIn°
->
DSPö°
.
w16_mode
 =
MODE_EXPAND
)

1108 && (
NëEqMaöIn°
->
DSPö°
.
Ex∑ndIn°
.
w16_ex∑ndMuãFa˘‹
 == 0))

1111 *
ouçutTy≥
 = 
kOuçutPLCtoCNG
;

1114 i‡(
NëEqMaöIn°
->
DSPö°
.
w16_mode
 =
MODE_EXPAND
)

1117 *
ouçutTy≥
 = 
kOuçutPLC
;

1123 *
ouçutTy≥
 = 
kOuçutN‹mÆ
;

1127 
	}
}

1133 
	#WEBRTC_NETEQ_CONCEALMENTFLAG_LOST
 0x01

	)

1134 
	#WEBRTC_NETEQ_CONCEALMENTFLAG_DISCARDED
 0x02

	)

1135 
	#WEBRTC_NETEQ_CONCEALMENTFLAG_SUPRESS
 0x04

	)

1136 
	#WEBRTC_NETEQ_CONCEALMENTFLAG_CNGACTIVE
 0x80

	)

1138 
	$WebRtcNëEQ_VQm⁄RecOutSèti°ics
(*
ö°
, 
uöt16_t
 *
vÆidVoi˚Duøti⁄Ms
,

1139 
uöt16_t
 *
c⁄˚ÆedVoi˚Duøti⁄Ms
,

1140 
uöt8_t
 *
c⁄˚ÆedVoi˚Fœgs
)

1142 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

1143 
öt16_t
 
fs_mu…
;

1144 
öt16_t
 
ms_lo°
;

1145 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

1146 
fs_mu…
 = 
	`WebRtcS∂_DivW32W16ResW16
(
NëEqMaöIn°
->
MCUö°
.
fs
, 8000);

1148 
ms_lo°
 = 
	`WebRtcS∂_DivW32W16ResW16
(

1149 (
öt32_t
Ë
NëEqMaöIn°
->
DSPö°
.
w16_c⁄˚ÆedTS
, (
öt16_t
Ë(8 * 
fs_mu…
));

1150 i‡(
ms_lo°
 > 
NëEqMaöIn°
->
DSPö°
.
mûli£c⁄dsPîCÆl
) ms_lost

1151 
NëEqMaöIn°
->
DSPö°
.
mûli£c⁄dsPîCÆl
;

1153 *
vÆidVoi˚Duøti⁄Ms
 = 
NëEqMaöIn°
->
DSPö°
.
mûli£c⁄dsPîCÆl
 - 
ms_lo°
;

1154 *
c⁄˚ÆedVoi˚Duøti⁄Ms
 = 
ms_lo°
;

1155 i‡(
ms_lo°
 > 0)

1157 *
c⁄˚ÆedVoi˚Fœgs
 = 
WEBRTC_NETEQ_CONCEALMENTFLAG_LOST
;

1161 *
c⁄˚ÆedVoi˚Fœgs
 = 0;

1163 
NëEqMaöIn°
->
DSPö°
.
w16_c⁄˚ÆedTS
 -
ms_lo°
 * (8 * 
fs_mu…
);

1166 
	}
}

1168 
	$WebRtcNëEQ_VQm⁄GëC⁄figuøti⁄
(*
ö°
, 
uöt16_t
 *
absMaxDñayMs
,

1169 
uöt8_t
 *
ad≠èti⁄R©e
)

1172 i‡(
ö°
 =
NULL
)

1178 *
absMaxDñayMs
 = 240;

1179 *
ad≠èti⁄R©e
 = 1;

1181 
	}
}

1183 
	$WebRtcNëEQ_VQm⁄GëRxSèti°ics
(*
ö°
, 
uöt16_t
 *
avgDñayMs
,

1184 
uöt16_t
 *
maxDñayMs
)

1186 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

1187 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

1188 *
avgDñayMs
 = (
uöt16_t
Ë(
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
avgDñayMsQ8
 >> 8);

1189 *
maxDñayMs
 = (
uöt16_t
Ë
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.maxDelayMs;

1191 
	}
}

1199 
	$WebRtcNëEQ_GëNëw‹kSèti°ics
(*
ö°
, 
WebRtcNëEQ_Nëw‹kSèti°ics
 *
°©s
)

1203 
uöt16_t
 
ãmpU16
;

1204 
uöt32_t
 
ãmpU32
, 
ãmpU32_2
;

1205 
numShi·
;

1206 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

1209 i‡(
NëEqMaöIn°
 =
NULL
)  (-1);

1211 
°©s
->
addedSam∂es
 = 
NëEqMaöIn°
->
DSPö°
.
°©In°
.addedSamples;

1217 i‡(
NëEqMaöIn°
->
MCUö°
.
fs
 != 0)

1219 
öt32_t
 
ãmp32
;

1221 
ãmp32
 = 
	`WebRtcNëEQ_PackëBuf„rGëSize
(

1222 &
NëEqMaöIn°
->
MCUö°
.
PackëBuf„r_ö°
,

1223 &
NëEqMaöIn°
->
MCUö°
.
codec_DB_ö°
,

1224 
NëEqMaöIn°
->
MCUö°
.
av_sync
);

1228 
°©s
->
cuºítBuf„rSize
 = (
uöt16_t
)

1229 
	`WebRtcS∂_DivU32U16
(
ãmp32
 * 1000, 
NëEqMaöIn°
->
MCUö°
.
fs
);

1232 
ãmp32
 = (
öt32_t
Ë(
NëEqMaöIn°
->
DSPö°
.
ídPosôi⁄
 -

1233 
NëEqMaöIn°
->
DSPö°
.
curPosôi⁄
);

1234 
°©s
->
cuºítBuf„rSize
 +(
uöt16_t
)

1235 
	`WebRtcS∂_DivU32U16
(
ãmp32
 * 1000, 
NëEqMaöIn°
->
MCUö°
.
fs
);

1240 
°©s
->
cuºítBuf„rSize
 = 0;

1247 i‡(
NëEqMaöIn°
->
MCUö°
.
fs
 != 0)

1250 
°©s
->
¥e„ºedBuf„rSize


1251 (
uöt16_t
Ë
	`WEBRTC_SPL_MUL_16_16
(

1252 (
öt16_t
Ë((
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
.
›tBufLevñ
) >> 8),

1253 
	`WebRtcS∂_DivW32W16ResW16
(

1254 (
öt32_t
Ë
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
.
∑ckëS≥echLíSamp
,

1255 
	`WebRtcS∂_DivW32W16ResW16
–(
öt32_t
Ë
NëEqMaöIn°
->
MCUö°
.
fs
, (
öt16_t
) 1000 )

1259 i‡(
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
.
exåaDñayMs
 > 0)

1261 
°©s
->
¥e„ºedBuf„rSize


1262 +
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
.
exåaDñayMs
;

1268 
°©s
->
¥e„ºedBuf„rSize
 = 0;

1275 
°©s
->
jôãrPóksFound
 =

1276 
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
.
≥akFound
;

1283 
ãmpU32
 = 
NëEqMaöIn°
->
MCUö°
.
œ°Rï‹tTS
;

1285 i‡(
NëEqMaöIn°
->
MCUö°
.
lo°TS
 == 0)

1288 
°©s
->
cuºítPackëLossR©e
 = 0;

1290 i‡(
NëEqMaöIn°
->
MCUö°
.
lo°TS
 < 
ãmpU32
)

1293 
numShi·
 = 
	`WebRtcS∂_N‹mU32
(
NëEqMaöIn°
->
MCUö°
.
lo°TS
);

1295 i‡(
numShi·
 < 14)

1298 
ãmpU32
 = 
	`WEBRTC_SPL_RSHIFT_U32
—empU32, 14-
numShi·
);

1303 
numShi·
 = 14;

1306 i‡(
ãmpU32
 == 0)

1309 
°©s
->
cuºítPackëLossR©e
 = 0;

1314 
ãmpU32
 > 
WEBRTC_SPL_WORD16_MAX
)

1316 
ãmpU32
 >>= 1;

1317 
numShi·
--;

1319 
ãmpU16
 = (
uöt16_t
Ë
ãmpU32
;

1322 
ãmpU32


1323 
	`WEBRTC_SPL_SHIFT_W32
–(
uöt32_t
Ë
NëEqMaöIn°
->
MCUö°
.
lo°TS
, 
numShi·
);

1325 
°©s
->
cuºítPackëLossR©e
 = (
uöt16_t
Ë
	`WebRtcS∂_DivU32U16
(
ãmpU32
,

1326 
ãmpU16
);

1333 
°©s
->
cuºítPackëLossR©e
 = 1 << 14;

1341 
ãmpU32
 = 
NëEqMaöIn°
->
MCUö°
.
œ°Rï‹tTS
;

1344 
ãmpU32_2


1345 
	`WEBRTC_SPL_MUL_16_U16
–(
öt16_t
Ë
NëEqMaöIn°
->
MCUö°
.
PackëBuf„r_ö°
.
∑ckSizeSam∂es
,

1346 
NëEqMaöIn°
->
MCUö°
.
PackëBuf„r_ö°
.
disˇrdedPackës
);

1348 i‡(
ãmpU32_2
 == 0)

1351 
°©s
->
cuºítDisˇrdR©e
 = 0;

1353 i‡(
ãmpU32_2
 < 
ãmpU32
)

1356 
numShi·
 = 
	`WebRtcS∂_N‹mU32
(
ãmpU32_2
);

1358 i‡(
numShi·
 < 14)

1361 
ãmpU32
 = 
	`WEBRTC_SPL_RSHIFT_U32
—empU32, 14-
numShi·
);

1366 
numShi·
 = 14;

1369 i‡(
ãmpU32
 == 0)

1372 
°©s
->
cuºítDisˇrdR©e
 = 0;

1377 
ãmpU32
 > 
WEBRTC_SPL_WORD16_MAX
)

1379 
ãmpU32
 >>= 1;

1380 
numShi·
--;

1382 
ãmpU16
 = (
uöt16_t
Ë
ãmpU32
;

1385 
ãmpU32
 = 
	`WEBRTC_SPL_SHIFT_W32
–
ãmpU32_2
, 
numShi·
);

1387 
°©s
->
cuºítDisˇrdR©e
 = (
uöt16_t
Ë
	`WebRtcS∂_DivU32U16
(
ãmpU32
, 
ãmpU16
);

1394 
°©s
->
cuºítDisˇrdR©e
 = 1 << 14;

1402 
ãmpU32
 = 
NëEqMaöIn°
->
MCUö°
.
œ°Rï‹tTS
;

1404 i‡(
NëEqMaöIn°
->
DSPö°
.
°©In°
.
ac˚ÀøãLígth
 == 0)

1407 
°©s
->
cuºítAc˚ÀøãR©e
 = 0;

1409 i‡(
NëEqMaöIn°
->
DSPö°
.
°©In°
.
ac˚ÀøãLígth
 < 
ãmpU32
)

1412 
numShi·
 = 
	`WebRtcS∂_N‹mU32
(
NëEqMaöIn°
->
DSPö°
.
°©In°
.
ac˚ÀøãLígth
);

1414 i‡(
numShi·
 < 14)

1417 
ãmpU32
 = 
	`WEBRTC_SPL_RSHIFT_U32
—empU32, 14-
numShi·
);

1422 
numShi·
 = 14;

1425 i‡(
ãmpU32
 == 0)

1428 
°©s
->
cuºítAc˚ÀøãR©e
 = 0;

1433 
ãmpU32
 > 
WEBRTC_SPL_WORD16_MAX
)

1435 
ãmpU32
 >>= 1;

1436 
numShi·
--;

1438 
ãmpU16
 = (
uöt16_t
Ë
ãmpU32
;

1441 
ãmpU32


1442 
	`WEBRTC_SPL_SHIFT_W32
–
NëEqMaöIn°
->
DSPö°
.
°©In°
.
ac˚ÀøãLígth
, 
numShi·
);

1444 
°©s
->
cuºítAc˚ÀøãR©e
 = (
uöt16_t
Ë
	`WebRtcS∂_DivU32U16
(
ãmpU32
,

1445 
ãmpU16
);

1452 
°©s
->
cuºítAc˚ÀøãR©e
 = 1 << 14;

1456 
ãmpU32
 = 
NëEqMaöIn°
->
MCUö°
.
œ°Rï‹tTS
;

1458 i‡(
NëEqMaöIn°
->
DSPö°
.
°©In°
.
ex∑ndLígth
 == 0)

1461 
°©s
->
cuºítEx∑ndR©e
 = 0;

1463 i‡(
NëEqMaöIn°
->
DSPö°
.
°©In°
.
ex∑ndLígth
 < 
ãmpU32
)

1466 
numShi·
 = 
	`WebRtcS∂_N‹mU32
(
NëEqMaöIn°
->
DSPö°
.
°©In°
.
ex∑ndLígth
);

1468 i‡(
numShi·
 < 14)

1471 
ãmpU32
 = 
	`WEBRTC_SPL_RSHIFT_U32
—empU32, 14-
numShi·
);

1476 
numShi·
 = 14;

1479 i‡(
ãmpU32
 == 0)

1482 
°©s
->
cuºítEx∑ndR©e
 = 0;

1487 
ãmpU32
 > 
WEBRTC_SPL_WORD16_MAX
)

1489 
ãmpU32
 >>= 1;

1490 
numShi·
--;

1492 
ãmpU16
 = (
uöt16_t
Ë
ãmpU32
;

1495 
ãmpU32


1496 
	`WEBRTC_SPL_SHIFT_W32
–
NëEqMaöIn°
->
DSPö°
.
°©In°
.
ex∑ndLígth
, 
numShi·
);

1498 
°©s
->
cuºítEx∑ndR©e
 = (
uöt16_t
Ë
	`WebRtcS∂_DivU32U16
(
ãmpU32
, 
ãmpU16
);

1505 
°©s
->
cuºítEx∑ndR©e
 = 1 << 14;

1509 
ãmpU32
 = 
NëEqMaöIn°
->
MCUö°
.
œ°Rï‹tTS
;

1511 i‡(
NëEqMaöIn°
->
DSPö°
.
°©In°
.
¥ìm±iveLígth
 == 0)

1514 
°©s
->
cuºítPªem±iveR©e
 = 0;

1516 i‡(
NëEqMaöIn°
->
DSPö°
.
°©In°
.
¥ìm±iveLígth
 < 
ãmpU32
)

1519 
numShi·
 = 
	`WebRtcS∂_N‹mU32
(
NëEqMaöIn°
->
DSPö°
.
°©In°
.
¥ìm±iveLígth
);

1521 i‡(
numShi·
 < 14)

1524 
ãmpU32
 = 
	`WEBRTC_SPL_RSHIFT_U32
—empU32, 14-
numShi·
);

1529 
numShi·
 = 14;

1532 i‡(
ãmpU32
 == 0)

1535 
°©s
->
cuºítPªem±iveR©e
 = 0;

1540 
ãmpU32
 > 
WEBRTC_SPL_WORD16_MAX
)

1542 
ãmpU32
 >>= 1;

1543 
numShi·
--;

1545 
ãmpU16
 = (
uöt16_t
Ë
ãmpU32
;

1548 
ãmpU32


1549 
	`WEBRTC_SPL_SHIFT_W32
–
NëEqMaöIn°
->
DSPö°
.
°©In°
.
¥ìm±iveLígth
, 
numShi·
);

1551 
°©s
->
cuºítPªem±iveR©e
 = (
uöt16_t
Ë
	`WebRtcS∂_DivU32U16
(
ãmpU32
,

1552 
ãmpU16
);

1559 
°©s
->
cuºítPªem±iveR©e
 = 1 << 14;

1562 
°©s
->
˛ockDri·PPM
 = 
	`WebRtcNëEQ_AvîageIAT
(

1563 &
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
);

1566 
	`WebRtcNëEQ_Re£tMcuInCÆlSèts
(&(
NëEqMaöIn°
->
MCUö°
));

1567 
	`WebRtcNëEQ_CÀ¨InCÆlSèts
(&(
NëEqMaöIn°
->
DSPö°
));

1570 
	}
}

1572 
	$WebRtcNëEQ_GëRawFømeWaôögTimes
(*
ö°
,

1573 
max_Àngth
,

1574 * 
waôög_times_ms
) {

1575 
i
 = 0;

1576 
MaöIn°_t
 *
maö_ö°
 = (MaöIn°_t*Ë
ö°
;

1577 i‡(
maö_ö°
 =
NULL
)  -1;

1579 (
i
 < 
max_Àngth
Ë&& (ò< 
maö_ö°
->
MCUö°
.
Àn_waôög_times
)) {

1580 
waôög_times_ms
[
i
] = 
maö_ö°
->
MCUö°
.
waôög_times
[i] *

1581 
maö_ö°
->
DSPö°
.
mûli£c⁄dsPîCÆl
;

1582 ++
i
;

1584 
	`as£π
(
i
 <
kLíWaôögTimes
);

1585 
	`WebRtcNëEQ_Re£tWaôögTimeSèts
(&
maö_ö°
->
MCUö°
);

1586  
i
;

1587 
	}
}

1613 
	$WebRtcNëEQ_SëVADIn°™˚
(*
NëEQ_ö°
, *
VAD_ö°
,

1614 
WebRtcNëEQ_VADInôFun˘i⁄
 
öôFun˘i⁄
,

1615 
WebRtcNëEQ_VADSëmodeFun˘i⁄
 
£tmodeFun˘i⁄
,

1616 
WebRtcNëEQ_VADFun˘i⁄
 
VADFun˘i⁄
)

1620 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
NëEQ_ö°
;

1621 i‡(
NëEqMaöIn°
 =
NULL
)

1626 #ifde‡
NETEQ_VAD


1629 
NëEqMaöIn°
->
DSPö°
.
VADIn°
.
VADSèã
 = 
VAD_ö°
;

1632 
NëEqMaöIn°
->
DSPö°
.
VADIn°
.
öôFun˘i⁄
 = initFunction;

1633 
NëEqMaöIn°
->
DSPö°
.
VADIn°
.
£tmodeFun˘i⁄
 = setmodeFunction;

1634 
NëEqMaöIn°
->
DSPö°
.
VADIn°
.
VADFun˘i⁄
 = VADFunction;

1637 (
	`WebRtcNëEQ_InôVAD
(&
NëEqMaöIn°
->
DSPö°
.
VADIn°
, NëEqMaöIn°->DSPö°.
fs
));

1643 
	}
}

1662 
	$WebRtcNëEQ_SëVADMode
(*
ö°
, 
mode
)

1666 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

1667 i‡(
NëEqMaöIn°
 =
NULL
)

1672 #ifde‡
NETEQ_VAD


1675 (
	`WebRtcNëEQ_SëVADModeI¡î«l
(&
NëEqMaöIn°
->
DSPö°
.
VADIn°
, 
mode
));

1681 
	}
}

1683 
	$WebRtcNëEQ_GëPro˚ssögA˘ivôy
(*
ö°
,

1684 
WebRtcNëEQ_Pro˚ssögA˘ivôy
 *
°©s
) {

1685 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

1687 
°©s
->
ac˚Àøã_bgn_ßm∂es
 =

1688 
NëEqMaöIn°
->
DSPö°
.
a˘ivôy_°©s
.
ac˚Àøã_bgn_ßm∂es
;

1689 
°©s
->
ac˚Àøã_n‹mÆ_ßm∂es
 =

1690 
NëEqMaöIn°
->
DSPö°
.
a˘ivôy_°©s
.
ac˚œøã_n‹mÆ_ßm∂es
;

1692 
°©s
->
ex∑nd_bgn_ßm≥ls
 =

1693 
NëEqMaöIn°
->
DSPö°
.
a˘ivôy_°©s
.
ex∑nd_bgn_ßm∂es
;

1694 
°©s
->
ex∑nd_n‹mÆ_ßm∂es
 =

1695 
NëEqMaöIn°
->
DSPö°
.
a˘ivôy_°©s
.
ex∑nd_n‹mÆ_ßm∂es
;

1697 
°©s
->
¥ìm±ive_ex∑nd_bgn_ßm∂es
 =

1698 
NëEqMaöIn°
->
DSPö°
.
a˘ivôy_°©s
.
¥ìm±ive_ex∑nd_bgn_ßm∂es
;

1699 
°©s
->
¥ìm±ive_ex∑nd_n‹mÆ_ßm∂es
 =

1700 
NëEqMaöIn°
->
DSPö°
.
a˘ivôy_°©s
.
¥ìm±ive_ex∑nd_n‹mÆ_ßm∂es
;

1702 
°©s
->
mîge_ex∑nd_bgn_ßm∂es
 =

1703 
NëEqMaöIn°
->
DSPö°
.
a˘ivôy_°©s
.
mîge_ex∑nd_bgn_ßm∂es
;

1704 
°©s
->
mîge_ex∑nd_n‹mÆ_ßm∂es
 =

1705 
NëEqMaöIn°
->
DSPö°
.
a˘ivôy_°©s
.
mîge_ex∑nd_n‹mÆ_ßm∂es
;

1707 
	`WebRtcNëEQ_CÀ¨A˘ivôySèts
(&
NëEqMaöIn°
->
DSPö°
);

1708 
	}
}

1710 
	$WebRtcNëEQ_E«bÀAVSync
(* 
ö°
, 
íabÀ
) {

1711 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

1712 
NëEqMaöIn°
->
MCUö°
.
av_sync
 = (
íabÀ
 != 0) ? 1 : 0;

1713 
	}
}

1715 
	$WebRtcNëEQ_RecInSyncRTP
(* 
ö°
, 
WebRtcNëEQ_RTPInfo
* 
πp_öfo
,

1716 
uöt32_t
 
ª˚ive_time°amp
) {

1717 
MaöIn°_t
 *
NëEqMaöIn°
 = (MaöIn°_t*Ë
ö°
;

1718 i‡(
NëEqMaöIn°
->
MCUö°
.
av_sync
 == 0)

1720 i‡(
	`WebRtcNëEQ_RecInRTPSåu˘
(
ö°
, 
πp_öfo
, 
kSyncPaylﬂd
,

1721 
SYNC_PAYLOAD_LEN_BYTES
,

1722 
ª˚ive_time°amp
) < 0) {

1725  
SYNC_PAYLOAD_LEN_BYTES
;

1726 
	}
}

1728 
	$WebRtcNëEQ_GëRequúedDñayMs
(c⁄° * 
ö°
) {

1729 c⁄° 
MaöIn°_t
* 
NëEqMaöIn°
 = (MaöIn°_t*)
ö°
;

1730 c⁄° 
AutomodeIn°_t
* 
auto_mode
 = (
NëEqMaöIn°
 =
NULL
) ? NULL :

1731 &
NëEqMaöIn°
->
MCUö°
.
Buf„rSèt_ö°
.
Automode_ö°
;

1734 i‡(
NëEqMaöIn°
 =
NULL
 || 
auto_mode
 == NULL)

1737 i‡(
NëEqMaöIn°
->
MCUö°
.
fs
 == 0)

1745  (
auto_mode
->
ªquúed_dñay_q8
 *

1746 ((
auto_mode
->
∑ckëS≥echLíSamp
 * 1000Ë/ 
NëEqMaöIn°
->
MCUö°
.
fs
) +

1748 
	}
}

1750 
	$WebRtcNëEQ_DecodedRçInfo
(c⁄° * 
ö°
,

1751 * 
£quí˚_numbî
,

1752 
uöt32_t
* 
time°amp
) {

1753 c⁄° 
MaöIn°_t
 *
NëEqMaöIn°
 = (
ö°
 =
NULL
) ? NULL :

1754 (c⁄° 
MaöIn°_t
*Ë
ö°
;

1755 i‡(
NëEqMaöIn°
->
MCUö°
.
decoded_∑ckë_£quí˚_numbî
 < 0)

1757 *
£quí˚_numbî
 = 
NëEqMaöIn°
->
MCUö°
.
decoded_∑ckë_£quí˚_numbî
;

1758 *
time°amp
 = 
NëEqMaöIn°
->
MCUö°
.
decoded_∑ckë_time°amp
;

1760 
	}
}

	@webrtc_neteq.h

16 
	~"ty≥defs.h
"

18 #i‚de‡
WEBRTC_NETEQ_H


19 
	#WEBRTC_NETEQ_H


	)

21 #ifde‡
__˝lu•lus


30 
	eWebRtcNëEQDecodî


32 
kDecodîRe£rvedSèπ
,

33 
kDecodîPCMu
,

34 
kDecodîPCMa
,

35 
kDecodîPCMu_2ch
,

36 
kDecodîPCMa_2ch
,

37 
kDecodîILBC
,

38 
kDecodîISAC
,

39 
kDecodîISACswb
,

40 
kDecodîISACfb
,

41 
kDecodîPCM16B
,

42 
kDecodîPCM16Bwb
,

43 
kDecodîPCM16Bswb32kHz
,

44 
kDecodîPCM16Bswb48kHz
,

45 
kDecodîPCM16B_2ch
,

46 
kDecodîPCM16Bwb_2ch
,

47 
kDecodîPCM16Bswb32kHz_2ch
,

48 
kDecodîG722
,

49 
kDecodîG722_2ch
,

50 
kDecodîRED
,

51 
kDecodîAVT
,

52 
kDecodîCNG
,

53 
kDecodîArbôøry
,

54 
kDecodîG729
,

55 
kDecodîG729_1
,

56 
kDecodîG726_16
,

57 
kDecodîG726_24
,

58 
kDecodîG726_32
,

59 
kDecodîG726_40
,

60 
kDecodîG722_1_16
,

61 
kDecodîG722_1_24
,

62 
kDecodîG722_1_32
,

63 
kDecodîG722_1C_24
,

64 
kDecodîG722_1C_32
,

65 
kDecodîG722_1C_48
,

66 
kDecodîOpus
,

67 
kDecodîSPEEX_8
,

68 
kDecodîSPEEX_16
,

69 
kDecodîCELT_32
,

70 
kDecodîCELT_32_2ch
,

71 
kDecodîGSMFR
,

72 
kDecodîAMR
,

73 
kDecodîAMRWB
,

74 
kDecodîRe£rvedEnd


77 
	eWebRtcNëEQNëw‹kTy≥


79 
kUDPN‹mÆ
,

80 
kUDPVideoSync
,

81 
kTCPN‹mÆ
,

82 
kTCPL¨geJôãr
,

83 
kTCPXL¨geJôãr


86 
	eWebRtcNëEQOuçutTy≥


88 
kOuçutN‹mÆ
,

89 
kOuçutPLC
,

90 
kOuçutCNG
,

91 
kOuçutPLCtoCNG
,

92 
kOuçutVADPassive


95 
	eWebRtcNëEQPœyoutMode


97 
kPœyoutOn
, 
kPœyoutOff
, 
kPœyoutFax
, 
kPœyoutSåómög


101 
	eWebRtcNëEQBGNMode


103 
kBGNOn
,

104 
kBGNFade
,

105 
kBGNOff


114 
öt16_t
 (*
	tWebRtcNëEQ_FuncDecode
)(* 
	t°©e
, 
	töt16_t
* 
	tícoded
,

115 
	töt16_t
 
	tÀn
, i¡16_t* 
	tdecoded
,

116 
	töt16_t
* 
	t•ìchTy≥
);

117 
öt16_t
 (*
	tWebRtcNëEQ_FuncDecodePLC
)(* 
	t°©e
, 
	töt16_t
* 
	tdecoded
,

118 
	töt16_t
 
	t‰ames
);

119 
öt16_t
 (*
	tWebRtcNëEQ_FuncDecodeInô
)(* 
	t°©e
);

120 
öt16_t
 (*
	tWebRtcNëEQ_FuncAddL©ePkt
)(* 
	t°©e
, 
	töt16_t
* 
	tícoded
,

121 
	töt16_t
 
	tÀn
);

122 
öt16_t
 (*
	tWebRtcNëEQ_FuncGëMDöfo
)(* 
	t°©e
);

123 
öt16_t
 (*
	tWebRtcNëEQ_FuncGëPôchInfo
)(* 
	t°©e
, 
	töt16_t
* 
	tícoded
,

124 
	töt16_t
* 
	tÀngth
);

125 
öt16_t
 (*
	tWebRtcNëEQ_FuncUpdBWE°
)(* 
	t°©e
, c⁄° 
	tuöt16_t
 *
	tícoded
,

126 
	töt32_t
 
	t∑ckë_size
,

127 
	tuöt16_t
 
	tπp_£q_numbî
,

128 
	tuöt32_t
 
	t£nd_ts
,

129 
	tuöt32_t
 
	t¨r_ts
);

130 (*
WebRtcNëEQ_FuncDuøti⁄E°
)(* 
	t°©e
, c⁄° 
	tuöt8_t
* 
	t∑ylﬂd
,

131 
	t∑ylﬂd_Àngth_byãs
);

132 
öt16_t
 (*
	tWebRtcNëEQ_FuncGëEº‹Code
)(* 
	t°©e
);

140 
WebRtcNëEQDecodî
 
codec
;

141 
öt16_t
 
∑ylﬂdTy≥
;

142 
WebRtcNëEQ_FuncDecode
 
funcDecode
;

143 
WebRtcNëEQ_FuncDecode
 
funcDecodeRCU
;

144 
WebRtcNëEQ_FuncDecodePLC
 
funcDecodePLC
;

145 
WebRtcNëEQ_FuncDecodeInô
 
funcDecodeInô
;

146 
WebRtcNëEQ_FuncAddL©ePkt
 
funcAddL©ePkt
;

147 
WebRtcNëEQ_FuncGëMDöfo
 
funcGëMDöfo
;

148 
WebRtcNëEQ_FuncGëPôchInfo
 
funcGëPôch
;

149 
WebRtcNëEQ_FuncUpdBWE°
 
funcUpdBWE°
;

150 
WebRtcNëEQ_FuncDuøti⁄E°
 
funcDuøti⁄E°
;

151 
WebRtcNëEQ_FuncGëEº‹Code
 
funcGëEº‹Code
;

152 * 
codec_°©e
;

153 
uöt16_t
 
codec_fs
;

154 } 
	tWebRtcNëEQ_CodecDef
;

158 
uöt16_t
 
‰a˘i⁄_lo°
;

159 
uöt32_t
 
cum_lo°
;

160 
uöt32_t
 
ext_max
;

161 
uöt32_t
 
jôãr
;

162 } 
	tWebRtcNëEQ_RTCPSèt
;

170 
	#WEBRTC_NETEQ_MAX_ERROR_NAME
 40

	)

171 
WebRtcNëEQ_GëEº‹Code
(*
ö°
);

172 
WebRtcNëEQ_GëEº‹Name
(
îr‹Code
, *
îr‹Name
, 
maxSåLí
);

176 
WebRtcNëEQ_AssignSize
(*
sizeöbyãs
);

177 
WebRtcNëEQ_Assign
(**
ö°
, *
NETEQ_ö°_Addr
);

178 
WebRtcNëEQ_GëRecommídedBuf„rSize
(*
ö°
, c⁄° 
WebRtcNëEQDecodî
 *
codec
,

179 
noOfCodecs
, 
WebRtcNëEQNëw‹kTy≥
 
nwTy≥
,

180 *
MaxNoOfPackës
, *
sizeöbyãs
,

181 * 
≥r_∑ckë_ovîhód_byãs
);

182 
WebRtcNëEQ_AssignBuf„r
(*
ö°
, 
MaxNoOfPackës
, *
NETEQ_Buf„r_Addr
,

183 
sizeöbyãs
);

187 
WebRtcNëEQ_Inô
(*
ö°
, 
uöt16_t
 
fs
);

188 
WebRtcNëEQ_SëAVTPœyout
(*
ö°
, 
PœyoutAVT⁄
);

189 
WebRtcNëEQ_SëExåaDñay
(*
ö°
, 
DñayInMs
);

190 
WebRtcNëEQ_SëPœyoutMode
(*
ö°
, 
WebRtcNëEQPœyoutMode
 
∂ayoutMode
);

191 
WebRtcNëEQ_SëBGNMode
(*
ö°
, 
WebRtcNëEQBGNMode
 
bgnMode
);

192 
WebRtcNëEQ_GëBGNMode
(c⁄° *
ö°
, 
WebRtcNëEQBGNMode
 *
bgnMode
);

196 
WebRtcNëEQ_CodecDbRe£t
(*
ö°
);

197 
WebRtcNëEQ_CodecDbAdd
(*
ö°
, 
WebRtcNëEQ_CodecDef
 *
codecIn°
);

198 
WebRtcNëEQ_CodecDbRemove
(*
ö°
, 
WebRtcNëEQDecodî
 
codec
);

199 
WebRtcNëEQ_CodecDbGëSizeInfo
(*
ö°
, 
öt16_t
 *
U£dE¡rõs
,

200 
öt16_t
 *
MaxE¡rõs
);

201 
WebRtcNëEQ_CodecDbGëCodecInfo
(*
ö°
, 
öt16_t
 
E¡ry
,

202 
WebRtcNëEQDecodî
 *
codec
);

206 
WebRtcNëEQ_RecIn
(*
ö°
, 
öt16_t
 *
p_w16d©agøm°¨t
, i¡16_à
w16_RTPÀn
,

207 
uöt32_t
 
uw32_timeRec
);

208 
WebRtcNëEQ_RecOut
(*
ö°
, 
öt16_t
 *
pw16_outD©a
, i¡16_à*
pw16_Àn
);

209 
WebRtcNëEQ_GëRTCPSèts
(*
ö°
, 
WebRtcNëEQ_RTCPSèt
 *
RTCP_ö°
);

210 
WebRtcNëEQ_GëRTCPSètsNoRe£t
(*
ö°
, 
WebRtcNëEQ_RTCPSèt
 *
RTCP_ö°
);

211 
WebRtcNëEQ_GëS≥echTimeSèmp
(*
ö°
, 
uöt32_t
 *
time°amp
);

212 
WebRtcNëEQ_DecodedRçInfo
(c⁄° * 
ö°
,

213 * 
£quí˚_numbî
,

214 
uöt32_t
* 
time°amp
);

215 
WebRtcNëEQ_GëS≥echOuçutTy≥
(*
ö°
, 
WebRtcNëEQOuçutTy≥
 *
ouçutTy≥
);

218 
WebRtcNëEQ_VQm⁄RecOutSèti°ics
(*
ö°
, 
uöt16_t
 *
vÆidVoi˚Duøti⁄Ms
,

219 
uöt16_t
 *
c⁄˚ÆedVoi˚Duøti⁄Ms
,

220 
uöt8_t
 *
c⁄˚ÆedVoi˚Fœgs
);

221 
WebRtcNëEQ_VQm⁄GëC⁄figuøti⁄
(*
ö°
, 
uöt16_t
 *
absMaxDñayMs
,

222 
uöt8_t
 *
ad≠èti⁄R©e
);

223 
WebRtcNëEQ_VQm⁄GëRxSèti°ics
(*
ö°
, 
uöt16_t
 *
avgDñayMs
,

224 
uöt16_t
 *
maxDñayMs
);

226 #ifde‡
__˝lu•lus


	@webrtc_neteq_if.c

1 
	~<as£π.h
>

2 
	~<°rögs.h
>

4 
	~<time.h
>

5 
	~<°dlib.h
>

7 
	~"öãrÁ˚/webπc_√ãq.h
"

8 
	~"öãrÁ˚/webπc_√ãq_öã∫Æ.h
"

9 
	~"öãrÁ˚/webπc_√ãq_hñp_ma¸os.h
"

10 
	~"öãrÁ˚/webπc_√ãq_if.h
"

12 
	~"g722_öãrÁ˚.h
"

13 
	~"g711_öãrÁ˚.h
"

15 
WebRtcNëEQ_Inô_ö°
(**
ö°
, 
≠p_mem‹y_Æloc_t
 
Æloc_cb
, *
mempoﬁ
,

16 #ifde‡
_USE_FS_CODECS_


17 *
decodî
,

19 
uöt32_t
 
øã
, uöt32_à
∑ylﬂd
, c⁄° *
code˙ame
, 
uöt16_t
 
∑ckë_ms
)

21 
	gmem‹ySize
;

22 
WebRtcNëEQDecodî
 
	gu£dCodec
;

23 
öt16_t
 *
	gjb_buf„r
;

24 
	gmax_pkts
, 
	gbuf_size
, 
	govîhód
;

25 
WebRtcNëEQ_CodecDef
 
	gcodecIn°
;

27 
WebRtcNëEQ_AssignSize
(&
mem‹ySize
);

28 
as£π
(
WebRtcNëEQ_Assign
(
ö°
, 
Æloc_cb
(
mempoﬁ
, 
mem‹ySize
)) == 0);

29 
as£π
(
WebRtcNëEQ_Inô
(*
ö°
, 
øã
, 
∑ckë_ms
) == 0);

30 
as£π
(
WebRtcNëEQ_SëAVTPœyout
(*
ö°
, 0) == 0);

31 
as£π
(
WebRtcNëEQ_SëPœyoutMode
(*
ö°
, 
kPœyoutOn
) == 0);

33 
	g∑ylﬂd
) {

36 
u£dCodec
 = 
kDecodîPCMu
;

38 
SET_CODEC_PAR
(
codecIn°
, 
u£dCodec
, 
∑ylﬂd
, 
NULL
, 
øã
);

39 
SET_PCMU_FUNCTIONS
(
codecIn°
);

45 
G722DecIn°
 *
dec_ö°
;

47 
	gu£dCodec
 = 
kDecodîG722
;

49 #ifde‡
_USE_FS_CODECS_


50 
as£π
(
WebRtcG722_AssignDecodî
(&
dec_ö°
, 
decodî
) == 0);

52 
as£π
(
WebRtcG722_Cª©eDecodî
(&
dec_ö°
) == 0);

54 
SET_CODEC_PAR
(
codecIn°
, 
u£dCodec
, 
∑ylﬂd
, 
dec_ö°
, 
øã
);

55 
SET_G722_FUNCTIONS
(
codecIn°
);

59 i‡(
∑ylﬂd
 >= 96) {

60 i‡(!
°rˇ£cmp
(
code˙ame
, "opus")) {

61 
OpusDecIn°
* 
dec_ö°
;

63 
	gu£dCodec
 = 
kDecodîOpus
;

65 
as£π
(
WebRtcOpus_DecodîCª©e
(&
dec_ö°
, 1) == 0);

66 
SET_CODEC_PAR
(
codecIn°
, 
u£dCodec
, 
∑ylﬂd
, 
dec_ö°
, 
øã
);

67 
SET_OPUS_FUNCTIONS
(
codecIn°
);

71 
as£π
(0);

74 
as£π
(
WebRtcNëEQ_CodecDbAdd
(*
ö°
, &
codecIn°
) == 0);

75 
as£π
(
WebRtcNëEQ_GëRecommídedBuf„rSize
(*
ö°
, &
u£dCodec
, 1,

76 
kUDPN‹mÆ
, &
max_pkts
, &
buf_size
, &
ovîhód
) == 0);

77 
	gjb_buf„r
 = (
öt16_t
 *Ë
Æloc_cb
(
mempoﬁ
, 
buf_size
);

78 
as£π
(
WebRtcNëEQ_AssignBuf„r
(*
ö°
, 
max_pkts
, 
jb_buf„r
, 
buf_size
) == 0);

83 c⁄° 
uöt32_t
 
	gkMaskTime°amp
 = 0x03ffffff;

85 
	$WebRtcNëEQ_In£π
(*
ö°
, 
öt8_t
 *
∑ylﬂd
, 
uöt32_t
 
∑ylﬂd_Àn
,

86 
uöt8_t
 
∑ylﬂd_ty≥
, 
uöt16_t
 
£qno
,

87 
uöt32_t
 
ts
, uöt32_à
s§c
, 
uöt8_t
 
m¨kî
)

89 
WebRtcNëEQ_RTPInfo
 
πpöfo
;

90 
time•ec
 
•ec
;

91 
uöt32_t
 
now_ö_ms
;

93 
πpöfo
.
∑ylﬂdTy≥
 = 
∑ylﬂd_ty≥
;

94 
πpöfo
.
£quí˚Numbî
 = 
£qno
;

95 
πpöfo
.
timeSèmp
 = 
ts
;

96 
πpöfo
.
SSRC
 = 
s§c
;

97 
πpöfo
.
m¨kîBô
 = 
m¨kî
;

99 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
•ec
);

100 
now_ö_ms
 = (
•ec
.
tv_£c
Ë* 1000 + (•ec.
tv_n£c
) / 1000000 ;

105 
now_ö_ms
 = (now_ö_m†& 
kMaskTime°amp
) * 16;

107  
	`WebRtcNëEQ_RecInRTPSåu˘
(
ö°
, &
πpöfo
, 
∑ylﬂd
, 
∑ylﬂd_Àn
, 
now_ö_ms
);

108 
	}
}

110 
	$WebRtcNëEQ_Exåa˘
(*
ö°
, 
öt8_t
 *
pcm_d©a
, 
uöt32_t
 *
ouéí
)

112 
ªt
 = 
	`WebRtcNëEQ_RecOut
(
ö°
, (
öt16_t
 *Ë
pcm_d©a
, 
ouéí
);

113 *
ouéí
 *= 2;

115  
ªt
;

116 
	}
}

	@webrtc_neteq_if.h

1 #i‚de‡
__WEBRTC_NETEQ_H__


2 
	#__WEBRTC_NETEQ_H__


	)

4 * (*
	t≠p_mem‹y_Æloc_t
Ë(*
	tpoﬁ
, 
	tuöt32_t
 
	tsize
);

6 
WebRtcNëEQ_Inô_ö°
(**
ö°
, 
≠p_mem‹y_Æloc_t
 
Æloc_cb
, *
mempoﬁ
,

7 
uöt32_t
 
øã
, uöt32_à
∑ylﬂd
, c⁄° *
code˙ame
);

9 
WebRtcNëEQ_In£π
(*
ö°
, 
öt8_t
 *
∑ylﬂd
, 
uöt32_t
 
∑ylﬂd_Àn
,

10 
uöt8_t
 
∑ylﬂd_ty≥
, 
uöt16_t
 
£qno
,

11 
uöt32_t
 
ts
, uöt32_à
s§c
, 
uöt8_t
 
m¨kî
);

13 
WebRtcNëEQ_Exåa˘
(*
ö°
, 
öt8_t
 *
pcm_d©a
, 
uöt32_t
 *
ouéí
);

	@webrtc_neteq_internal.h

15 
	~"ty≥defs.h
"

17 #i‚de‡
WEBRTC_NETEQ_INTERNAL_H


18 
	#WEBRTC_NETEQ_INTERNAL_H


	)

20 #ifde‡
__˝lu•lus


27 
uöt8_t
 
∑ylﬂdTy≥
;

28 
uöt16_t
 
£quí˚Numbî
;

29 
uöt32_t
 
timeSèmp
;

30 
uöt32_t
 
SSRC
;

31 
uöt8_t
 
m¨kîBô
;

32 } 
	tWebRtcNëEQ_RTPInfo
;

50 
WebRtcNëEQ_RecInRTPSåu˘
(*
ö°
, 
WebRtcNëEQ_RTPInfo
 *
πpInfo
,

51 c⁄° 
uöt8_t
 *
∑ylﬂdPå
, 
öt16_t
 
∑ylﬂdLíByãs
,

52 
uöt32_t
 
timeRec
);

64 
WebRtcNëEQ_GëMa°îSœveInfoSize
();

89 
WebRtcNëEQ_RecOutMa°îSœve
(*
ö°
, 
öt16_t
 *
pw16_outD©a
,

90 
öt16_t
 *
pw16_Àn
, *
msInfo
,

91 
öt16_t
 
isMa°î
);

95 
uöt16_t
 
cuºítBuf„rSize
;

96 
uöt16_t
 
¥e„ºedBuf„rSize
;

97 
uöt16_t
 
jôãrPóksFound
;

99 
uöt16_t
 
cuºítPackëLossR©e
;

100 
uöt16_t
 
cuºítDisˇrdR©e
;

101 
uöt16_t
 
cuºítEx∑ndR©e
;

104 
uöt16_t
 
cuºítPªem±iveR©e
;

106 
uöt16_t
 
cuºítAc˚ÀøãR©e
;

108 
öt32_t
 
˛ockDri·PPM
;

110 
addedSam∂es
;

112 } 
	tWebRtcNëEQ_Nëw‹kSèti°ics
;

118 
WebRtcNëEQ_GëNëw‹kSèti°ics
(*
ö°
, 
WebRtcNëEQ_Nëw‹kSèti°ics
 *
°©s
);

123 
ac˚Àøã_bgn_ßm∂es
;

126 
ac˚Àøã_n‹mÆ_ßm∂es
;

129 
ex∑nd_bgn_ßm≥ls
;

132 
ex∑nd_n‹mÆ_ßm∂es
;

136 
¥ìm±ive_ex∑nd_bgn_ßm∂es
;

140 
¥ìm±ive_ex∑nd_n‹mÆ_ßm∂es
;

144 
mîge_ex∑nd_bgn_ßm∂es
;

148 
mîge_ex∑nd_n‹mÆ_ßm∂es
;

149 } 
	tWebRtcNëEQ_Pro˚ssögA˘ivôy
;

157 
WebRtcNëEQ_GëPro˚ssögA˘ivôy
(* 
ö°
,

158 
WebRtcNëEQ_Pro˚ssögA˘ivôy
* 
°©
);

167 
WebRtcNëEQ_GëRawFømeWaôögTimes
(*
ö°
,

168 
max_Àngth
,

169 * 
waôög_times_ms
);

183 (*
WebRtcNëEQ_VADInôFun˘i⁄
)(*
	tVAD_ö°
);

184 (*
WebRtcNëEQ_VADSëmodeFun˘i⁄
)(*
	tVAD_ö°
, 
	tmode
);

185 (*
WebRtcNëEQ_VADFun˘i⁄
)(*
	tVAD_ö°
, 
	tfs
,

186 
	töt16_t
 *
	t‰ame
, 
	t‰ameLí
);

212 
WebRtcNëEQ_SëVADIn°™˚
(*
NëEQ_ö°
, *
VAD_ö°
,

213 
WebRtcNëEQ_VADInôFun˘i⁄
 
öôFun˘i⁄
,

214 
WebRtcNëEQ_VADSëmodeFun˘i⁄
 
£tmodeFun˘i⁄
,

215 
WebRtcNëEQ_VADFun˘i⁄
 
VADFun˘i⁄
);

234 
WebRtcNëEQ_SëVADMode
(*
NëEQ_ö°
, 
mode
);

253 
WebRtcNëEQ_RecOutNoDecode
(*
ö°
, 
öt16_t
 *
pw16_outD©a
,

254 
öt16_t
 *
pw16_Àn
);

272 
WebRtcNëEQ_FlushBuf„rs
(*
ö°
);

289 
WebRtcNëEQ_E«bÀAVSync
(* 
ö°
, 
íabÀ
);

308 
WebRtcNëEQ_RecInSyncRTP
(* 
ö°
,

309 
WebRtcNëEQ_RTPInfo
* 
πp_öfo
,

310 
uöt32_t
 
ª˚ive_time°amp
);

317 
WebRtcNëEQ_SëMöimumDñay
(*
ö°
, 
möimum_dñay_ms
);

323 
WebRtcNëEQ_GëRequúedDñayMs
(c⁄° * 
ö°
);

325 #ifde‡
__˝lu•lus


	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/memory.h

23 #i‚def 
_MEMORY_H


24 
	#_MEMORY_H
 1

	)

26 
	~<„©uªs.h
>

29 #i‚def 
_STRING_H


30 
	~<°rög.h
>

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/strings.h

20 #i‚def 
_STRINGS_H


21 
	#_STRINGS_H
 1

	)

26 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


28 
	~<„©uªs.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

33 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

34 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

37 
	g__BEGIN_DECLS


39 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


41 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

42 
__THROW
 
__©åibuã_puª__
;

45 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

48 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

51 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


54 *
	`ödex
 (*
__s
, 
__c
)

55 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

56 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

59 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


60 
__exã∫_Æways_ölöe
 *

61 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
__exã∫_Æways_ölöe
 
__c⁄°
 *

67 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


69  
	`__buûtö_ödex
 (
__s
, 
__c
);

72 
	}
}

74 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

75 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


82 *
	`rödex
 (*
__s
, 
__c
)

83 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

84 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

87 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


88 
__exã∫_Æways_ölöe
 *

89 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
__exã∫_Æways_ölöe
 
__c⁄°
 *

95 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


97  
	`__buûtö_rödex
 (
__s
, 
__c
);

100 
	}
}

102 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


110 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

114 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

115 
__THROW
 
__©åibuã_puª__
;

118 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

119 
__THROW
 
__©åibuã_puª__
;

121 #ifdef 
__USE_XOPEN2K8


125 
	~<xloˇÀ.h
>

129 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

130 
__loˇÀ_t
 
__loc
)

131 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

134 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
112
1951
accelerate.c
automode.c
automode.h
bgn_update.c
buffer_stats.h
bufstats_decision.c
cng_internal.c
codec_db.c
codec_db.h
codec_db_defines.h
complex_bit_reverse.c
complex_fft.c
complex_fft_tables.h
copy_set_operations.c
correlator.c
cpu_features_wrapper.h
cross_correlation.c
delay_logging.h
division_operations.c
dot_product_with_scale.c
downsample_fast.c
dsp.c
dsp.h
dsp_helpfunctions.c
dsp_helpfunctions.h
dtmf_buffer.c
dtmf_buffer.h
dtmf_tonegen.c
dtmf_tonegen.h
expand.c
filter_ar_fast_q12.c
filter_ma_fast_q12.c
g711.h
g711_interface.c
g711_interface.h
g722_decode.c
g722_enc_dec.h
g722_interface.c
g722_interface.h
ilbc_specific_functions.c
interface/neteq_statistics.h
interface/webrtc_neteq.h
interface/webrtc_neteq_help_macros.h
interface/webrtc_neteq_if.h
interface/webrtc_neteq_internal.h
levinson_durbin.c
mcu.h
mcu_address_init.c
mcu_dsp_common.c
mcu_dsp_common.h
mcu_reset.c
merge.c
min_distortion.c
min_max_operations.c
mix_voice_unvoice.c
mute_signal.c
neteq_defines.h
neteq_error_codes.h
neteq_statistics.h
normal.c
opus_interface.h
packet_buffer.c
packet_buffer.h
peak_detection.c
preemptive_expand.c
random_vector.c
real_fft.c
real_fft.h
recin.c
recout.c
resample_by_2_internal.h
rtcp.c
rtcp.h
rtp.c
rtp.h
set_fs.c
signal_mcu.c
signal_processing_library.h
spl_init.c
spl_inl.h
spl_sqrt_floor.c
split_and_insert.c
typedefs.h
unmute_signal.c
vector_scaling_operations.c
webrtc_cng.h
webrtc_neteq.c
webrtc_neteq.h
webrtc_neteq_if.c
webrtc_neteq_if.h
webrtc_neteq_internal.h
/usr/include/assert.h
/usr/include/memory.h
/usr/include/pthread.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/time.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sched.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
